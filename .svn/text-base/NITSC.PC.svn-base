/*****************************************************************
* ROTULODE.C Version 1.0 - Rev 1.2 - Feb. 18/98.
*
* nitsc.pc Programa que lista los nits
*
* Uso : nitsc codigo_emp cuenta device copias userid/password
*
* Martin A. Toloza L. Creado Febrero 18-1998.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

void titulos();
void telefonos();

double redondo();
				     /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100]; 
                                 /* Nits (C1) */
VARCHAR nombre        [50];
VARCHAR direccion     [50];
VARCHAR nomb_ciu      [30];
double  codigo_nit;
VARCHAR codigo_emp    [3];
VARCHAR cuentab       [14];
VARCHAR ano_mesb      [20];
                                 /* Telefonos (C2) */
double  telefono;
int     a2k;
VARCHAR codigo_nit_c  [6];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
                                            /* Variables globales del usuario */
#define A_F1 "###,###,###.##"
char *fmtnum(), r_t[100];

int     con_pag;                                   /* Contador de Paginas */
int     con_lin= 66;                               /* Contador de Lineas  */
int     staora =  0;
int     oraest =  0;
int     traidos=  0;
char    copias[3];

char    cadena[100];
char    cadena2[100];

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

if (argc < 7)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : nitsc codigo_emp AAAAMM cuenta device copias userid/password\n");
    printf ("      device : t salida por terminal\n");
    printf ("               Px salida por impresora (x nro printer)\n");
    printf ("               userid/password nombre usuario y password\n");
    exit (1);
   }

strcpy (codigo_emp.arr,  argv[1]);
codigo_emp.len   =       strlen(codigo_emp.arr);
strcpy (cuentab.arr,     argv[3]);
cuentab.len      =       strlen(cuentab.arr);
strcpy (device,      argv[4]);
strlow (device);
strcpy (copias,      argv[5]);

if (!strpos ("/", argv[6]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,   argv[6]);
uid.len   =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/
    EXEC SQL select y2k
             into   :a2k
             from   ano2000;
    if (sqlca.sqlcode != 0 ) {
       fprintf (stderr, "Error, No existe registro alguno en tabla Y2K (%d)\n", sqlca.sqlcode);
       exit (1);
    }
    strcpy (ano_mesb.arr,   argv[2]);
    ano_mesb.len =          strlen(ano_mesb.arr);
    periodoy2k(ano_mesb.arr,a2k);
    ano_mesb.len    =       strlen(ano_mesb.arr);

    EXEC SQL DECLARE C1 CURSOR FOR
             select n.nombre, n.direccion, c.nombre, n.codigo_nit
	     from nits n, acumulanit a, ciudades c
             where n.codigo_nit = a.codigo_nit  and
                   a.ano_mes   >=  :ano_mesb    and
                   n.codigo_ciu = c.codigo      and
                   a.cuenta     =  :cuentab     and
                   a.codigo_emp =  :codigo_emp
             group by n.nombre, n.direccion, c.nombre, n.codigo_nit
             order by n.nombre;

    EXEC SQL DECLARE C2 CURSOR FOR
             select nvl(numero,0)
             from   telefonos
             where  codigo_nit = :codigo_nit_c
             order  by orden;

    EXEC SQL OPEN C1;

    staora  = 0;
 while (staora == 0)
       {
        EXEC SQL FETCH C1 INTO :nombre, :direccion, :nomb_ciu, :codigo_nit;

        staora  = sqlca.sqlcode;
        if (staora ==  1403) break;
        if (staora == -1405)
            staora  = 0;
        else if (staora)
                 fprintf (stderr, "Error Leyendo C1 (%d)\n", staora);

        nombre.arr     [nombre.len]    = '\0';
        direccion.arr  [direccion.len] = '\0';
        nomb_ciu.arr   [nomb_ciu.len]  = '\0';

        if (con_lin > 62)
            titulos();
        telefonos();

        fprintf (fp,"%-42s %-46s %22s %15s",nombre.arr,direccion.arr,nomb_ciu.arr,cadena2);
        fprintf (fp,"\n");
        con_lin++;
 }
 cierre_impresora();

 EXEC SQL CLOSE C1;
 EXEC SQL CLOSE C2;

 EXEC SQL COMMIT WORK RELEASE;

 exit   (0);
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
 char fecha[20];
 fecha_system(fecha);
 con_pag++;
 fprintf (fp,"%s",salte_pagina);
 fprintf (fp,"%s%s%s%s\n\n",diezcpi,ancho_on,"           TEODORO TARUD & CIA LTDA.",ancho_off);
 fprintf (fp,"%20s%35s%20s%d\n\n", fecha, "   LISTADO DE DIRECCIONES  ","Pagina # ",con_pag);
 fprintf (fp,"%s%-42s %-45s %22s %15s\n\n",condensado_on,"NOMBRE","DIRECCION","CIUDAD","TELEFONO(S)");
 con_lin=6;
}

void telefonos()
{
 strcpy (cadena2,"");
 sprintf(codigo_nit_c.arr,"%5.0f",codigo_nit);
 codigo_nit_c.len =  strlen(codigo_nit_c.arr);
 traidos = 0;
 oraest  = 0;
 EXEC SQL OPEN C2;
 while (oraest == 0) {

        EXEC SQL FETCH C2 INTO :telefono;

        oraest  = sqlca.sqlcode;
        if (oraest == 1403 || traidos == 2) break;
        if (oraest != 1403 && oraest != 0) 
            fprintf (stderr, "Error Leyendo C2 (%d)\n", oraest);

        traidos++;
        if (traidos == 1) {
            sprintf (cadena,"%8.0f",telefono);
            strcpy  (cadena2,cadena);
        }
        else {
             if (telefono > 0) {
                 sprintf (cadena,"-%8.0f",telefono);
                 strcat  (cadena2,cadena);
             }
        }
 }
 EXEC SQL CLOSE C2;
}
