/*****************************************************************
* ROTULODE.C Version 1.0 - Rev 1.2 - May. 29/90.
*
* clientes.c Programa que lista los clientes
*
* Uso : clientes device copias userid/password
*
* Martin A. Toloza L. Creado Diciembre 17-1997.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <setjmp.h>
#include <stdlib.h>
#include <math.h>

void telefonos();
void contacto();
void titulos();

double redondo();
				     /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
                                 /* Nits (C1) */
VARCHAR codigo_cliente[6];
VARCHAR nomb_clie     [45];
VARCHAR nomb_ciu      [21];
VARCHAR direccion     [46];
double  nit;
int     digito;
double  codigo_nit;
float   dcto_financ;
float   ptaje;
int     lista;
VARCHAR contado       [10];
VARCHAR codigo        [40];
VARCHAR ar            [30];
VARCHAR codigo_clii   [6];
VARCHAR codigo_clif   [6];
                                 /* Ciudades (C2) */
VARCHAR nombre_ciu    [21];
VARCHAR codigo_ciu    [3];
                                 /* Telefonos (C3) */
double  telefono;
VARCHAR codigo_nit_c  [6];
                                 /* Representa (C4) */
VARCHAR nomb_repre    [31];
VARCHAR cargo         [21];

VARCHAR tipo_trabajo  [20];
double  valor_unidad;
double  valor_unidad2;

VARCHAR codigo_articulo [20];
double  valor_venta;
double  valor_venta2;

VARCHAR fecha_ini     [20];
VARCHAR fecha_fin     [20];
VARCHAR codigo_ini    [20];
VARCHAR codigo_fin    [20];
double  valor;
double  valor_total;

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;

#define A_F1 "###,###,###.##"

                                            /* Variables globales del usuario */
char *fmtnum(), r_t[80];
int     con_pag;                                   /* Contador de Paginas */
int     con_lin= 63;                                   /* Contador de Lineas  */
int	staora = 0;
int	oraest = 0;
int     traidos= 0;
char    copias[3];
char    codigo_ant[3];
char    repre[4];
char    orden[4];
char    paretto[4];

char    fechas[90];
char    fecha [70];
char    cadena[100];
char    cadena2[20];
char    cadena3[120];
double  porcentaje;
double  valor_parcial;

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

if (argc < 8)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : clienteslp lista_representante (s/n) orden de codigo(s/n) con paretto(s/n) codigo_ini codigo_fin fecha_ini fecha_fin device copias userid/password\n");
    printf ("      device : t salida por terminal\n");
    printf ("               Px salida por impresora (x nro printer)\n");
    printf ("               userid/password nombre usuario y password\n");
    exit (1);
   }

strcpy (repre,    argv[1]);
strlow (repre);
strcpy (orden,    argv[2]);
strlow (orden);
strcpy (paretto,  argv[3]);
strlow (paretto);
strcpy (codigo_ini.arr,argv[4]);
codigo_ini.len   =     strlen(codigo_ini.arr);
strcpy (codigo_fin.arr,argv[5]);
codigo_fin.len   =     strlen(codigo_fin.arr);
strcpy (fecha_ini.arr, argv[6]);
fecha_ini.len   =      strlen(fecha_ini.arr);
strcpy (fecha_fin.arr, argv[7]);
fecha_fin.len   =      strlen(fecha_fin.arr);
if ( strlen(fecha_ini.arr) != 8 || strlen(fecha_fin.arr) != 8 ) {
   printf("Error, la fecha debe ser de 8 digitos y formato AAAAMMDD");
   exit (1);
}
strcpy (device,   argv[8]);
strlow (device);
strcpy (copias,   argv[9]);

strcpy(fecha,fecha_ini.arr);
fecha_oracle3(fecha);
strcpy(cadena,fecha);
strcpy(fecha,fecha_fin.arr);
strcat(cadena," hasta ");
fecha_oracle3(fecha);
strcat(cadena,fecha);
strcpy(fechas,cadena);

if (!strpos ("/", argv[10]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,   argv[10]);
uid.len   =        strlen(uid.arr);
printf ("%s\n",uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

   EXEC SQL delete from paretto;

   if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
       fprintf (stderr, "Error Borrando Paretto (%d)\n", sqlca.sqlcode);

   EXEC SQL insert into paretto
            select codigo_cliente,
                   sum(nvl(valor_oftalmica,0)+nvl(valor_contacto,0))
            from  facturas f
            where tipo_documento  in ('F','C')                       and
                  fecha_documento >= to_date(:fecha_ini,'yyyymmdd')  and
                  fecha_documento <= to_date(:fecha_fin,'yyyymmdd')  and
                  estado_factura   = 0                               and
              not exists
              (select 'x'
               from   basura
               where  f.tipo_factura   = tipo_factura   and
                      f.tipo_documento = tipo_documento and
                      f.numero_factura = numero_factura)
            group by codigo_cliente;

   EXEC SQL select sum(valor)
            into  :valor_total
            from   paretto
            where  valor > 0;

   if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
       fprintf (stderr, "Error Insertando Paretto C1(%d)\n", sqlca.sqlcode);

   oraest  = sqlca.sqlcode;
   if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
       fprintf (stderr, "Error Leyendo Paretto C4(%d)\n", sqlca.sqlcode);

    EXEC SQL DECLARE C1 CURSOR FOR
             select cl.codigo_cliente, n.nombre, n.codigo_nit, nvl(cl.dcto_financ,0), cl.lista, decode(nvl(cl.contado,'0'),'0',' ','CONTADO'), nvl(p.codigo,'N'), op.ptaje
	     from nits n, ciudades c, clientes cl, preferencia p, opticasp op
             where n.codigo_nit       = cl.codigo_nit                     and
                   n.codigo_ciu       = c.codigo                          and
                   cl.codigo_cliente  = p.codigo_cliente(+)               and
                   cl.codigo_cliente  = op.codigo_cliente(+)              and
                   cl.estado         <> 'R'                               and
                   cl.codigo_cliente >= :codigo_ini                       and
                   cl.codigo_cliente <= :codigo_fin
             group by cl.codigo_cliente, n.nombre, n.codigo_nit, cl.dcto_financ, cl.lista, cl.contado, p.codigo, op.ptaje
             order by cl.codigo_cliente, n.nombre;

    EXEC SQL DECLARE C1A CURSOR FOR
             select cl.codigo_cliente, n.nombre, n.codigo_nit, nvl(cl.dcto_financ,0), cl.lista, decode(nvl(cl.contado,'0'),'0',' ','CONTADO'), nvl(p.codigo,'N'), op.ptaje
	     from nits n, ciudades c, clientes cl, preferencia p, opticasp op
             where n.codigo_nit       = cl.codigo_nit                     and
                   n.codigo_ciu       = c.codigo                          and
                   cl.codigo_cliente  = p.codigo_cliente(+)               and
                   cl.codigo_cliente  = op.codigo_cliente(+)              and
                   cl.estado         <> 'R'                               and
                   cl.codigo_cliente >= :codigo_ini                       and
                   cl.codigo_cliente <= :codigo_fin
             group by cl.codigo_cliente, n.nombre, n.codigo_nit, cl.dcto_financ, cl.lista, cl.contado, p.codigo, op.ptaje
             order by cl.lista desc, cl.contado, cl.dcto_financ, p.codigo, cl.codigo_cliente;

    EXEC SQL DECLARE C1B CURSOR FOR
             select cl.codigo_cliente, n.nombre, n.codigo_nit, nvl(cl.dcto_financ,0), cl.lista, decode(nvl(cl.contado,'0'),'0',' ','CONTADO'), nvl(p.codigo,'N'), op.ptaje, pr.valor
	     from nits n, ciudades c, clientes cl, preferencia p, opticasp op, paretto pr
             where n.codigo_nit       = cl.codigo_nit                     and
                   n.codigo_ciu       = c.codigo                          and
                   cl.codigo_cliente  = p.codigo_cliente(+)               and
                   cl.codigo_cliente  = op.codigo_cliente(+)              and
                   cl.estado         <> 'R'                               and
                   cl.codigo_cliente >= :codigo_ini                       and
                   cl.codigo_cliente <= :codigo_fin                       and
                   cl.codigo_cliente  = pr.codigo_cliente
             group by pr.valor, cl.codigo_cliente, n.nombre, n.codigo_nit, cl.dcto_financ, cl.lista, cl.contado, p.codigo, op.ptaje
             order by pr.valor desc, cl.codigo_cliente, n.nombre;


    EXEC SQL DECLARE C1C CURSOR FOR
             select cl.codigo_cliente, n.nombre, n.codigo_nit, nvl(cl.dcto_financ,0), cl.lista, decode(nvl(cl.contado,'0'),'0',' ','CONTADO'), nvl(p.codigo,'N'), op.ptaje, pr.valor
	     from nits n, ciudades c, clientes cl, preferencia p, opticasp op, paretto pr
             where n.codigo_nit       = cl.codigo_nit                     and
                   n.codigo_ciu       = c.codigo                          and
                   cl.codigo_cliente  = p.codigo_cliente(+)               and
                   cl.codigo_cliente  = op.codigo_cliente(+)              and
                   cl.estado         <> 'R'                               and
                   cl.codigo_cliente >= :codigo_ini                       and
                   cl.codigo_cliente <= :codigo_fin                       and
                   cl.codigo_cliente  = pr.codigo_cliente
             group by pr.valor, cl.codigo_cliente, n.nombre, n.codigo_nit, cl.dcto_financ, cl.lista, cl.contado, p.codigo, op.ptaje
             order by pr.valor desc, cl.lista desc, cl.contado, cl.dcto_financ, p.codigo, cl.codigo_cliente;

    EXEC SQL DECLARE C3 CURSOR FOR
             select nvl(numero,0)
             from   telefonos
             where  codigo_nit = :codigo_nit_c
             order  by orden;

    EXEC SQL DECLARE C4 CURSOR FOR
             select nombre, cargo
             from   representa
             where  codigo_nit = :codigo_nit_c;

    if (!strcmp(orden,"s") && !strcmp(paretto,"n")) {
    	EXEC SQL OPEN C1;
    }
    else {
           if (!strcmp(orden,"n") && !strcmp(paretto,"n")) {
    	      EXEC SQL OPEN C1A;
           }
           else {
                  if (!strcmp(orden,"s") && !strcmp(paretto,"s")) {
    	              EXEC SQL OPEN C1C;
                  }
                  else {
                         if (!strcmp(orden,"n") && !strcmp(paretto,"s")) {
    	                     EXEC SQL OPEN C1C;
                         }
                 }
           }
    }
    strcpy(codigo_ant,"**");
    staora  = 0;
 while (staora == 0) {

        if (!strcmp(orden,"s") && !strcmp(paretto,"n")) {
           EXEC SQL FETCH C1 INTO :codigo_cliente, :nomb_clie, :codigo_nit, :dcto_financ, :lista, :contado, :codigo, :ptaje;
        }
        else {
               if (!strcmp(orden,"n") && !strcmp(paretto,"n")) {
                   EXEC SQL FETCH C1A INTO :codigo_cliente, :nomb_clie, :codigo_nit, :dcto_financ, :lista, :contado, :codigo, :ptaje;
               }
               else {
                      if (!strcmp(orden,"s") && !strcmp(paretto,"s")) {
                          EXEC SQL FETCH C1B INTO :codigo_cliente, :nomb_clie, :codigo_nit, :dcto_financ, :lista, :contado, :codigo, :ptaje, :valor;
                      }
                      else {
                           if (!strcmp(orden,"n") && !strcmp(paretto,"s")) {
                               EXEC SQL FETCH C1C INTO :codigo_cliente, :nomb_clie, :codigo_nit, :dcto_financ, :lista, :contado, :codigo, :ptaje, :valor;
                           }
                     }
              }
        }
        staora  = sqlca.sqlcode;
        if (staora ==  1403) break;
        if (staora == -1405) {
            staora  = 0;
            if (!strlen(nomb_ciu.arr)) {
                strcpy (nomb_ciu.arr, "");
                nomb_ciu.len = 0;
            }
        }
        else if (staora)
                 fprintf (stderr, "Error leyendo C1 (%d)\n", staora);

        codigo_cliente.arr  [codigo_cliente.len] = '\0';
        nomb_clie.arr       [nomb_clie.len]      = '\0';
        ar.arr              [ar.len]             = '\0';
        contado.arr         [contado.len]        = '\0';
        codigo.arr          [codigo.len]         = '\0';

        strcpy(codigo_ciu.arr,codigo_cliente.arr);
        strorg(codigo_ciu.arr,1,2);

        if (con_lin > 62)
            titulos();
//      if (!strcmp(contado.arr,"CONTADO") || strcmp(codigo.arr,"N") || ptaje > 0 || dcto_financ > 0 || lista > 0) {
            if (!strcmp(codigo.arr,"N"))
                 strcpy(codigo.arr,"");
            sprintf (codigo_nit_c.arr,"%5.0f",codigo_nit);
            codigo_nit_c.len = strlen(codigo_nit_c.arr);

            telefonos();
            sprintf (cadena,"%12.0f",nit);
            if (!strcmp(paretto,"s")) {
/*               printf("pase por paretto"); getchar();*/
               valor_parcial+=valor;
               porcentaje=valor_parcial/valor_total;
               sprintf (cadena,"%9.0f",valor);
               fprintf (fp,"%01.4f %12s %5s %-58s ",porcentaje,fmtnum("zzz,zzz,zzz",cadena,r_t),codigo_cliente.arr,nomb_clie.arr);
            }
            else {
/*               printf("no es con paretto"); getchar();*/
               fprintf (fp,"%5s %-58s",codigo_cliente.arr,nomb_clie.arr);
            }
            if (!strcmp(repre,"s")) {
                contacto();
                if (strcmp(cadena3,"")) {
                    strorg(cadena3,1,43);
                    fprintf(fp,"%-43s",cadena3);
                }
            }
            sprintf (cadena,"%5.2f",dcto_financ);
            fprintf (fp,"%d %-8s %8s %10s",lista,contado.arr,fmtnum("zzz.zz",cadena,r_t),codigo.arr);
            sprintf (cadena,"%5.2f",ptaje);
            fprintf (fp,"%10s\n",fmtnum("zzz.zzzz",cadena,r_t));
            con_lin++;
            digito=0;
            ptaje=0;
//      }
 }
 if (!strcmp(paretto,"s")) {
     sprintf(cadena,"%8.2f",valor_total);
     fprintf(fp,"\n%44s %15s\n","Total Valor ",fmtnum("$zz,zzz,zzz,zz9.99",cadena,r_t));
 }

 if (con_lin > 36)
     titulos();
 fprintf (fp,"\n\n%s\n%s\n\n","TABLA DE PRECIOS                   LISTA 0 = CREDITO   LISTA 1 = CONTADO","              LISTA 0      LISTA1");
 EXEC SQL DECLARE C5 CURSOR FOR
	SELECT TIPO_TRABAJO, SUM(decode(lista,0,VALOR_UNIDAD,0)) LISTA0,
                     	     SUM(decode(lista,1,VALOR_UNIDAD-VALOR_UNIDAD*VALOR_DESCTO/100,0)) LISTA1
	FROM SERVICIOS_LEN
	WHERE TIPO_SERVICIO = 'TR'  AND
      	      SUBSTR(TIPO_TRABAJO,1,2) IN ('AR','MR','SA') AND
      	      LISTA IN (0,1)
	group by TIPO_TRABAJO
	order by TIPO_TRABAJO;

 EXEC SQL OPEN C5;
 staora  = 0;
 while (staora == 0) {

        EXEC SQL FETCH C5 INTO :tipo_trabajo, :valor_unidad, :valor_unidad2;
        staora  = sqlca.sqlcode;
        if (staora ==  1403) break;
        if (staora == -1405) {
            staora  = 0;
        }
        else if (staora)
                 fprintf (stderr, "Error leyendo C5 (%d)\n", staora);

        tipo_trabajo.arr  [tipo_trabajo.len] = '\0';
        fprintf (fp,"%-10s ",tipo_trabajo.arr);
        sprintf (cadena,"%5.2f",valor_unidad);
        fprintf (fp,"%10s  ",fmtnum("zzz,zzz",cadena,r_t));
        sprintf (cadena,"%5.2f",valor_unidad2);
        fprintf (fp,"%10s\n",fmtnum("zzz,zzz",cadena,r_t));
        con_lin++;
 }
 fprintf (fp,"\n\n");

 EXEC SQL DECLARE C6 CURSOR FOR
	select codigo_articulo, SUM(decode(lista,0,valor_venta,0)) LISTA0,
                      	        SUM(decode(lista,1,valor_venta-valor_venta*10/100,0)) LISTA1
	from precios_otr
	where substr(codigo_articulo,1,2) in ('AR','MR','SA') AND
      	      LISTA IN (0,1)
	group by codigo_articulo
	order by codigo_articulo;

 EXEC SQL OPEN C6;
 staora  = 0;
 while (staora == 0) {

        EXEC SQL FETCH C6 INTO :codigo_articulo, :valor_venta, :valor_venta2;
        staora  = sqlca.sqlcode;
        if (staora ==  1403) break;
        if (staora == -1405) {
            staora  = 0;
        }
        else if (staora)
                 fprintf (stderr, "Error leyendo C6 (%d)\n", staora);
        valor_venta2 = 0;
        codigo_articulo.arr  [codigo_articulo.len] = '\0';
        fprintf (fp,"%-10s ",codigo_articulo.arr);
        sprintf (cadena,"%5.2f",valor_venta);
        fprintf (fp,"%10s  ",fmtnum("zzz,zzz",cadena,r_t));
        sprintf (cadena,"%5.2f",valor_venta2);
        fprintf (fp,"%10s\n",fmtnum("zzz,zzz",cadena,r_t));
        con_lin++;
 }
 cierre_impresora();

 if (!strcmp(orden,"s")) {
    EXEC SQL CLOSE C1;
 }
 else {
    EXEC SQL CLOSE C1A;
 }
 EXEC SQL CLOSE C3;
 EXEC SQL CLOSE C4;
 EXEC SQL CLOSE C5;
 EXEC SQL CLOSE C6;

 EXEC SQL COMMIT WORK RELEASE;

 exit   (0);
}

void telefonos()
{
 strcpy(cadena2,"");
 traidos = 0;
 oraest  = 0;
 EXEC SQL OPEN C3;
 while (oraest == 0) {

        EXEC SQL FETCH C3 INTO :telefono;

        oraest  = sqlca.sqlcode;
        if (oraest == 1403 || traidos == 2) break;
        if (oraest != 1403 && oraest != 0)
            fprintf (stderr, "Error leyendo C3 (%d)\n", oraest);

        traidos++;
        if (traidos == 1) {
            sprintf (cadena,"%8.0f",telefono);
            strcpy  (cadena2,cadena);
        }
        else {
             if (telefono > 0) {
                 sprintf (cadena,"-%8.0f",telefono);
                 strcat  (cadena2,cadena);
             }
        }
 }
 EXEC SQL CLOSE C3;
}

void contacto()
{
 strcpy(cadena3,"      ");
 traidos = 0;
 oraest  = 0;
 EXEC SQL OPEN C4;
 while (oraest == 0) {

        EXEC SQL FETCH C4 INTO :nomb_repre, :cargo;

        oraest  = sqlca.sqlcode;
        if (oraest == 1403 || traidos == 2) break;
        if (oraest != 1403 && oraest != 0)
            fprintf (stderr, "Error leyendo C4 (%d)\n", oraest);

        nomb_repre.arr  [nomb_repre.len] = '\0';
        cargo.arr       [cargo.len] = '\0';
        traidos++;
        if (traidos == 1) {
            strcat  (cadena3,nomb_repre.arr);
//            strcat  (cadena3,", ");
//            strcat  (cadena3,cargo.arr);
        }
        else {
/*
             if (strcmp(nomb_repre.arr,"")) {
                 strcat(cadena3," - ");
                 strcat(cadena3,nomb_repre.arr);
                 strcat(cadena3,", ");
                 strcat(cadena3,cargo.arr);
             }
*/
        }
 }
 EXEC SQL CLOSE C4;
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
 char fecha[100];
 con_pag++;

 fprintf (fp,"%s",salte_pagina);
 fprintf (fp,"%s%s%s%s\n\n",diezcpi,ancho_on,"LABORATORIO OFTALMICO DE LA COSTA S.A.",ancho_off);
 fecha_system(fecha);
 fprintf (fp,"%20s%35s%20s%d\n\n",fecha," LISTADO DE CLIENTES PREMIUN","Pagina # ",con_pag);

 strful(cadena,(int)(90-strlen(fechas))/2,' ');
 fprintf(fp,"%s%s\n\n",cadena,fechas);

 fprintf (fp,"%s\n\n",nombre_ciu.arr);
 if (!strcmp(repre,"s")) {
     if (!strcmp(paretto,"s")) {
        fprintf (fp,"%s%s %12s %s %-50s %-29s %-30s %-30s\n",  condensado_on,"      ","VALOR  ","      ","      ","             ","    ACUERDO COMERCIAL       ","   PREFERENCIAS   ");
        fprintf (fp,"%s%s %12s %s %-50s %-29s %-30s %-30s\n\n",condensado_on,"     %","PARETTO","CODIGO","NOMBRE","REPRESENTANTE","L.PRECIO FACTURACION DC.FIN.","AR       SERVICIOS");
     }
     else {
        fprintf (fp,"%s%s %-49s %-29s %-30s %-30s\n",  condensado_on,"      ","      ","             ","    ACUERDO COMERCIAL       ","   PREFERENCIAS   ");
        fprintf (fp,"%s%s %-49s %-29s %-30s %-30s\n\n",condensado_on,"CODIGO","NOMBRE","REPRESENTANTE","L.PRECIO FACTURACION DC.FIN.","AR       SERVICIOS");
     }
 }
 else {
     if (!strcmp(paretto,"s")) {
        fprintf (fp,"%s%s %12s %s %-50s %-30s %-30s\n",  condensado_on,"      ","VALOR  ","      ","      ","    ACUERDO COMERCIAL       ","   PREFERENCIAS   ");
        fprintf (fp,"%s%s %12s %s %-50s %-30s %-30s\n\n",condensado_on,"     %","PARETTO","CODIGO","NOMBRE","L.PRECIO FACTURACION DC.FIN.","AR       SERVICIOS");
     }
     else {
        fprintf (fp,"%s%s %-49s %-30s %-30s\n",  condensado_on,"      ","      ","    ACUERDO COMERCIAL       ","   PREFERENCIAS   ");
        fprintf (fp,"%s%s %-49s %-30s %-30s\n\n",condensado_on,"CODIGO","NOMBRE","L.PRECIO FACTURACION DC.FIN.","AR       SERVICIOS");
     }
 }
 con_lin=12;
}
