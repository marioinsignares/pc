/*****************************************************************
* ROTULODE.C Version 1.0 - Rev 1.2 - May. 29/90.
*
* clienetq.pc Programa que lista los clientes
*
* Uso : clienetq cliente_ini cliente_fin device copias userid/password
*
* Martin A. Toloza L. Creado Diciembre 18-1997.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <setjmp.h>
#include <stdlib.h>
#include <sqlproto.h>
#include <math.h>


				     /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100]; 
                                 /* Nits (C1) */
VARCHAR codi_clie     [4][6];
VARCHAR nomb_clie     [4][45];
VARCHAR nomb_ciud     [4][21];
VARCHAR direccion     [4][46];
double  telefono      [4];
double  nit           [4];
int     digito        [4];
VARCHAR codigo_clii   [6];
VARCHAR codigo_clif   [6];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
                                            /* Variables globales del usuario */
char *fmtnum(), r_t[80];
int     con_pag;                                   /* Contador de Paginas */
int     con_lin;                                   /* Contador de Lineas  */
int	staora = 0;
int	traidos= 0;
int	num_ret= 0;
int	loop_1 = 0;
char    copias[3];
char    cadena[100];

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int     k;
int	status = 0;

if (argc < 3)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : clientes codigo_ini codigo_fin device copias");
    printf ("      userid/password\n");
    printf ("      device : t salida por terminal\n");
    printf ("               Px salida por impresora (x nro printer)\n");
    printf ("               userid/password nombre usuario y password\n");
    exit (1);
   }

strcpy (codigo_clii.arr, argv[1]);
codigo_clii.len  =       strlen(codigo_clii.arr);
strcpy (codigo_clif.arr, argv[2]);
codigo_clif.len  =       strlen(codigo_clif.arr);
strcpy (device,          argv[3]);
strlow (device);
strcpy (copias,          argv[4]);

if (!strpos ("/", argv[5]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,   argv[5]);
uid.len   =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

    EXEC SQL DECLARE C1 CURSOR FOR
             select cl.codigo_cliente, n.nombre, nvl(n.nombre_muni,c.nombre),
                    n.direccion, max(nvl(t.numero,0)), n.nit, nvl(digito,-1)
	     from nits n, ciudades c, telefonos t, clientes cl
             where n.codigo_nit       = cl.codigo_nit               and
                   n.codigo_ciu       = c.codigo                    and
                   n.codigo_nit       = t.codigo_nit(+)             and
                   cl.codigo_cliente >=  :codigo_clii               and
                   cl.codigo_cliente <=  :codigo_clif
             group by cl.codigo_cliente, n.nombre, n.nombre_muni, c.nombre,
                       n.direccion, n.nit, digito
             order by cl.codigo_cliente;

    EXEC SQL OPEN C1;
    staora  = 0;
    traidos = 0;
    num_ret = 0;
    fprintf (fp,"%s%s\r",line_feed8vo,enfatizado_on);
    while (staora == 0) {

          for (loop_1 = 0; loop_1 < 4; loop_1++) {
              strcpy (codi_clie[loop_1].arr, "");
              strcpy (nomb_clie[loop_1].arr, "");
              strcpy (nomb_ciud[loop_1].arr, "");
              strcpy (direccion[loop_1].arr, "");
          }
          EXEC SQL FETCH C1 INTO :codi_clie, :nomb_clie, :nomb_ciud,
                                 :direccion, :telefono, :nit, :digito;

          staora  = sqlca.sqlcode;
          traidos = sqlca.sqlerrd[2];
       /* if (staora ==  1403) break; */
          if (staora == -1405)
              staora  = 0;
          else if (staora)
                   fprintf (stderr, "Error leyendo C1 (%d)\n", staora);

          for (loop_1 = 0; loop_1 < (traidos - num_ret); loop_1++) {
              codi_clie[loop_1].arr   [codi_clie[loop_1].len] = '\0';
              nomb_clie[loop_1].arr   [nomb_clie[loop_1].len] = '\0';
              nomb_ciud[loop_1].arr   [nomb_ciud[loop_1].len] = '\0';
              direccion[loop_1].arr   [direccion[loop_1].len] = '\0';
              strorg(nomb_clie[loop_1].arr,1,35);
              k = loop_1;
          }
          num_ret = traidos;
    fprintf (fp,"%s%-31s  %-31s  %-31s  %-31s\n\n\n",diezcpi,codi_clie[0].arr,codi_clie[1].arr,codi_clie[2].arr,codi_clie[3].arr);
    fprintf (fp,"%s%s%s%-35s  %-35s  %-35s  %-35s\n\n",elite,condensado_on,alto_on,nomb_clie[0].arr,nomb_clie[1].arr,nomb_clie[2].arr,nomb_clie[3].arr);
    fprintf (fp,"%-35s  %-35s  %-35s  %-35s%s%s%s\n\n\n\n",nomb_ciud[0].arr,nomb_ciud[1].arr,nomb_ciud[2].arr,nomb_ciud[3].arr,alto_off,condensado_off,diezcpi);
    }
 fprintf (fp,"%s%s\r",line_feed6,enfatizado_off);

 cierre_impresora();

 EXEC SQL CLOSE C1;

 EXEC SQL COMMIT WORK RELEASE;

 exit   (0);
}
