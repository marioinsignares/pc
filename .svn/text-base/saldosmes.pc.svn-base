/*****************************************************************
* BALANCEP.C Version 1.0 - Rev 1.2 - Jun. 30/92.
*
* saldosmes.c. Saldos mensuales y su movimiento debito y credito
*
* Uso : codigo_emp aaaamm device copias userid/password\n");
*
* Mario E. Santiago I. Creado Noviembre 19-1993.
* Teodoro Tarud & Cia Ltda.
*
*/
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <setjmp.h>
#include <stdlib.h>
#include <math.h>

void titulos();
void imprime_anterior();
void imprime_actual();
				     /* Parametros de comunicacion con ORACLE */

EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];

VARCHAR nomb_emp   [60];
double  nit;
int     digito;
VARCHAR codigo_emp [3];

VARCHAR cuenta     [15];
VARCHAR nombre_cta [61];
double  valor_deb;
double  valor_cre;
VARCHAR db_cr      [3];
VARCHAR ano_mesi   [20];
VARCHAR ano_mesa   [20];
VARCHAR cuentab    [15];

VARCHAR cuentam    [15];
VARCHAR nombre_ctam[61];
double  valor_debm;
double  valor_crem;
VARCHAR db_crm     [3];
double  ano_mesd;

VARCHAR sucursali  [10];
VARCHAR sucursalf  [10];
VARCHAR cen_cosi   [04];
VARCHAR cen_cosf   [04];
VARCHAR nomb_suci  [12];
VARCHAR nomb_sucf  [12];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;

                                            /* Variables globales del usuario */
int     con_pag=0;                                   /* Contador de Paginas */
int     con_lin=66;                                   /* Contador de Lineas  */
int     cl;
char    ano_mesx[20];
char    anoa[20];
        		                /* Variables de recepcion para datos */
char *fmtnum(), r_t[150];
int     mesi;
int     anoi;
double  tot_deb;
double  tot_cre;
double  tot_debm;
double  tot_crem;
double  saldos;
char    cadena[150];
char    cadena2[150];
char    login[20];
char    copias[5];
int     staora=0;

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

    if (argc < 7)
       {
	printf ("Incorrecta invocacion:\n");
        printf ("Uso : codigo_emp sucursali sucursalf c.costoi c.costof ano(AAAA) cuenta copias device userid/password\n");
	printf ("      device : t salida por terminal\n");
	printf ("      device : s salida standar     \n");
	printf ("               Px salida por impresora (x nro printer)\n");
	printf ("               userid/password nombre usuario y password\n");
        exit (1);
       }
       strcpy (codigo_emp.arr, argv[1]);
       codigo_emp.len =        strlen(codigo_emp.arr);

       strcpy (sucursali.arr,  argv[2]);
       sucursali.len  =        strlen(sucursali.arr);
       strcpy (sucursalf.arr,  argv[3]);
       sucursalf.len  =        strlen(sucursalf.arr);
       strcpy (cen_cosi.arr,   argv[4]);
       cen_cosi.len   =        strlen(cen_cosi.arr);
       strcpy (cen_cosf.arr,   argv[5]);
       cen_cosf.len   =        strlen(cen_cosf.arr);

       strcpy (anoa,           argv[6]);
       anoi=atoi(anoa);
       strcpy (cuentab.arr,    argv[7]);
       cuentab.len    =        strlen(cuentab.arr);
       strcpy (copias,         argv[8]);
       strcpy (device,         argv[9]);
       strlow (device);

    if (!strpos ("/", argv[10]))
       {
        printf ("user id/password incorrecto.\n");
	exit (1);
       }

    strcpy (uid.arr,    argv[10]);
    uid.len =          strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/

    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

    sprintf (ano_mesi.arr,"%d%02d",anoi-1,13);
    ano_mesi.len = strlen(ano_mesi.arr);
    sprintf (ano_mesa.arr,"%d%02d",anoi,1);
    ano_mesa.len = strlen(ano_mesa.arr);

    EXEC SQL select n.nombre, n.nit, n.digito
                    into :nomb_emp, :nit, :digito
             from   nits n, empresas e
             where  n.codigo_nit = e.codigo_nit and
                    e.codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Empresa (%d)\n", sqlca.sqlcode);

/* Cx */

    EXEC SQL select nombre
             into  :nomb_suci
             from   sucursal
             where  sucursal   = :sucursali   and
                    codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode == 0)
        nomb_emp.arr [nomb_emp.len] = '\0';

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Sucursali=%s (%d)\n",sucursali.arr, sqlca.sqlcode);

/* Cx1 */

    EXEC SQL select nombre
             into  :nomb_sucf
             from   sucursal
             where  sucursal   = :sucursalf   and
                    codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode == 0)
        nomb_emp.arr [nomb_emp.len] = '\0';

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Sucursali=%s (%d)\n",sucursali.arr, sqlca.sqlcode);

    EXEC SQL select p.cuenta,
                    p.nombre,
                    sum(nvl(a.valor_deb,0)),
                    sum(nvl(a.valor_cre,0)),
                    p.db_cr
             into   :cuenta, :nombre_cta, :valor_deb,
                    :valor_cre, :db_cr
             from   acumulados a, plan p
             where  a.ano_mes(+) >= :ano_mesi            and
                    a.ano_mes(+) <  :ano_mesa            and
       	            a.sucursal   >= (:sucursali)         and
                    a.sucursal   <= (:sucursalf)         and
                    a.cen_cos    >= to_number(:cen_cosi) and
                    a.cen_cos    <= to_number(:cen_cosf) and
                    p.cuenta      =
                    substr(a.cuenta(+),1,decode(to_number(nivel),0,1,to_number(nivel)*2)) and
                    p.cuenta      = :cuentab             and
                    p.codigo_emp  = a.codigo_emp(+)      and
                    p.codigo_emp  = :codigo_emp
             group by p.cuenta, p.nombre, p.db_cr;

        staora  = sqlca.sqlcode;
/*        if (sqlca.sqlcode){
           strcpy(cuenta.arr,"9999999999");
           cuenta.len = strlen(cuenta.arr);
        }
        else {
*/
            cuenta.arr      [cuenta.len]     = '\0';
            nombre_cta.arr  [nombre_cta.len] = '\0';
            db_cr.arr       [db_cr.len]      = '\0';
/*
        }
*/

    EXEC SQL DECLARE C3 CURSOR FOR
    select p.cuenta,
           p.nombre,
           sum(nvl(a.valor_deb,0)),
           sum(nvl(a.valor_cre,0)),
           p.db_cr,
           a.ano_mes
    from   acumulados a, plan p
    where  a.ano_mes    >= :ano_mesa              and
           a.sucursal   >= (:sucursali)           and
           a.sucursal   <= (:sucursalf)           and
           a.cen_cos    >= to_number(:cen_cosi)   and
           a.cen_cos    <= to_number(:cen_cosf)   and
           p.codigo_emp  = :codigo_emp		  and
           p.codigo_emp  = a.codigo_emp           and
           p.cuenta      =
           substr(a.cuenta,1,decode(to_number(nivel),0,1,to_number(nivel)*2)) and
           p.cuenta      = :cuentab
    group by p.cuenta, p.nombre, p.db_cr, ano_mes
    order by ano_mes;

    EXEC SQL OPEN C3;

    EXEC SQL FETCH C3 INTO :cuentam, :nombre_ctam, :valor_debm,
                           :valor_crem, :db_crm, :ano_mesd;

    staora  = sqlca.sqlcode;
/*
    if (sqlca.sqlcode) {
       strcpy(cuentam.arr,"9999999999");
       cuentam.len = strlen(cuentam.arr);
    }
    else {
*/
          cuentam.arr      [cuentam.len]     = '\0';
          nombre_ctam.arr  [nombre_ctam.len] = '\0';
          db_crm.arr       [db_crm.len]      = '\0';
/*
    }
*/
    con_lin=66;

    titulos();
    imprime_actual();

    cierre_impresora();

    EXEC SQL CLOSE C3;

    EXEC SQL COMMIT WORK RELEASE;
    exit   (0);
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
 con_pag++;
 if (!strcmp(codigo_emp.arr,"3"))
    strcpy(nomb_emp.arr," ");
 fprintf(fp,"%s",salte_pagina);
 strful(cadena,(int)(42-strlen(nomb_emp.arr))/2,' ');
 fprintf(fp,"%s%s%s%s%s\n",diezcpi,ancho_on,cadena,nomb_emp.arr,ancho_off);
 sprintf (cadena,"%12.0f",nit);
 fprintf (fp,"%s%s%25s %18s",condensado_on,ancho_on,"NIT :",fmtnum("zzz,zzz,zzz,zzz",cadena,r_t));
 if (digito > 0) {
    sprintf (cadena,"%d",digito);
    fprintf (fp,"-%s",fmtnum("z",cadena,r_t));
 }
 else if (digito == 0)
         fprintf (fp,"-%s","0");
 sprintf(cadena2,"SUCURSAL: %s %s A %s %s C.COSTO: %s A %s",sucursali.arr,nomb_suci.arr,sucursalf.arr,nomb_sucf.arr,cen_cosi.arr,cen_cosf.arr);
 strful(cadena,(int)(80-strlen(cadena2))/2,' ');
 fprintf(fp,"\n%s%s%s%s",condensado_on,ancho_on,cadena,cadena2);
 fprintf(fp,"\n%20s%s%s\n\n"," ","SALDOS MENSUALES DE CUENTAS",ancho_off);
 fecha_system(cadena);
 fprintf(fp,"%s %-44s %s %d","FECHA PROCESO : ",cadena,"PERIODO : ",anoi);
 fprintf(fp,"%54s %d%s\n\n","PAGINA ",con_pag,condensado_off);
 fprintf (fp,"%sCUENTA : %-10s %s%s\n\n",enfatizado_on,cuentam.arr,nombre_ctam.arr,enfatizado_off);
 imprime_anterior();
 fprintf(fp,"%s%48s\n\n",diezcpi,"      DEBITOS         CREDITOS      SALDO ACTUAL");
 con_lin = 9;
}

void imprime_anterior()
{
  sprintf (cadena,"%9.2f",valor_deb-valor_cre);
  fprintf (fp,"SALDO ANTERIOR : %15s",fmtnum("zzzz,zzz,zz9.99",cadena,r_t));
  saldos = valor_deb-valor_cre;
}

void imprime_actual()
{
  while(!staora) {
       sprintf (ano_mesx,"%6.0f",ano_mesd);
       strorg  (ano_mesx,5,2);
       mesi=atoi(ano_mesx);
       fprintf (fp,"%6.0f - %s",ano_mesd,mec[mesi-1]);
       sprintf (cadena,"%9.2f",valor_debm);
       fprintf (fp,"%34s",fmtnum("zzzz,zzz,zz9.99",cadena,r_t));
       sprintf (cadena,"%9.2f",valor_crem);
       fprintf (fp,"%17s",fmtnum("zzzz,zzz,zz9.99",cadena,r_t));
       saldos+=valor_debm-valor_crem;
       sprintf (cadena,"%9.2f",saldos);
       fprintf (fp,"%18s\n",fmtnum("zz,zzz,zzz,zz9.99",cadena,r_t));
       con_lin ++;
       EXEC SQL FETCH C3 INTO :cuentam, :nombre_ctam, :valor_debm,
                              :valor_crem, :db_crm, :ano_mesd;
       staora  = sqlca.sqlcode;
       cuentam.arr      [cuentam.len]     = '\0';
       nombre_ctam.arr  [nombre_ctam.len] = '\0';
       db_crm.arr       [db_crm.len]      = '\0';
  }
}
