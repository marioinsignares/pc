/*****************************************************************
* NOTACRE.C Version 1.0 - Rev 1.2 - Sep 07/2005.
*
* notacre.c. Comprobante de nota crédito
*
* Uso : codigo_emp aamm clase comprobante device userid/password\n";
*
* Mario E. Santiago I. Creado Septiembre de 2005.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <setjmp.h>
#include <stdlib.h>
#include <math.h>
				     /* Parametros de comunicacion con ORACLE */

EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
                                            /* Variables globales del usuario */
VARCHAR codigo_emp [3];
VARCHAR vecinf     [20][14];
VARCHAR ano_mes    [20];
VARCHAR tipo_ini   [10];
VARCHAR tipo_fin   [10];
VARCHAR cmp_ini    [7];
VARCHAR cmp_fin    [8];
VARCHAR veca       [14];
VARCHAR vecb       [14];
VARCHAR vecc       [14];
VARCHAR vecd       [14];

/* Tabla MOVTO_C y MOVTO_D */

VARCHAR infa       [14];
VARCHAR infb       [14];
VARCHAR infc       [14];
VARCHAR infd       [14];
double  comprobante;
double  consecutivo;
VARCHAR clase      [3];
VARCHAR descripcion[41];
VARCHAR fecha      [20];
int     tipo;
VARCHAR cuenta     [15];
double  codigo_nit;
double  valor_deb;
double  valor_cre;
VARCHAR estado     [2];
double	wval_deb;
double	wval_cre;
VARCHAR nomb_emp   [51];
VARCHAR nomb_nit   [51];
VARCHAR codigo     [15];
VARCHAR cuentab    [15];
double  cons;
VARCHAR cuentax    [15];
double  codigo_nitb;
double  nit;
int     digito;
double  numero_documento;
VARCHAR fecha_documento  [20];
VARCHAR codigo_cliente   [10];
VARCHAR contado          [05];
VARCHAR nombre           [45];
VARCHAR material         [4];
VARCHAR motivo           [55];
double  nit_cli;
int     digito_cli;
int     concepto;
double  numero_orden;
double  numero;

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;

int     traidos    =0;
int     staora     =0;
int     num_ret    =0;
int     loop_2     =0;
int     loop_13    =0;
int     con_pag    =0;                                /* Contador de Paginas */
int     con_lin    =66;                               /* Contador de Lineas  */
int     cl;
char    vecmov     [5][14];
char    vecplan    [5][14];
char    asiento    [2];
char    orden      [2];
char    ordenar    [30];
char    timbrado   [2];
        		                /* Variables de recepcion para datos */
char *fmtnum(), r_t[100];
int     pos;

double  doble;
double  x;
double  num;
int     diai;
int     mesi;
int     anoi;
int     tipo_an;
int     i;
int     j;
int     k;
int     l;
int     li = 1;
double  tot_deb[2];
double  tot_cre[2];
char    cadena[100];
char    cue[100];
char    login[30];

void titulos();
void lista_creditos();
void lista_debitos();
void totales();

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;
int     nrec   = 0;
    if (argc < 6)
       {
	printf ("Incorrecta invocacion:\n");
        printf ("Uso : codigo_emp aaaamm clase\n");
        printf ("      comprobante device userid/password\n");
	printf ("      device : t salida por terminal\n");
	printf ("      device : s salida standar     \n");
	printf ("               Px salida por impresora (x nro printer)\n");
	printf ("               userid/password nombre usuario y password\n");
        exit (1);
       }
       strcpy (codigo_emp.arr, argv[1]);
       codigo_emp.len  =       strlen(codigo_emp.arr);
       strcpy (clase.arr,      argv[3]);
       clase.len       =       strlen(clase.arr);
       strcpy (cmp_ini.arr,    argv[4]);
       cmp_ini.len     =       strlen(cmp_ini.arr);
       strcpy (device,         argv[5]);
       strlow (device);

    if (!strpos ("/", argv[6]))
       {
        printf ("user id/password incorrecto.\n");
	exit (1);
       }

    strcpy (uid.arr,    argv[6]);
    uid.len = strlen(uid.arr);
/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);
    busco_impresora(device);
    abre_impresora("1");

    strcpy (ano_mes.arr,    argv[2]);
    ano_mes.len    =        strlen(ano_mes.arr);
    strcpy (cadena,         ano_mes.arr);
    anoi           =        atoi(cadena);
    strcpy (cadena,         ano_mes.arr);
    strorg (cadena,5,2);
    mesi           =        atoi(cadena);
    if (mesi==13)
        mesi=12;

    EXEC SQL select numero_documento, fecha_documento, c.codigo_cliente,
                    c.contado, n.nombre, n.nit, n.digito, material, motivo,
                    consecutivo, concepto
             into  :numero_documento, :fecha_documento, :codigo_cliente,
                   :contado, :nombre, :nit_cli, :digito_cli, :material,
                   :motivo, :consecutivo, :concepto
             from ajusteent_c c, clientes cl, nits n
             where c.codigo_emp       = to_number(:codigo_emp) and
                   c.numero_documento = to_number(:cmp_ini)    and
                  (c.concepto         = 4                      or
                   c.concepto         = 7                      or
                   c.concepto         = 8                      or
                   c.concepto         = 9)                     and
                   c.codigo_cliente   = cl.codigo_cliente      and
                   cl.codigo_nit      = n.codigo_nit;

    codigo_cliente.arr[codigo_cliente.len] = '\0';
    contado.arr       [contado.len]        = '\0';
    nombre.arr        [nombre.len]         = '\0';
    material.arr      [material.len]       = '\0';
    motivo.arr        [motivo.len]         = '\0';

    EXEC SQL DECLARE C2A CURSOR FOR
          select nvl(infa,'0'), decode(clase,'XX','0',nvl(infb,'0')),
                 nvl(infc,'0'), nvl(infd,'0'),
                 comprobante, clase, descripcion, fecha, tipo, cuenta,
                 nvl(codigo_nit,970), nvl(valor_deb,0), nvl(valor_cre,0), estado
	  from   movto_d d, movto_c c
          where  d.codigo_emp(+)  = c.codigo_emp                  and
                 d.ano_mes(+)     = c.ano_mes                     and
                 d.consecutivo(+) = c.consecutivo                 and
                 c.codigo_emp     = to_number(:codigo_emp)        and
                 c.ano_mes        = to_number(:ano_mes)           and
                 c.clase          =           :clase              and
                 c.comprobante    = to_number(:cmp_ini)
          order by tipo, comprobante;

    EXEC SQL DECLARE C2B CURSOR FOR
          select numero_orden
	  from   ajusteent_f
          where  consecutivo      = :consecutivo                  and
                 ano_mes          = to_number(:ano_mes)
          order by numero_orden;

     EXEC SQL DECLARE C13 CURSOR FOR
              select inf
              from   infacu;

    EXEC SQL OPEN C13;

    staora  = 0;
    traidos = 0;
    num_ret = 0;
    while (staora == 0) {

          EXEC SQL FETCH C13 INTO :vecinf;

          if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
             fprintf (stderr, "Error leyendo C13 (%d)\n", sqlca.sqlcode);

          staora  = sqlca.sqlcode;
          traidos = sqlca.sqlerrd[2];

          for (loop_13 = 0; loop_13 < (traidos - num_ret); loop_13++) {
              vecinf[loop_13].arr  [vecinf[loop_13].len] = '\0';
          }
          num_ret = traidos;
    }
    k = traidos;
    EXEC SQL CLOSE C13;

    EXEC SQL DECLARE C14 CURSOR FOR
          select numero
	  from   redimidos
          where  codigo_cliente   = :codigo_cliente     and
                 nota             = :numero_documento
          order by numero;

    EXEC SQL select n.nombre, n.nit, n.digito
                    into :nomb_emp, :nit, :digito
             from   nits n, empresas e
             where  n.codigo_nit = e.codigo_nit and
                    e.codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo EMPRESAS (%d)\n", sqlca.sqlcode);

    EXEC SQL OPEN C2A;

    staora  = 0;
    traidos = 0;
    num_ret = 0;
    titulos();

    while (staora == 0) {

          EXEC SQL FETCH C2A INTO :infa, :infb, :infc, :infd, :comprobante,
                                  :clase, :descripcion,
                                  :fecha, :tipo,:cuenta, :codigo_nit,
                                  :valor_deb,   :valor_cre, :estado;

          staora  = sqlca.sqlcode;
          if (staora == -1405)
              staora  = 0;
          else if (staora != 1403 ) {
             infa       .arr  [infa       .len] = '\0';
             infb       .arr  [infb       .len] = '\0';
             infc       .arr  [infc       .len] = '\0';
             infd       .arr  [infd       .len] = '\0';
             clase      .arr  [clase      .len] = '\0';
             descripcion.arr  [descripcion.len] = '\0';
             fecha      .arr  [fecha      .len] = '\0';
             cuenta     .arr  [cuenta     .len] = '\0';
             estado     .arr  [estado     .len] = '\0';

             strcpy (vecmov[0], infa.arr);
             strcpy (vecmov[1], infb.arr);
             strcpy (vecmov[2], infc.arr);
             strcpy (vecmov[3], infd.arr);

             strcpy(cue,"6135");
             lista_creditos();

             num_ret = traidos;
          }
          else
             fprintf (stderr, "Error leyendo C2a (%d)\n", staora);
    }

    EXEC SQL CLOSE C2A;

/*****************************************
** COMMIT LOS CAMBIOS A LA BASE DE DATOS *
******************************************/
    if (concepto == 4) {
       fprintf(fp,"\n%8sNOTA: Devolucio\b'n de lentes "," ");
       if (!strcmp(material.arr,"A")) {
          fprintf(fp,"ofta\b'lmicos\n");
       }
       else {
          fprintf(fp,"de contacto\n");
       }
       con_lin+=2;
    }
    fprintf(fp,"%8s%s "," ",motivo.arr);
    if (concepto == 9) {
       EXEC SQL OPEN C14;
       staora  = 0;
       traidos = 0;
       num_ret = 0;
       EXEC SQL FETCH C14 INTO :numero;

       staora  = sqlca.sqlcode;
       if (staora == -1405)
           staora  = 0;
       else if (staora)
               fprintf (stderr, "Error leyendo C14 (%d)\n", staora);
       if (staora == 0)
           fprintf(fp,"%s","No.: ");
       while (staora == 0) {
             if (numero > 0 && staora == 0) {
                if (li==1) {
                    if (++l > 4) {
                       fprintf(fp,"\n");
                       con_lin++;
                       l=0;
                       li=0;
                       fprintf(fp,"%8s"," ");
                    }
                    fprintf(fp,"%3.0f ",numero);
                }
                else {
                     if (++l > 15) {
                        fprintf(fp,"\n");
                        con_lin++;
                        l=0;
                        fprintf(fp,"%8s"," ");
                     }
                     fprintf(fp,"%3.0f ",numero);
                }
             }
             EXEC SQL FETCH C14 INTO :numero;
             staora  = sqlca.sqlcode;
             if (staora == -1405)
                 staora  = 0;
             else if (staora)
                      fprintf (stderr, "Error leyendo C14 (%d)\n", staora);
       }
       fprintf(fp,"\n");
       con_lin++;
       EXEC SQL CLOSE C14;
    }

    EXEC SQL OPEN C2B;

    staora  = 0;
    traidos = 0;
    num_ret = 0;
    EXEC SQL FETCH C2B INTO :numero_orden;

    staora  = sqlca.sqlcode;
    if (staora == -1405)
        staora  = 0;
    else if (staora)
            fprintf (stderr, "Error leyendo C2B (%d) no_mes:(%s) consecutivo:(%12.0f)\n", staora, ano_mes.arr, consecutivo );
    if (concepto == 4) {
       if (staora == 0)
          fprintf(fp,"%8s%s"," ","ORDEN: ");
       while (staora == 0) {
             if (numero_orden > 0 && staora == 0)
                fprintf(fp,"%10.0f ",numero_orden);
             EXEC SQL FETCH C2B INTO :numero_orden;
             staora  = sqlca.sqlcode;
             if (staora == -1405)
                 staora  = 0;
             else if (staora)
                      fprintf (stderr, "Error leyendo C2B (%d)\n", staora);
       }
       fprintf(fp,"\n");
       con_lin++;

    }

    EXEC SQL CLOSE C2B;

    for (i=con_lin;i<=20;i++) {
        fprintf(fp,"\n");
        con_lin++;
    }
    totales();
    for (i=con_lin;i<=32;i++) {
        fprintf(fp,"\n");
        con_lin++;
    }

    EXEC SQL COMMIT WORK RELEASE;

    cierre_impresora();

    exit   (0);
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
 extern char mes[12][12];
 char   fecha_s[40];
 fecha_system(fecha_s);

 fprintf(fp,"\n%s%8s%s\n",diezcpi," ",nomb_emp.arr);
 sprintf (cadena,"%12.0f",nit);
 fprintf (fp,"%13s %-s"," ",fmtnum("zzz,zzz,zzz,zzz",cadena,r_t));
 if (digito > 0) {
     sprintf (cadena,"%d",digito);
     fprintf (fp,"-%s",fmtnum("z",cadena,r_t));
 }
 else if (digito == 0)
          fprintf (fp,"-%s","0");
 sprintf (cadena,"%12.0f",numero_documento);
 fprintf (fp,"%36s %s\n"," ",fmtnum("zzz,zzz",cadena,r_t));

 strorg(codigo_cliente.arr,1,38);
 fprintf(fp,"%8s%-6s\n\n%8s%-38s"," ",codigo_cliente.arr," ",nombre.arr);
 sprintf (cadena,"%12.0f",nit_cli);
 fprintf (fp,"%-14s",fmtnum("zz,zzz,zzz,zzz",cadena,r_t));
 if (digito > 0) {
     sprintf (cadena,"%d",digito_cli);
     fprintf (fp,"-%s",fmtnum("9",cadena,r_t));
 }
 else if (digito == 0)
          fprintf (fp,"-%s","0");

 strcpy(cadena,fecha_documento.arr);
 fecha_numero(cadena);
 fprintf (fp,"    %-10s\n\n\n\n\n\n",cadena);
 con_lin = 9;
}

void lista_debitos()
{

         strcpy  (cuentab.arr, cuenta.arr);
         cuentab.len = strlen(cuentab.arr);

         if (strcmp(estado.arr, "2")) {

            EXEC SQL select infa, infb, infc, infd
                            into :veca, :vecb, :vecc, :vecd
                     from   plan
                     where  codigo_emp = (:codigo_emp) and
                            cuenta     = (:cuentab);

            if (sqlca.sqlcode == 1403)
               printf ("Cuentab (%-s) no existe\n", cuentab.arr);

            veca.arr[veca.len] = '\0';
            vecb.arr[vecb.len] = '\0';
            vecc.arr[vecc.len] = '\0';
            vecd.arr[vecd.len] = '\0';
            strcpy (vecplan[0], veca.arr);
            strcpy (vecplan[1], vecb.arr);
            strcpy (vecplan[2], vecc.arr);
            strcpy (vecplan[3], vecd.arr);

         }
         strcpy(cuentab.arr,cuenta.arr);
         strorg(cuentab.arr,1,4);
         if (strcmp(cuentab.arr,cue)) {
            if (valor_deb > 0) {
               fprintf (fp,"%8s%-13s"," ",cuenta.arr);
               sprintf (cadena,"%9.2f",valor_deb);
               fprintf (fp,"%15s\n",fmtnum("zzzz,zzz,zz9.99",cadena,r_t));
               tot_deb[0] += valor_deb;
               tot_deb[1] += valor_deb;
               con_lin ++;
            }
         }
}

void lista_creditos()
{

         strcpy  (cuentab.arr, cuenta.arr);
         cuentab.len = strlen(cuentab.arr);

         if (strcmp(estado.arr, "2")) {

            EXEC SQL select infa, infb, infc, infd
                            into :veca, :vecb, :vecc, :vecd
                     from   plan
                     where  codigo_emp = (:codigo_emp) and
                            cuenta     = (:cuentab);

            if (sqlca.sqlcode == 1403)
               printf ("Cuentab (%-s) no existe\n", cuentab.arr);

            veca.arr[veca.len] = '\0';
            vecb.arr[vecb.len] = '\0';
            vecc.arr[vecc.len] = '\0';
            vecd.arr[vecd.len] = '\0';
            strcpy (vecplan[0], veca.arr);
            strcpy (vecplan[1], vecb.arr);
            strcpy (vecplan[2], vecc.arr);
            strcpy (vecplan[3], vecd.arr);

         }
         strcpy(cuentab.arr,cuenta.arr);
         strorg(cuentab.arr,1,4);
         if (strcmp(cuentab.arr,cue)) {
            if( valor_cre > 0) {
               fprintf (fp,"%8s%-13s"," ",cuenta.arr);
               fprintf (fp,"FAC %-13s",vecmov[3]);
               sprintf (cadena,"%9.2f",valor_cre);
               fprintf (fp,"%15s\n",fmtnum("zzzz,zzz,zz9.99",cadena,r_t));
               tot_cre[0] += valor_cre;
               tot_cre[1] += valor_cre;
               con_lin ++;
            }
         }
}

void totales()
{

    sprintf (cadena,"%9.2f",tot_cre[1]);
    fprintf (fp,"%78s\n\n",fmtnum("zz,zzz,zzz,zz9.99",cadena,r_t));
    con_lin +=2;

    EXEC SQL OPEN C2A;

    staora  = 0;
    traidos = 0;
    num_ret = 0;

    while (staora == 0) {

          EXEC SQL FETCH C2A INTO :infa, :infb, :infc, :infd, :comprobante,
                                  :clase, :descripcion,
                                  :fecha, :tipo,:cuenta, :codigo_nit,
                                  :valor_deb,   :valor_cre, :estado;

          staora  = sqlca.sqlcode;
          if (staora == -1405)
              staora  = 0;
          else if (staora)
                   fprintf (stderr, "Error leyendo C2A (%d)\n", staora);
          if (staora == 0) {
             infa       .arr  [infa       .len] = '\0';
             infb       .arr  [infb       .len] = '\0';
             infc       .arr  [infc       .len] = '\0';
             infd       .arr  [infd       .len] = '\0';
             clase      .arr  [clase      .len] = '\0';
             descripcion.arr  [descripcion.len] = '\0';
             fecha      .arr  [fecha      .len] = '\0';
             cuenta     .arr  [cuenta     .len] = '\0';
             estado     .arr  [estado     .len] = '\0';

             strcpy (vecmov[0], infa.arr);
             strcpy (vecmov[1], infb.arr);
             strcpy (vecmov[2], infc.arr);
             strcpy (vecmov[3], infd.arr);

             strcpy(cue,"1435");
             lista_debitos();
          }
          num_ret = traidos;
    }

    EXEC SQL CLOSE C2A;

  if (tot_deb[1] != tot_cre[1])  {
      fprintf (fp,"\n%102s","****  MOVIMIENTO DESCUADRADO ****  ===========> ");
      sprintf (cadena,"%9.2f",tot_deb[1]-tot_cre[1]);
      fprintf (fp,"%17s\n",fmtnum("zz,zzz,zzz,zz9.99",cadena,r_t));
  }
  fprintf (fp,"\n");
  con_lin +=3;
}


