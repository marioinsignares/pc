/*****************************************************************
* NOMPLPOR  Version 1.0 - Rev 1.2 - Feb. 11/99.
*
* nomplpor.pc Programa de liquidaci¢n de novedades
*
* Uso : nomplpor codigo_emp device copias userid/password
*
* Mario E. Santiago I. Creado Enero 22-2001.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

double redondo();
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
VARCHAR codigo_emp     [05];
VARCHAR fecha_has      [20];
VARCHAR fecha_des      [20];
VARCHAR ctacte         [20];
VARCHAR fondo          [50];
VARCHAR w_arch         [100];
double  nit;
int     digito;
VARCHAR razon[36];

double  identif;
VARCHAR pri_nomb[11];
VARCHAR seg_nomb[11];
VARCHAR pri_apell[16];
VARCHAR seg_apell[16];
VARCHAR cuenta[17];
int     digempl;

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;

FILE    *fp1;
FILE    *fp2;

char *fmtnum(), r_t[100];
int     con_pag;                                   /* Contador de Paginas */
int     con_lin=66;                                /* Contador de Lineas  */
int     nconsec=0;
char    copias[6];

int	staora = 0;
char    formas[5];
char    fechas[100];
char    fecha[30];
char    cadena[100];
char    cadena2[200];
char    aestado[2][8];
char    registro[85];

void lista_empresa();
void regcontrol();
void regtraslado();

void main(argc, argv)
int     argc;
char    *argv[];
{
char    device[10];
int     status = 0;

if (argc < 6)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : nomplpor codigo_emp device copias fondo archivo userid/password\n");
    printf ("      device : t salida por terminal\n");
    printf ("               Px salida por impresora (x nro printer)\n");
    printf ("               userid/password nombre usuario y password\n");
    printf ("archivo: nombre archivo con toda su ruta ");
    exit (1);
   }

strcpy (codigo_emp.arr, argv[1]);
codigo_emp.len = strlen(codigo_emp.arr);
strcpy (device,             argv[2]);
strlow (device);
strcpy (copias,             argv[3]);
strcpy (fondo.arr,          argv[4]);
fondo.len = strlen(fondo.arr);
strcpy (w_arch.arr,         argv[5]);
w_arch.len = strlen(w_arch.arr);
if (!strpos ("/", argv[6]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,   argv[6]);
uid.len   =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

 EXEC SQL DECLARE C1 CURSOR FOR
       select n.nit, n.digito, n.nombre
       from   nomfijos e, nits n
       where  e.codigo_nit    = n.codigo_nit     and
              e.codigo_emp    = :codigo_emp;

 EXEC SQL DECLARE C2 CURSOR FOR
      select n.nit, substr(e.nombre,1,decode(instr(e.nombre,' '),0,length(e.nombre),instr(e.nombre,' '))),
             decode(instr(e.nombre,' '),0,' ',substr(e.nombre, instr(e.nombre,' ')+1, length(e.nombre))),
             e.primer_ap, segun_ap, substr(ctacte,1,4)||substr(ctacte,6,7),
             substr(ctacte,14,1)
      from   nomemple e, nits n
      where  e.codigo_nit    = n.codigo_nit     and
             e.estado_lab    <> 'R'             and
             e.cesantias     = :fondo           and
             e.codigo_emp    = :codigo_emp
      order by n.nit;

 EXEC SQL OPEN C1;

 if ((fp1 = fopen("cesantt", "w")) == NULL) {
     fprintf (stderr,"Error abriendo archivo pipe \n");
     exit (1);
 }

 lista_empresa();
 fclose(fp1);
 regcontrol();

 if ((fp1 = fopen("cesantc", "r")) == NULL) {
     fprintf (stderr,"Error abriendo archivo pipe \n");
     exit (1);
 }
 if ((fp2 = fopen(w_arch.arr, "w")) == NULL) {
     fprintf (stderr,"Error abriendo archivo %s\n",w_arch.arr);
     exit (1);
 }

 fread(registro,sizeof(registro),1,fp1);
 fwrite(registro,sizeof(registro),1,fp2);
 fclose(fp1);

 if ((fp1 = fopen("cesantt", "r")) == NULL) {
     fprintf (stderr,"Error abriendo archivo pipe \n");
     exit (1);
 }
 fread(registro,sizeof(registro),1,fp1);
 fwrite("\n",1,1,fp2);
 while(!feof(fp1)) {
    fwrite(registro,sizeof(registro),1,fp2);
    fread(registro,sizeof(registro),1,fp1);
 }
 EXEC SQL COMMIT WORK RELEASE;
 EXEC SQL CLOSE C1;

 cierre_impresora();
 exit   (0);
}

void lista_empresa()
{

 EXEC SQL OPEN C2;

 while (staora == 0) {

      EXEC SQL FETCH C2 INTO :identif,   :pri_nomb,  :seg_nomb,
                             :pri_apell, :seg_apell, :cuenta,
                             :digempl;

      if (pri_nomb.len > 10)
          pri_nomb.len = 10;

      pri_nomb.arr      [pri_nomb.len]     = '\0';

      if (seg_nomb.len > 10)
          seg_nomb.len = 10;

      seg_nomb.arr       [seg_nomb.len]     = '\0';

      if (pri_apell.len > 15)
          pri_apell.len = 15;

      pri_apell.arr      [pri_apell.len]     = '\0';

      if (seg_apell.len > 15)
          seg_apell.len = 15;

      seg_apell.arr      [seg_apell.len]     = '\0';

      cuenta.arr         [cuenta.len]     = '\0';

      staora  = sqlca.sqlcode;

      if (staora) {
         fprintf (stderr, "Error leyendo C2 (%11.0f) (%d)\n", identif, staora);
      }

      if (staora ==  1403) break;
      if (staora == -1405)
          staora  = 0;
      else if (staora)
               fprintf (stderr, "Error leyendo C1 (%d)\n", staora);

      regtraslado();

 }
}

void regcontrol()
{
 staora  = 0;

 EXEC SQL FETCH C1 INTO :nit, :digito, :razon;

 if (razon.len > 35)
     razon.len = 35;

 razon.arr      [razon.len]     = '\0';

 staora  = sqlca.sqlcode;

 if (staora == -1405) {
    staora = 0;
 }
 if (staora) {
    fprintf (stderr, "Error leyendo C1 (%d)\n", staora);
    exit   (1);
 }

 if ((fp1 = fopen("cesantc", "w")) == NULL) {
     fprintf (stderr,"Error abriendo archivo pipe \n");
     exit (1);
 }
 fprintf(fp1,"%s%011.0f%1d%-35s","1",nit,digito,razon.arr);
 fclose(fp1);
}

void regtraslado()
{
   fprintf(fp1,"%s%011.0f","2",identif);
   fprintf(fp1,"%-10s",pri_nomb.arr);
   fprintf(fp1,"%-10s",seg_nomb.arr);
   fprintf(fp1,"%-15s",pri_apell.arr);
   fprintf(fp1,"%-15s",seg_apell.arr);
   fprintf(fp1,"%-16s",cuenta.arr);
   fprintf(fp1,"%1d",digempl);
   fprintf(fp1,"%s","0051");
   fprintf(fp1,"%s\n","A");
}
