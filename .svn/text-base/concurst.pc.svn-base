/*****************************************************************
* ORDENES.C Version 1.0 - Rev 1.2 - May. 29/90.
*
* ordenes.c. Listado de Ordenes de Produccion.
*
* Uso : ordenes numero_orden device userid/password
*
* Martin A. Toloza L. Creado Febrero 10-1998.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

void imprime();
void titulos();

				     /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];

VARCHAR nomb_emp   [51];
double  nit;
int     digito;
VARCHAR codigo_emp [4];

                                            /* Variables globales del usuario */
char    pagina[4];                                   /* Contador de Paginas */
int     con_pag=0;                                   /* Contador de Paginas */
                                 /* Ordenes_c (C1) */
double  numero_orden;
int     loop_2 = 0;
int     traidos = 0;
int     num_ret = 0;
VARCHAR codigo_cliente [6];
VARCHAR nomb_clie      [51];
VARCHAR nomb_ciu       [30];
VARCHAR fecha_control  [70];
VARCHAR asesor         [70];
VARCHAR profesional    [70];
VARCHAR fecha          [20];
VARCHAR fechaf         [20];
double  nit_asesor;
double  nit_prof;
int     ano_mes;
int     cuantos;
VARCHAR clase          [03];
VARCHAR tipo           [03];
VARCHAR estado         [02];
VARCHAR orden          [12];
                                 /* Ordenes_d (C2) */
int     cantidad;
double  valor;
int     tcantidad;
VARCHAR ano_mesa       [20];
VARCHAR consecutivoa   [08];

int     diai;
int     mesi;
int     anoi;
int     diaf;
int     mesf;
int     anof;
VARCHAR codigoi [6];
VARCHAR codigof [6];
                                 /* Tipos (C3) */
/* VARIABLES PARA ASIENTOS CONTABLES */

double  consecutivo;
                                 /* Acumulados (C6) */
EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
                                            /* Variables globales del usuario */
char *fmtnum(), r_t[100];
int     con_len;                                   /* Contador de Paginas */
int     con_lin= 61;                               /* Contador de Lineas  */
int     staora = 0;
int     staora2 = 0;
int     i;
int     j, k;
char    cadena[100];
char    cadena2[100];
char    cadena3[100];
int     tot_transit;
double  valort;

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

    if (argc < 4)
       {
	printf ("Incorrecta invocacion:\n");
	printf ("Uso : relpuntos fecha ini (aaaammdd) fecha fin (aaaammdd) codigoi codigof device userid/password\n");
	printf ("      device : t salida por terminal\n");
	printf ("               Px salida por impresora (x nro printer)\n");
	printf ("               userid/password nombre usuario y password\n");
        exit (1);
       }

       strcpy (codigo_emp.arr,     "1");
       codigo_emp.len = strlen(codigo_emp.arr);

       strcpy (fecha.arr, argv[1]);
       fecha.len   =      strlen(fecha.arr);

       strcpy (cadena,fecha.arr);
       strorg (cadena,1,4);
       anoi         =          atoi(cadena);

       strcpy (cadena,fecha.arr);
       strorg (cadena,5,2);
       mesi         =          atoi(cadena);

       strcpy (cadena,fecha.arr);
       strorg (cadena,7,2);
       diai         =          atoi(cadena);

       strcpy (fechaf.arr, argv[2]);
       fechaf.len   =      strlen(fechaf.arr);

       strcpy (cadena,fechaf.arr);
       strorg (cadena,1,4);
       anof         =          atoi(cadena);

       strcpy (cadena,fechaf.arr);
       strorg (cadena,5,2);
       mesf         =          atoi(cadena);

       strcpy (cadena,fechaf.arr);
       strorg (cadena,7,2);
       diaf         =          atoi(cadena);

       strcpy (codigoi.arr, argv[3]);
       codigoi.len   =      strlen(codigoi.arr);

       strcpy (codigof.arr, argv[4]);
       codigof.len   =      strlen(codigof.arr);

       strcpy (device,    argv[5]);
       strlow (device);

    if (!strpos ("/", argv[6]))
       {
        printf ("user id/password incorrecto.\n");
	exit (1);
       }

    strcpy (uid.arr,   argv[6]);
    uid.len   =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora("1");

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

    EXEC SQL select n.nombre, n.nit, n.digito
                    into :nomb_emp, :nit, :digito
             from   nits n, empresas e
             where  n.codigo_nit = e.codigo_nit and
                    e.codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Empresa (%d)\n", sqlca.sqlcode);


    EXEC SQL DECLARE C1 CURSOR FOR
             select o.numero_orden, o.codigo_cliente, n.nombre,
                    nvl(n.nombre_muni,c.nombre),
                    to_char(o.fecha_control,'DD-MON-YYYY'),
                    o.consecutivo, o.ano_mes
             from   nits n, ordenes_c o, ciudades c, clientes ct
             where  n.codigo_nit      = ct.codigo_nit    and
                    ct.codigo_cliente = o.codigo_cliente and
                    n.codigo_ciu      = c.codigo         and
                    to_char(o.fecha_documento,'yyyymmdd') >= :fecha  and
                    to_char(o.fecha_documento,'yyyymmdd') <= :fechaf and
                    o.codigo_cliente >= :codigoi  and
                    o.codigo_cliente <= :codigof
              order by o.codigo_cliente, o.numero_orden;


    EXEC SQL OPEN C1;
    staora  = 0;
    while (staora == 0) {

          EXEC SQL FETCH C1 INTO :numero_orden, :codigo_cliente, :nomb_clie, :nomb_ciu,
                                 :fecha_control, :consecutivo, :ano_mes;
          staora  = sqlca.sqlcode;
          if (staora ==  1403) break;
          if (staora == -1405) {
              staora  = 0;
          }
          else if (staora)
                  fprintf (stderr, "Error leyendo Ordenes_c (%d)\n", staora);
          codigo_cliente.arr [codigo_cliente.len] = '\0';
          nomb_clie.arr      [nomb_clie.len]      = '\0';
          nomb_ciu.arr       [nomb_ciu.len]       = '\0';
          fecha_control.arr  [fecha_control.len]  = '\0';

          sprintf(ano_mesa.arr,"%6d",ano_mes);
          ano_mesa.len     =   strlen(ano_mesa.arr);
          sprintf(consecutivoa.arr,"%5.0f",consecutivo);
          consecutivoa.len =   strlen(consecutivoa.arr);

          EXEC SQL DECLARE C2 CURSOR FOR
               select decode(substr(codigo_articulo,1,1),'4',1,'5',1,'B',1,0), decode(substr(codigo_articulo,3,2),'50',1,'51',1,'52',1,'54',1,'55',1,'56',1,'57',1,0), cantidad, cantidad*valor_venta
               from   ordenes_d d
               where  d.consecutivo = :consecutivoa  and
                      d.ano_mes     = :ano_mesa;

          EXEC SQL select nvl(profesional,' '), nvl(nit_prof,0), nvl(asesor,' '), nvl(nit_asesor,0)
                   into  :profesional, :nit_prof, :asesor, :nit_asesor
                   from   ordenes_r
                   where  numero_orden    = :numero_orden;

          if (sqlca.sqlcode != -1405 && sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
              fprintf (stderr, "Error leyendo Ordenes_r C8(%d)\n", sqlca.sqlcode);

          asesor.arr         [asesor.len]      = '\0';
          profesional.arr    [profesional.len] = '\0';

/***************************************/

          EXEC SQL OPEN C2;
          staora2  = 0;
          cuantos  = 0;
          while (staora2 == 0) {

                EXEC SQL FETCH C2 INTO :clase, :tipo, :cantidad, :valor ;
                staora2  = sqlca.sqlcode;
                if (staora2 ==  1403) break;
                if (staora2 == -1405 || staora2 == 0) {
                   cuantos += cantidad;
                   valort  += valor;
                }
                if (staora2 == -1405) {
                   staora2  = 0;
                }
                else if (staora2)
                        fprintf (stderr, "Error leyendo C2 (%d)\n", staora2);
          }

          if ( !strcmp(clase.arr,"1") && cuantos >= 2 && valor > 0 ) {
              tot_transit++;
              if (con_lin > 60) {
                 titulos();
              }
              imprime();
              cuantos = 0;
          }

        EXEC SQL CLOSE C2;
    }
    sprintf(cadena,"%6.0d",tot_transit);
    strcpy(cadena,fmtnum("zzz,zzz",cadena,r_t));
    fprintf (fp,"\nTotal cupones: %7s\n",cadena);

    cierre_impresora();

    exit   (0);
}

/************************
* IMPRIME()
*    Imprime detalles de ordenes con puntos.
*/
void imprime()
{

  strorg(nomb_clie.arr,1,34);
  strorg(profesional.arr,1,30);
  strorg(asesor.arr,1,28);
  sprintf(cadena,"%9.0f",nit_prof);
  strcpy(cadena,fmtnum("zzzzz,zzz,zzz",cadena,r_t));
  sprintf(cadena2,"%9.0f",nit_asesor);
  strcpy(cadena2,fmtnum("zzzz,zzz,zzz",cadena2,r_t));
  sprintf(cadena3,"%6d",0);
  strcpy(cadena3,fmtnum("z,zzz",cadena3,r_t));
  fprintf (fp,"%6s %7.0f %5s %-34s %-20s %-30s %-13s %-28s %12s\n",cadena3,numero_orden,codigo_cliente.arr,nomb_clie.arr,nomb_ciu.arr,profesional.arr,cadena,asesor.arr,cadena2);
  con_lin++;

}


/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{

 con_pag++;
 fprintf(fp,"%s",salte_pagina);
 strful(cadena,(int)(42-strlen(nomb_emp.arr))/2,' ');
 fprintf(fp,"%s%s%s%s%s\n",diezcpi,ancho_on,cadena,nomb_emp.arr,ancho_off);
 sprintf (cadena,"%12.0f",nit);
 fprintf (fp,"%s%s%25s %18s",condensado_on,ancho_on,"NIT :",fmtnum("zzz,zzz,zzz,zzz",cadena,r_t));
 if (digito > 0) {
     sprintf (cadena,"%d",digito);
     fprintf (fp,"-%s",fmtnum("z",cadena,r_t));
 }
 else if (digito == 0)
         fprintf (fp,"-%s","0");
 fprintf(fp,"\n%20s%s%s\n\n"," "," RELACION DE CUPONES TRANSITIONS ",ancho_off);
 fecha_system(cadena);
 if (anoi==anof && mesi==mesf && diai==diaf)
    fprintf(fp,"%s%s%-44s%s%2d de %s / %d",condensado_on,"FECHA PROCESO : ",cadena,"DIA : ",diai,mes[mesi-1],anoi);
 else
    fprintf(fp,"%s%s%-44s%s%2d de %s / %d %s %2d de %s / %d",condensado_on,"FECHA PROCESO : ",cadena,"DEL : ",diai,mes[mesi-1],anoi," AL : ",diaf,mes[mesf-1],anof);

 fprintf(fp,"%54s %d\n\n","PAGINA ",con_pag);
 fprintf(fp,"%s\n\n","PUNTOS ORDEN   CODIGO NOMBRE CLIENTE                    CIUDAD               PROFESIONAL                       CEDULA     ASESOR                            CEDULA");
 con_lin = 9;

}


