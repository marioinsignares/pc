/*****************************************************************
* ORDENES.C Version 1.0 - Rev 1.2 - May. 29/90.
*
* ordenes.c. Listado de Ordenes de Produccion.
*
* Uso : ordenes numero_orden device userid/password
*
* Martin A. Toloza L. Creado Febrero 10-1998.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

double redondo();
void inserta();
void imprime();
void titulos();

				     /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];

VARCHAR nomb_emp   [51];
double  nit;
int     digito;
VARCHAR codigo_emp [4];

                                            /* Variables globales del usuario */
char    pagina[4];                                   /* Contador de Paginas */
int     con_pag=0;                                   /* Contador de Paginas */
                                 /* Ordenes_c (C1) */
double  numero_orden;
int     loop_2 = 0;
int     traidos = 0;
int     num_ret = 0;
VARCHAR codigo_cliente [6];
VARCHAR cod_cli        [6];
VARCHAR nomb_clie      [51];
VARCHAR nomb_ciu       [30];
VARCHAR asesor         [70];
VARCHAR profesional    [70];
VARCHAR fecha          [20];
VARCHAR fechaf         [20];
double  nit_asesor;
double  nit_prof;
int     ano_mes;
int     puntos;
double  valor;
int     puntosc;
int     puntos_ac;
int     saldoant;
VARCHAR estado         [02];
VARCHAR orden          [12];
                                 /* Ordenes_d (C2) */
int     cantidad;
int     tcantidad;
VARCHAR ano_mesa       [20];
VARCHAR consecutivoa   [08];
VARCHAR bonoa          [08];
VARCHAR puntosa        [08];
VARCHAR valora         [20];

int     diai;
int     mesi;
int     anoi;
int     diaf;
int     mesf;
int     anof;
VARCHAR codigoi [6];
VARCHAR codigof [6];
                                 /* Tipos (C3) */
/* VARIABLES PARA ASIENTOS CONTABLES */

double  consecutivo;

int     tot_puntos;
int     puntos_cli;
int     puntos_rd;
int     sal_puntos;
int     tot_saldo;
int     puntos_cr;
int     tpuntos_rd;
int     tsaldoant;
int     tpuntos_cli;
int     tpuntosacu;
int     tsal_puntos;
int     tpuntos_cr;
                                 /* Acumulados (C6) */
EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
                                            /* Variables globales del usuario */
char *fmtnum(), r_t[100];
int     con_len;                                   /* Contador de Paginas */
int     con_lin= 61;                               /* Contador de Lineas  */
int     staora = 0;
int     staora2 = 0;
int     i;
int     j, k;
char    cadena[100];
char    cadena2[100];
char    cadena3[100];
int     tpuntos;
char    redimir[2];
int     bonos;

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

    if (argc < 4)
       {
	printf ("Incorrecta invocacion:\n");
	printf ("Uso : relpuntos fecha ini (aaaammdd) fecha fin (aaaammdd) codigoi codigof redimir(s/n) device userid/password\n");
	printf ("      device : t salida por terminal\n");
	printf ("               Px salida por impresora (x nro printer)\n");
	printf ("               userid/password nombre usuario y password\n");
        exit (1);
       }

       strcpy (codigo_emp.arr,     "1");
       codigo_emp.len = strlen(codigo_emp.arr);

       strcpy (fecha.arr, argv[1]);
       fecha.len   =      strlen(fecha.arr);

       strcpy (cadena,fecha.arr);
       strorg (cadena,1,4);
       anoi         =          atoi(cadena);

       strcpy (cadena,fecha.arr);
       strorg (cadena,5,2);
       mesi         =          atoi(cadena);

       strcpy (cadena,fecha.arr);
       strorg (cadena,7,2);
       diai         =          atoi(cadena);

       strcpy (fechaf.arr, argv[2]);
       fechaf.len   =      strlen(fechaf.arr);

       strcpy (cadena,fechaf.arr);
       strorg (cadena,1,4);
       anof         =          atoi(cadena);

       strcpy (cadena,fechaf.arr);
       strorg (cadena,5,2);
       mesf         =          atoi(cadena);

       strcpy (cadena,fechaf.arr);
       strorg (cadena,7,2);
       diaf         =          atoi(cadena);

       strcpy (codigoi.arr, argv[3]);
       codigoi.len   =      strlen(codigoi.arr);

       strcpy (codigof.arr, argv[4]);
       codigof.len   =      strlen(codigof.arr);

       strcpy (redimir, argv[5]);

       strcpy (device,    argv[6]);
       strlow (device);

    if (!strpos ("/", argv[7]))
       {
        printf ("user id/password incorrecto.\n");
	exit (1);
       }

    strcpy (uid.arr,   argv[7]);
    uid.len   =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora("1");

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

    EXEC SQL select n.nombre, n.nit, n.digito
                    into :nomb_emp, :nit, :digito
             from   nits n, empresas e
             where  n.codigo_nit = e.codigo_nit and
                    e.codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Empresa (%d)\n", sqlca.sqlcode);


    EXEC SQL DELETE FROM PUNTOSACU
             WHERE FECHA = to_date(:fechaf,'yyyymmdd');

    EXEC SQL DECLARE C3 CURSOR FOR
             select nvl(puntos_cli,0), nvl(a.puntos_rd,0),  nvl(puntos_cli,0)-nvl(a.puntos_rd,0),
                    a.codigo_cliente, n.nombre, nvl(n.nombre_muni,c.nombre),
                    sum(decode(p.saldo,0,nvl(p.puntos,0),0))
             from   puntosacu a, redimidos p, nits n, ciudades c, clientes ct
             where  a.codigo_cliente  = p.codigo_cliente(+) and
                    a.codigo_cliente  = ct.codigo_cliente   and
                    n.codigo_nit      = ct.codigo_nit       and
                    n.codigo_ciu      = c.codigo            and
                    a.fecha           = to_date(:fechaf,'yyyymmdd')
             group by puntos_cli, a.puntos_rd,
                    a.codigo_cliente, n.nombre, n.nombre_muni, c.nombre
             order by a.puntos_rd desc, puntos_cli desc;

    EXEC SQL DECLARE C3A CURSOR FOR
             select sum(nvl(puntos_cli,0))-sum(nvl(puntos_rd,0))
             from   puntosacu
             where  fecha <= to_date(:fecha,'yyyymmdd')-1 and
                    codigo_cliente = :cod_cli;

    EXEC SQL DECLARE C1 CURSOR FOR
             select o.codigo_cliente, n.nombre,
                    nvl(n.nombre_muni,c.nombre),
                    o.consecutivo, o.ano_mes, nvl(puntos,0)
             from   nits n, ordenes_c o, ciudades c, clientes ct
             where  n.codigo_nit      = ct.codigo_nit    and
                    ct.codigo_cliente = o.codigo_cliente and
                    n.codigo_ciu      = c.codigo         and
                    to_char(o.fecha_documento,'yyyymmdd') >= :fecha and
                    to_char(o.fecha_documento,'yyyymmdd') <= :fechaf and
                    o.codigo_cliente >= :codigoi and
                    o.codigo_cliente <= :codigof
              order by o.codigo_cliente, o.numero_orden;

    staora  = 0;
    EXEC SQL OPEN C1;
    EXEC SQL FETCH C1 INTO :codigo_cliente, :nomb_clie, :nomb_ciu,
                           :consecutivo, :ano_mes, :puntosc;

    staora  = sqlca.sqlcode;
    if (staora == -1405) {
        staora  = 0;
    }
    else if (staora)
             fprintf (stderr, "Error leyendo Ordenes_c (%d)\n", staora);

    codigo_cliente.arr [codigo_cliente.len] = '\0';
    nomb_clie.arr      [nomb_clie.len] = '\0';
    nomb_ciu.arr       [nomb_ciu.len] = '\0';

    sprintf(cod_cli.arr,"%s",codigo_cliente.arr);
    cod_cli.len     =   strlen(cod_cli.arr);
//  printf("cod_cli<%s> codigo_cliente<%s>", cod_cli.arr,codigo_cliente.arr); getchar();

    sprintf(ano_mesa.arr,"%6d",ano_mes);
    ano_mesa.len     =   strlen(ano_mesa.arr);
    sprintf(consecutivoa.arr,"%5.0f",consecutivo);
    consecutivoa.len =   strlen(consecutivoa.arr);

    EXEC SQL DECLARE C2 CURSOR FOR
             select nvl(puntos,0)
             from   ordenes_d d
             where  d.consecutivo = :consecutivoa  and
                    d.ano_mes     = :ano_mesa;

/***************************************/

    EXEC SQL OPEN C2;
    staora2  = 0;
    while (staora2 == 0) {

           EXEC SQL FETCH C2 INTO :puntos;
           staora2  = sqlca.sqlcode;
           if (staora2 ==  1403) break;
           if (staora2 == -1405 || staora2 == 0)
               tpuntos += puntos;
           if (staora2 == -1405) {
               staora2  = 0;
           }
           else if (staora2)
                    fprintf (stderr, "Error leyendo C2 (%d)\n", staora2);
    }

    EXEC SQL CLOSE C2;

    staora  = sqlca.sqlcode;
    while (staora == 0) {

          if (strcmp(codigo_cliente.arr,cod_cli.arr)) {
              EXEC SQL OPEN C3A;
              EXEC SQL FETCH C3A INTO :saldoant;
                   staora2  = sqlca.sqlcode;
                   if (staora2 == -1405 || staora2 ==  1403 || staora2 == 0) {
                      if (staora2 == -1405 || staora2 ==  1403)
                           saldoant = 0;
                      staora2  = 0;
                   }
                   else if (staora2)
                           fprintf (stderr, "Error leyendo C3A (%d)\n", staora2);
              EXEC SQL CLOSE C3A;
              if (puntos_cli > 0) {
//                  if (!strcmp(cod_cli.arr,"MD114")) {
//                     printf("2) %s %6d",cod_cli.arr,puntos_cli);
//                     getchar();
//                  }
                  inserta();
              }
              sprintf(cod_cli.arr,"%s",codigo_cliente.arr);
              cod_cli.len     =   strlen(cod_cli.arr);
              puntos_cli = 0;
          }
          puntos_cli += tpuntos+puntosc;
//          if (!strcmp(cod_cli.arr,"MD114")) {
//             printf("1)%s %s %6d %6d ",consecutivoa.arr,cod_cli.arr,puntos_cli,tpuntos+puntosc);
//             getchar();
//          }

          EXEC SQL FETCH C1 INTO :codigo_cliente, :nomb_clie, :nomb_ciu,
                                 :consecutivo, :ano_mes, :puntosc;
                                 //, :puntos_rd;

          codigo_cliente.arr [codigo_cliente.len] = '\0';
          nomb_clie.arr      [nomb_clie.len] = '\0';
          nomb_ciu.arr       [nomb_ciu.len] = '\0';

          staora = sqlca.sqlcode;
          if (staora ==  1403) break;
          if (staora == -1405) {
              staora = 0;
          }

          sprintf(ano_mesa.arr,"%6d",ano_mes);
          ano_mesa.len     =   strlen(ano_mesa.arr);
          sprintf(consecutivoa.arr,"%5.0f",consecutivo);
          consecutivoa.len =   strlen(consecutivoa.arr);

          EXEC SQL OPEN C2;
          staora2 = 0;
          tpuntos = 0;
          while (staora2 == 0) {

                EXEC SQL FETCH C2 INTO :puntos;
                staora2  = sqlca.sqlcode;
                if (staora2 ==  1403) break;
                if (staora2 == -1405 || staora2 == 0)
                   tpuntos += puntos;
                if (staora2 == -1405) {
                   staora2  = 0;
                }
                else if (staora2)
                        fprintf (stderr, "Error leyendo C2 (%d)\n", staora2);
          }

          EXEC SQL CLOSE C2;
    }
    inserta();

    EXEC SQL OPEN C3;
    staora  = 0;
    while (staora == 0) {
           EXEC SQL FETCH C3 INTO :puntos_cli, :puntos_rd, :sal_puntos,
                                  :codigo_cliente, :nomb_clie, :nomb_ciu, :puntos_cr;
           codigo_cliente.arr [codigo_cliente.len] = '\0';
           nomb_clie.arr [nomb_clie.len] = '\0';
           nomb_ciu.arr [nomb_ciu.len] = '\0';
           staora = sqlca.sqlcode;
           if (staora ==  1403) break;

           if (con_lin > 60) {
              titulos();
           }
           sprintf(cod_cli.arr,"%s",codigo_cliente.arr);
           cod_cli.len     =   strlen(cod_cli.arr);
           EXEC SQL OPEN C3A;
           EXEC SQL FETCH C3A INTO :saldoant;
                staora2  = sqlca.sqlcode;
                if (staora2 == -1405 || staora2 ==  1403 || staora2 == 0) {
                   if (staora2 == -1405 || staora2 ==  1403)
                        saldoant = 0;
                   staora2  = 0;
                }
                else if (staora2)
                        fprintf (stderr, "Error leyendo C3A (%d)\n", staora2);
           EXEC SQL CLOSE C3A;
           imprime();
    }
    sprintf(cadena,"%9d",tsaldoant);
    strcpy(cadena,fmtnum("zz,zzz,zzz",cadena,r_t));
    fprintf (fp,"\n%11s",cadena);

    sprintf(cadena,"%9d",tpuntos_cli);
    strcpy(cadena,fmtnum("zz,zzz,zzz",cadena,r_t));
    fprintf (fp,"%11s",cadena);

    sprintf(cadena,"%9d",tpuntosacu);
    strcpy(cadena,fmtnum("zz,zzz,zzz",cadena,r_t));
    fprintf (fp,"%11s",cadena);

    sprintf(cadena,"%9d",tpuntos_rd);
    strcpy(cadena,fmtnum("zz,zzz,zzz",cadena,r_t));
    fprintf (fp,"%11s",cadena);

    sprintf(cadena,"%9d",tsal_puntos);
    strcpy(cadena,fmtnum("zz,zzz,zzz",cadena,r_t));
    fprintf (fp,"%11s",cadena," ");

    sprintf(cadena,"%9d",tot_saldo);
    strcpy(cadena,fmtnum("zz,zzz,zzz",cadena,r_t));
    fprintf (fp,"%11s",cadena);

    sprintf(cadena,"%9d",tpuntos_cr);
    strcpy(cadena,fmtnum("zz,zzz,zzz",cadena,r_t));
    fprintf (fp,"%11s\n",cadena);

    EXEC SQL CLOSE C3;
    EXEC SQL COMMIT WORK RELEASE;
    cierre_impresora();

    exit   (0);
}

/************************
* INSERTA()
*    Imprime detalles de ordenes con puntos.
*/
void inserta()
{

   puntos = (int) ((puntos_cli+saldoant)/5000);
//   puntos = (int) ((puntos_cli)/5000);
   bonos  = puntos;
// printf("puntos %d",puntos); getchar();
   if (puntos > 0) {
       puntos_rd = bonos * 5000;
   }
   else  puntos_rd = 0;

   EXEC SQL INSERT INTO PUNTOSACU
            VALUES (:puntos_cli, :puntos_rd, :cod_cli, to_date(:fechaf,'yyyymmdd'));

}

/************************
* IMPRIME()
*    Imprime detalles de ordenes con puntos.
*/
void imprime()
{

/*
  tot_puntos += puntos_cli;
  sprintf(cadena,"%12d",tot_puntos);
  strcpy(cadena,fmtnum("zzz,zzz,zzz",cadena,r_t));
  fprintf (fp,"%11s",cadena);
*/
  tsaldoant+=saldoant;
  sprintf(cadena,"%9d",saldoant);
  strcpy(cadena,fmtnum("z,zzz,zzz",cadena,r_t));
  fprintf (fp,"%11s",cadena);

  tpuntos_cli+=puntos_cli;
  sprintf(cadena,"%9d",puntos_cli);
  strcpy(cadena,fmtnum("z,zzz,zzz",cadena,r_t));
  fprintf (fp,"%11s",cadena);

  tpuntosacu+=(saldoant+puntos_cli);
  sprintf(cadena,"%9d",saldoant+puntos_cli);
  strcpy(cadena,fmtnum("z,zzz,zzz",cadena,r_t));
  fprintf (fp,"%11s",cadena);

  tpuntos_rd+=puntos_rd;
  sprintf(cadena,"%9d",puntos_rd);
  strcpy(cadena,fmtnum("z,zzz,zzz",cadena,r_t));
  fprintf (fp,"%11s ",cadena);

  tsal_puntos+=(sal_puntos+saldoant);
  sprintf(cadena,"%9d",sal_puntos+saldoant);
  strcpy(cadena,fmtnum("z,zzz,zzz",cadena,r_t));
  fprintf (fp,"%11s",cadena);

  tot_saldo += (puntos_cli - puntos_rd + saldoant);
  sprintf(cadena,"%9d",tot_saldo);
  strcpy(cadena,fmtnum("z,zzz,zzz",cadena,r_t));
  fprintf (fp,"%11s",cadena);

  tpuntos_cr+=puntos_cr;
  sprintf(cadena,"%9d",puntos_cr);
  strcpy(cadena,fmtnum("z,zzz,zzz",cadena,r_t));
  fprintf (fp,"%11s",cadena);

  strorg(nomb_clie.arr,1,46);
  fprintf (fp," %-6s %-46s %-20s\n",codigo_cliente.arr,nomb_clie.arr,nomb_ciu.arr);

  con_lin++;
  strlow (redimir);
  if (!strcmp(redimir,"s")) {
     puntos = (int) ((saldoant+puntos_cli)/5000);
     bonos  = puntos;
//   printf("puntos %d",puntos); getchar();
     if (puntos > 0) {
        valor  = 250000;
        sprintf(valora.arr,"%15.2f",valor);
        valora.len = strlen(valora.arr);
        puntos = 5000;
        sprintf(puntosa.arr,"%d",puntos);
        puntosa.len = strlen(puntosa.arr);
        for (i=1;i<=bonos;i++) {
             EXEC SQL select numero+1
                      into bonoa
                      from control_bon for update;
             EXEC SQL INSERT INTO REDIMIDOS
                      VALUES (:codigo_cliente,:bonoa,to_date(to_char(sysdate,'DD-MON-YYYY')),'',:puntosa,:valora,:valora,0);
             EXEC SQL update control_bon
                      set numero = numero + 1,
                          fecha  = sysdate;
        }
     }
  }

}


/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{

 con_pag++;
 fprintf(fp,"%s",salte_pagina);
 strful(cadena,(int)(42-strlen(nomb_emp.arr))/2,' ');
 fprintf(fp,"%s%s%s%s%s\n",diezcpi,ancho_on,cadena,nomb_emp.arr,ancho_off);
 sprintf (cadena,"%12.0f",nit);
 fprintf (fp,"%s%s%25s %18s",condensado_on,ancho_on,"NIT :",fmtnum("zzz,zzz,zzz,zzz",cadena,r_t));
 if (digito > 0) {
     sprintf (cadena,"%d",digito);
     fprintf (fp,"-%s",fmtnum("z",cadena,r_t));
 }
 else if (digito == 0)
         fprintf (fp,"-%s","0");
 fprintf(fp,"\n%20s%s\n"," "," RELACION DE PUNTOS LABOCOSTA");
 fprintf(fp,"%15s%s%s\n"," "," PROGRAMA DE FILELIDAD - PUNTOS LABOCOSTA",ancho_off);
 fecha_system(cadena);
 if (anoi==anof && mesi==mesf && diai==diaf)
    fprintf(fp,"%s%s%-44s%s%2d de %s / %d",condensado_on,"FECHA PROCESO : ",cadena,"DIA : ",diai,mes[mesi-1],anoi);
 else
    fprintf(fp,"%s%s%-44s%s%2d de %s / %d %s %2d de %s / %d",condensado_on,"FECHA PROCESO : ",cadena,"DEL : ",diai,mes[mesi-1],anoi," AL : ",diaf,mes[mesf-1],anof);

 fprintf(fp,"%23s %d\n\n","PAGINA ",con_pag);
 fprintf(fp,"%s\n",  " SALDO     PUNTOS                 PUNTOS     SALDO      TOTAL      PUNTOS");
 fprintf(fp,"%s\n",  " ANTERIOR  GANADOS       PUNTOS   REDIMIDOS  PUNTOS     SALDO      ACREDITADOS  CODIGO NOMBRE CLIENTE                                 CIUDAD");
 strcpy(cadena,mes[mesi-1]);
 strorg (cadena,1,3);
 strcpy(cadena2,mes[mesf-1]);
 strorg (cadena2,1,3);
// fprintf(fp," A %s/%02d  DEL PER.  ACUMULADOS   DEL PER.   A %s/%02d   ACUMULADO                                                                       \n\n",cadena,diai,cadena2,diaf);
 fprintf(fp," A Sep/30  DEL PER.  ACUMULADOS   DEL PER.   A %s/%02d   ACUMULADO                                                                       \n\n",cadena2,diaf);
 con_lin = 11;     // z,zzz,zzz  z,zzz,zzz  z,zzz,zzz  z,zzz,zzz  z,zzz,zzz z,zzz,zzz  z,zzz,zzz

}



