/*****************************************************************
* DIANCXP.C Version 1.0 - Rev 1.2 - May. 29/90.
*
* clistsal.pc Programa que lista los saldos de clientes
*
* Uso : DIANCXP fecha_corte(AAAAMMDD) device copias userid/password
*
* Martin A. Toloza L. Creado Diciembre 19-1997.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

void lista_empresa(int i);
void titulos();
void total();

double redondo();
				     /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
                                 /* Clientes (C1) */
VARCHAR nomb_clie     [51];
VARCHAR direccion     [51];
VARCHAR ciudad        [30];
VARCHAR clase_docu    [2];
double  nit;
int     digito;
int     a2k;
double  saldo_cliente;
VARCHAR codigo_emp    [3];
VARCHAR ano_mes       [20];
                                 /* Empresas (C2) */
VARCHAR nomb_emp      [51];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
                                            /* Variables globales del usuario */
#define A_F1 "###,###,###.##"

char *fmtnum(), r_t[100];
int     con_pag;                                   /* Contador de Paginas */
int     con_lin=66;                                /* Contador de Lineas  */
int	staora = 0;
char    copias[3];

double  saldo_total=0;
char    fecha_listado[60];
char    fecha_corte[20];
int     ano_corte;
int     mes_corte;
int     dia_corte;

char    cadena[100];

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

if (argc < 5)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : diancxp fecha_corte(AAAAMMDD) device copias userid/password\n");
    printf ("      device : t salida por terminal\n");
    printf ("               Px salida por impresora (x nro printer)\n");
    printf ("               userid/password nombre usuario y password\n");
    exit (1);
   }

strcpy (fecha_corte, argv[1]);
if ( strlen(fecha_corte) != 8 ) {
   printf("Error, la fecha de corte debe ser de 8 digitos y formato AAAAMMDD");
   exit (1);
}
strcpy (device,      argv[2]);
strlow (device);
strcpy (copias,      argv[3]);


if (!strpos ("/", argv[4]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,   argv[4]);
uid.len   =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

  strcpy (ano_mes.arr,fecha_corte);
  strorg (ano_mes.arr,1,6);
  ano_mes.len = strlen(ano_mes.arr);

  strcpy(cadena,fecha_corte);
  strorg(cadena,7,2);
  dia_corte =  atoi(cadena);
  strcpy(cadena,fecha_corte);
  strorg(cadena,5,2);
  mes_corte =  atoi(cadena);
  strcpy(cadena,fecha_corte);
  strorg(cadena,1,4);
  ano_corte =  atoi(cadena);
  sprintf(cadena,"%d",ano_corte);
  fmtnum("zz,zzz",cadena,r_t);
  sprintf(fecha_listado,"%s %d %s%s",mes[mes_corte-1],dia_corte,"de",r_t);

    EXEC SQL DECLARE C1 CURSOR FOR
          select clase_docu, nits.nit, nvl(nits.digito,-1), sum(clientem.saldo+clientem.saldoc) saldo2
          from   clientes, clientem, nits
          where  clientes.codigo_cliente  = clientem.codigo_cliente and
                 clientes.estado         != 'R'                     and
                 clientem.codigo_emp      = :codigo_emp             and
                 clientem.ano_mes =
                 (select max(ano_mes)
                  from  clientem cm
                  where cm.codigo_emp     = :codigo_emp             and
                        cm.codigo_cliente = clientes.codigo_cliente and
                        cm.ano_mes       <= :ano_mes)               and
         clientes.codigo_nit              = nits.codigo_nit         and
         (clientem.saldo                 <> 0                       or
          clientem.saldoc                <> 0)
         group by  clase_docu, nits.nit, nits.digito
         order by saldo2;

 lista_empresa(1);
 total();
 lista_empresa(3);
 total();
 con_pag=0;
 lista_empresa(2);
 total();

 cierre_impresora();

 EXEC SQL CLOSE C1;

 EXEC SQL COMMIT WORK RELEASE;

 exit   (0);
}

void lista_empresa(i)
int i;
{
 sprintf(codigo_emp.arr,"%d",i);
 codigo_emp.len  =  strlen(codigo_emp.arr);

 EXEC SQL select nombre into :nomb_emp
          from   empresas, nits
          where  empresas.codigo_nit = nits.codigo_nit and
                 empresas.codigo_emp = :codigo_emp;

 if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
     fprintf (stderr, "Error leyendo Empresa (%d)\n", sqlca.sqlcode);

 nomb_emp.arr   [nomb_emp.len] = '\0';
 EXEC SQL OPEN C1;

 EXEC SQL DECLARE C2 CURSOR FOR
          select n.nombre, direccion, codigo_ciu||' '||nombre_muni
          from   nits n
          where  n.nit = :nit;

 staora  = 0;
 while (staora == 0) {

       EXEC SQL FETCH C1 INTO :clase_docu, :nit, :digito, :saldo_cliente;

       staora  = sqlca.sqlcode;
       if (staora ==  1403) break;
       if (staora == -1405)
           staora  = 0;
       else if (staora)
                fprintf (stderr, "Error leyendo C1 (%d)\n", staora);

       clase_docu.arr  [clase_docu.len] = '\0';

       EXEC SQL OPEN C2;
       EXEC SQL FETCH C2 INTO :nomb_clie, direccion, :ciudad;

       if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
           fprintf (stderr, "Error leyendo Nits C2 (%d)\n", sqlca.sqlcode);

       nomb_clie.arr   [nomb_clie.len]  = '\0';
       direccion.arr   [direccion.len]  = '\0';
       ciudad.arr      [ciudad.len]     = '\0';
       EXEC SQL CLOSE C2;

       if (con_lin > 60)
           titulos();
       sprintf (cadena,"%9.0f",nit);
       fprintf (fp,"%-2s %14s",clase_docu.arr, fmtnum("zzz,zzz,zzz,zzz",cadena,r_t));
       if (digito >= 0) {
          sprintf (cadena,"%d",digito);
          fprintf (fp,"-%s",fmtnum("9",cadena,r_t));
       }
       else fprintf (fp,"  ");
       fprintf (fp," %-40s %-45s %-20s", nomb_clie.arr, direccion.arr, ciudad.arr);
       digito=0;
       saldo_total+=saldo_cliente;
       sprintf (cadena,"%12.2f",saldo_cliente);
       fprintf (fp," %18s\n",fmtnum("zz,zzz,zzz,zzz.zz",cadena,r_t));
       con_lin++;
 }
 EXEC SQL CLOSE C1;
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
 con_pag++;
 fprintf (fp,"%s",salte_pagina);
 if (!strcmp(codigo_emp.arr,"3"))
     (strful(nomb_emp.arr,30,' '));
 strful(cadena,(int)(48-strlen(nomb_emp.arr))/2,' ');
 fprintf (fp,"%s%s%s%s%s\n\n",diezcpi,ancho_on,cadena,nomb_emp.arr,ancho_off);
 fprintf (fp,"%55s%30s%d\n\n","CARTERA DE CLIENTES NACIONALES PARA LA DIAN","Pagina # ",con_pag);
 strful(cadena,(int)(96-strlen(nomb_emp.arr))/2,' ');
 fprintf (fp,"%s%s%s%s%s\n\n",cadena,enfatizado_on,fecha_listado,enfatizado_off,condensado_on);
 fprintf (fp,"%-2s %16s %-40s %-45s %-20s %18s\n\n","CL","N I T","NOMBRE   DEL   CLIENTE ","DIRECCION","CIUDAD","SALDO");
 con_lin=8;
}

void total()
{
   sprintf (cadena,"%12.2f",saldo_total);
   fprintf (fp,"\n%50s%32s\n","Total...",fmtnum("zz,zzz,zzz,zzz.zz",cadena,r_t));
   con_lin=66;
   saldo_total=0;
}
