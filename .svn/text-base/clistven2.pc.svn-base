/*****************************************************************
* CLISTINT.C Version 1.0 - Rev 1.2 - Ago. 26/93.
*
* clistven.c Programa lista carta de facturas pendientes de un cliente
*
* Uso : clistint codigo_emp cod_ini cod_fin fecha_corte
*       device userid/password
*
* Mario E. Santiago I. Creado Agosto 26-1993
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>


double redondo();
void titulos();
void imprime_facturas();
void pie_carta();
                                     /* Parametros de comunicacion con ORACLE */

EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid            [100]; 
VARCHAR nomb_emp       [61];
VARCHAR nomb_clie      [41];
VARCHAR nomb_repre     [41];
VARCHAR nomb_ciu       [21];
VARCHAR codigo_cliente [6];
VARCHAR cod_clie       [6];
VARCHAR codigo_emp     [3];
VARCHAR fecha_documento[10];
VARCHAR fecha_vencmto  [10];
double  saldo_factura;
double  numero_factura;
VARCHAR tipo_documento [3];
float   dias_factura;
VARCHAR ano_mes        [9];
VARCHAR cod_cliei      [6];
VARCHAR cod_clief      [6];
double  saldo_cliente;
double  total_facturas;

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;

char    *fmtnum(), r_t[80];
int     con_pag=0;
int     con_lin=66;
char    copias[3];
char    mes_t[7][10];
int     i;
int     w_ano_corte;
int     w_mes_corte;
int     w_dia_corte;
int     ano_corte;
int     mes_corte;
int     dia_corte;
char    cadena[100];
char    cadena2[30];
char    wcadena[30];
char    fecha_corte[7];
char    mensajes[20];
int     a;
int     oraest;
extern  double redondo();

void main(argc, argv)
int     argc;
char    *argv[];
{
 char	device[6];
 int	status = 0;

 if (argc < 6)
    {
     printf ("Incorrecta invocacion:\n");
     printf ("Uso : clistint codigo_emp clie_ini clie_fin\n");
     printf ("fecha_corte device userid/password\n");
     printf ("      device : t salida por terminal\n");
     printf ("               Px salida por impresora (x nro printer)\n");
     printf ("               userid/password nombre usuario y password\n");
     exit (1);
    }

 strcpy (codigo_emp.arr, argv[1]);
 codigo_emp.len   =  strlen(codigo_emp.arr);
 strcpy (cod_cliei.arr,   argv[2]);
 cod_cliei.len    =  strlen(cod_cliei.arr);
 strcpy (cod_clief.arr,   argv[3]);
 cod_clief.len    =  strlen(cod_clief.arr);
 strcpy (fecha_corte, argv[4]);
 strcpy (ano_mes.arr,fecha_corte);
 strorg (ano_mes.arr,1,6);
 ano_mes.len      =  strlen(ano_mes.arr);
 strcpy (device,     argv[5]);
 strlow (device);
 strcpy(cadena,fecha_corte);
 strorg(cadena,7,2);
 dia_corte =  atoi(cadena);
 strcpy(cadena,fecha_corte);
 strorg(cadena,5,2);
 mes_corte =  atoi(cadena);
 strcpy(cadena,fecha_corte);
 strorg(cadena,1,4);
 ano_corte =  atoi(cadena);

 if (!strpos ("/",   argv[6]))
    {
     printf ("user id/password incorrecto.\n");
     exit (1);
 }
 strcpy (uid.arr,    argv[6]);
 uid.len   =  strlen(uid.arr);

 EXEC SQL CONNECT :uid;

 if (sqlca.sqlcode==-1915) {
     fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
	      sqlca.sqlcode);
     exit (1);
 }
 else if (sqlca.sqlcode==-1017) {
          fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
          exit (1);
      }
      else if (sqlca.sqlcode)
               exit (1);

 busco_impresora(device);
 abre_impresora("1");

 EXEC SQL DECLARE C2 CURSOR FOR
        select to_char(fecha_documento,'yyyymmdd'), facturam.saldo,
               facturas.numero_factura, facturas.tipo_documento,
               sysdate - facturas.fecha_documento,
               codigo_cliente
        from   facturas, facturam
        where  facturas.tipo_factura    = facturam.tipo_factura   and
               facturas.tipo_documento  = facturam.tipo_documento and
               facturas.numero_factura  = facturam.numero_factura and
               facturam.ano_mes         =
               (select max(fm.ano_mes)
                from facturam fm
                where fm.tipo_factura   = facturas.tipo_factura   and
                      fm.tipo_documento = facturas.tipo_documento and
                      fm.numero_factura = facturas.numero_factura and
                      fm.ano_mes       <= to_number(:ano_mes))    and
         facturas.tipo_factura          = to_number(:codigo_emp)  and
         facturas.codigo_cliente       >= (:cod_cliei)            and
         facturas.codigo_cliente       <= (:cod_clief)            and
         facturas.estado_factura        = 0                       and
         facturas.estado_cartera        = 0                       and
         facturas.fecha_documento+59    < sysdate
         order by codigo_cliente, fecha_documento;

 EXEC SQL OPEN C2;

 EXEC SQL FETCH C2 INTO :fecha_documento, :saldo_factura, :numero_factura,
                        :tipo_documento,  :dias_factura, :codigo_cliente;

 if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) 
     fprintf (stderr, "Error leyendo C2 (%d)\n", sqlca.sqlcode);

 oraest  = sqlca.sqlcode;

 fecha_documento.arr  [fecha_documento.len] = '\0';
 tipo_documento.arr   [tipo_documento.len]  = '\0';
 codigo_cliente.arr   [codigo_cliente.len]  = '\0';
 fecha_vencmto.arr    [fecha_vencmto.len]   = '\0';

 EXEC SQL select nombre into :nomb_emp
          from   empresas, nits
          where  empresas.codigo_nit = nits.codigo_nit and
                 empresas.codigo_emp = to_number(:codigo_emp);

 nomb_emp.arr[nomb_emp.len] = '\0';

 fprintf(fp,"%s%c\r",tamano_pagina,33);
 while (oraest==0) {
    strcpy(cod_clie.arr,codigo_cliente.arr);
    cod_clie.len = strlen(cod_clie.arr);
    /* C1 */
    EXEC SQL select n.nombre, r.nombre, nvl(n.nombre_muni,c.nombre)
             into :nomb_clie, :nomb_repre, :nomb_ciu
             from  nits n, representa r, ciudades c, clientes cl
             where n.codigo_nit       = cl.codigo_nit               and
                   n.codigo_nit       = r.codigo_nit(+)             and
                   n.codigo_ciu       = c.codigo                    and
                   cl.codigo_cliente  = (:cod_clie)
             group by cl.codigo_cliente, n.nombre, r.nombre,
                   n.nombre_muni, c.nombre;

 nomb_clie.arr   [nomb_clie.len]  = '\0';
 nomb_repre.arr  [nomb_repre.len] = '\0';
 nomb_ciu.arr    [nomb_ciu.len]   = '\0';

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) 
        fprintf (stderr, "Error leyendo Cliente (%s)(%s)(%d)\n", cod_clie.arr, codigo_cliente.arr, sqlca.sqlcode);

    /* C3 */
    EXEC SQL select sum(facturam.saldo)
             into   :total_facturas
             from   facturas, facturam
             where  facturas.tipo_factura    = facturam.tipo_factura   and
                    facturas.tipo_documento  = facturam.tipo_documento and
                    facturas.numero_factura  = facturam.numero_factura and
                    facturam.ano_mes         =
                    (select max(fm.ano_mes)
                     from facturam fm
                     where fm.tipo_factura   = facturas.tipo_factura   and
                           fm.tipo_documento = facturas.tipo_documento and
                           fm.numero_factura = facturas.numero_factura and
                           fm.ano_mes       <= to_number(:ano_mes))    and
              facturas.tipo_factura          = to_number(:codigo_emp)  and
              facturas.codigo_cliente        = (:cod_clie)             and
              facturas.estado_factura        = 0                       and
              facturas.estado_cartera        = 0                       and
              facturas.fecha_documento+59    < sysdate;

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) 
        fprintf (stderr, "Error leyendo saldo cliente (%d)\n", sqlca.sqlcode);

    titulos();
    while ( !strcmp(cod_clie.arr, codigo_cliente.arr) && oraest == 0 ) {
          imprime_facturas();
    }
    pie_carta();
 }

 cierre_impresora();

 EXEC SQL CLOSE C2;
 EXEC SQL COMMIT WORK RELEASE;
 exit   (0);
}

void titulos()
{
 fecha_system(cadena);
 fprintf(fp,"%s%30s%s %s \n\n\n",diezcpi," ","Barranquilla, ",cadena);
 if (!strcmp(codigo_emp.arr,"3")) 
        strcpy(nomb_emp.arr,"");
 strful(cadena,(int)(62-strlen(nomb_emp.arr))/2,' ');
 fprintf(fp,"%s%s%s%s\n\n\n",cadena,ancho_on,nomb_emp.arr,ancho_off);
 fprintf(fp,"Se|or(es)\n");
 fprintf(fp,"%s\n",nomb_clie.arr);
 if (strcmp(codigo_emp.arr,"3"))
     fprintf(fp,"Att: %s\n",nomb_repre.arr);
 fprintf(fp,"%s\n\n\n",nomb_ciu.arr);
 fprintf(fp,"Estimado cliente, le informamos que a la fecha no hemos recibido el pago\n");
 fprintf(fp,"correspondiente a la(s) factura(s) vencidas, que asciende a la  suma  de\n");
 sprintf(cadena,"%14.0f",total_facturas);
 fprintf(fp,"$%s y presenta una mora a ma\b's de 60 di\b'as\n\n",fmtnum("zzz,zzz,zz9",cadena,r_t));
 fprintf(fp," FECHA      NUMERO                DIAS\n");
 fprintf(fp," FACTURA    FACTURA       VALOR  EMISION\n\n");
}

void imprime_facturas()
{
 strcpy(cadena,fecha_documento.arr);
 fprintf(fp,"%s %2s%06.0f ",fmtnum("9999/99/99",cadena,r_t),tipo_documento.arr,numero_factura);
 sprintf(cadena,"%9.0f",saldo_factura);
 fprintf(fp,"$%11s ",fmtnum("zzz,zzz,zzz",cadena,r_t));
 fprintf(fp,"%4.0f\n",dias_factura);
 con_lin++;
 EXEC SQL FETCH C2 INTO :fecha_documento, :saldo_factura, :numero_factura,
                        :tipo_documento, :dias_factura, :codigo_cliente;
 fecha_documento.arr  [fecha_documento.len] = '\0';
 tipo_documento.arr   [tipo_documento.len]  = '\0';
 codigo_cliente.arr   [codigo_cliente.len]  = '\0';
 fecha_vencmto.arr    [fecha_vencmto.len]   = '\0';
 oraest  = sqlca.sqlcode;
}

void pie_carta()
{
 fprintf(fp,"\nAgradecemos su cancelacio'\bn inmediata.\n");
 fprintf(fp,"%sNILSON S. PORRAS M.%s\n",enfatizado_on,enfatizado_off);
 fprintf(fp,"%sDEPARTAMENTO DE CARTERA%s%s\n\n\n\n",enfatizado_on,enfatizado_off,salte_pagina);
}
