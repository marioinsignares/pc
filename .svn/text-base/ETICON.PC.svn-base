/*****************************************************************
* (MTL). ETICON.C Version 1.0 - Rev 1.2 - Feb. 17/98.
*
* eticon.c. Lista las Etiquetas Vistasoft y Centrisoft.
*
* uso : eticon orden_ini orden_fin device userid/password
*
* Martin A. Toloza Lozano. Creado Febrero 17-1998.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

void imprima();
void strltr();
				     /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100]; 
                                 /* Produclc (C1) */
double  numero_orden;
VARCHAR fecha_documento[20];
float   ult_etiqueta;
VARCHAR codigo_material[13];
VARCHAR tipo_material  [3];
float   diametro;
VARCHAR curva_base     [5];
float   poder;
int     cantidad;
int     a2k;
VARCHAR nombre         [51];
VARCHAR orden_ini      [6];
VARCHAR orden_fin      [6];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
                                            /* Variables globales del usuario */
double  conse;
int     staora = 0;
int     tab;
char    orden[9];
char    mensaje[35];
char    fecha[20];
char    tabla[5][30];
struct  imp {
         char  por[30];                 /* Porcentaje de agua       */
         char  cur[30];                 /* Curva base               */
         char  dia[30];                 /* Diametro del lente       */
         char  pod[30];                 /* Poder del lente          */
         char  con[30];                 /* Consecutivo              */
         char  fec[30];                 /* Fecha de la orden        */
            };
struct  imp vec[3];

void main(argc, argv)
int     argc;
char    *argv[];
{

char	 device[6];
char	 leon[6];                           /* condensado + enfatizado_on */
char	 leof[6];                           /* condensado + enfatizado_of */
char     pod[10];
int	 i, act, tipo, tipw;
double curva;

    if (argc < 5)
       {
	printf ("Incorrecta invocacion:\n");
	printf ("Uso : eticon orden_ini orden_fin device userid/password\n");
	printf ("      device : t salida por terminal\n");
	printf ("               Px salida por impresora (x nro printer)\n");
	printf ("               userid/password nombre usuario y password\n");
        exit (1);
       }

       strcpy (orden_ini.arr, argv[1]);
       orden_ini.len   =      strlen(orden_ini.arr);
       strcpy (orden_fin.arr, argv[2]);
       orden_fin.len   =      strlen(orden_fin.arr);
       strcpy (device, argv[3]);
       strlow (device);

    if (!strpos ("/", argv[4]))
       {
        printf ("user id/password incorrecto.\n");
	exit (1);
       }

    strcpy (uid.arr,   argv[4]);
    uid.len   =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora("1");

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/
    EXEC SQL select y2k
             into   :a2k
             from   ano2000;
    if (sqlca.sqlcode != 0 ) {
       fprintf (stderr, "Error, No existe registro alguno en tabla Y2K (%d)\n", sqlca.sqlcode);
       exit (1);
    }

    EXEC SQL DECLARE C1 CURSOR FOR
	     select numero_orden, fecha_documento, nvl(ult_etiqueta,0),
	            codigo_material,
                    decode(tipo_material,'03','01','06','01','00'),
                    diametro, curva_base, poder, nvl(cantidad,0), nombre
	     from produclc, almacen
             where codigo_material = almacen.codigo_articulo and
                  (numero_orden   >= :orden_ini              and
                   numero_orden   <= :orden_fin)
             order by numero_orden;

    EXEC SQL OPEN C1;

    sprintf (leon ,"%s", enfatizado_on);
    sprintf (leof ,"%s", enfatizado_off);
    tab    = 0;
    tipo   = atoi(tipo_material.arr);
    tipw   = 0;
    staora = 0;
    while (staora == 0) {

          EXEC SQL FETCH C1 INTO :numero_orden, :fecha_documento, :ult_etiqueta,
                                 :codigo_material, :tipo_material, :diametro,
                                 :curva_base, :poder, :cantidad, :nombre;

          staora  = sqlca.sqlcode;
          if (staora ==  1403) break;
          if (staora == -1405)
              staora  = 0;
          else if (staora)
                   fprintf (stderr, "Error leyendo C1 (%d)\n", staora);

          fecha_documento.arr [fecha_documento.len] = '\0';
          codigo_material.arr [codigo_material.len] = '\0';
          tipo_material.arr   [tipo_material.len]   = '\0';
          curva_base.arr      [curva_base.len]      = '\0';
          nombre.arr          [nombre.len]          = '\0';

          if (ult_etiqueta > 0)
             {
              if (tipo == atoi(tipo_material.arr) && tipw == 0)
                 { 
                  if (!strcmp (tipo_material.arr, "01"))
                       strcpy (mensaje, "Monte las etiquetas para Centrisoft");
                  else strcpy (mensaje, "Monte las etiquetas para Vistasoft ");
                  printf ("%58s\n", mensaje);
                  printf ("%60s\n", "Prenda la Impresora y presione <ENTER>");
                  getchar();

                  tipw = 1;
                  fprintf (fp, "%s%s%s\n", diezcpi,line_feed8vo,condensado_on);
                 }
              else
                  if (tipo != atoi(tipo_material.arr))
                      goto sigue;

              conse = ult_etiqueta;
              curva = atof(curva_base.arr) * .1;
              act   = (strpos ("%", nombre.arr)) - 2;
              strorg (nombre.arr, act, 2);
              strcpy (fecha, fecha_documento.arr);
              strorg (fecha, 4, (a2k+4));
                                                 
              sprintf (pod, "%9.2f", poder);
              if (poder > 0)
                 {
                  strltr (pod);
                  strcpy (orden, pod);
                  sprintf (pod, "%s%s", "+", orden);
                 }
                    
              sprintf (tabla[0], "%s%s%s%12.2f", leon, "CB", leof, curva);
              sprintf (tabla[1], "%s%s%s%10.2f", leon, "DIAM", leof, diametro);
              sprintf (tabla[2], "%s%s%s%9s", leon, "PODER", leof, pod);
              sprintf (orden, "%s%s%s", leon, "CONTROL", leof);
              sprintf (tabla[4], "%s%s%s%10s", leon, "F-EMPAQUE", leof, fecha);
 
               /* Lista los consecutivos de la Orden. */
              for (i=0; i<cantidad; i++)
                  {
                   if (tab == 3)
                       imprima();
                          
                   sprintf (tabla[3], "%s%6.0f%s%06.0f", orden, numero_orden,                                         "-", conse);
                                                        
                   strcpy (vec[tab].por, nombre.arr);
                   strcpy (vec[tab].cur, tabla[0]);
                   strcpy (vec[tab].dia, tabla[1]);
                   strcpy (vec[tab].pod, tabla[2]);
                   strcpy (vec[tab].con, tabla[3]);
                   strcpy (vec[tab].fec, tabla[4]);

                   tab++;
                   conse++;
                  }
             }
                 /* Lee otra Orden */
           sigue:;
          }

    if (tab > 0)
        imprima();
    fprintf (fp, "%s%s\r", line_feed6,condensado_off);

    cierre_impresora();
    system ("clear");

    EXEC SQL CLOSE C1;

    EXEC SQL COMMIT WORK RELEASE;

    exit   (0);
}

/************************
* IMPRIMA()
*    Imprime una linea de etiquetas en el archivo de spool.
*/

void imprima()
{
    int j;
    if (!strcmp (tipo_material.arr, "00"))
       {       
        fprintf (fp, "%-22s%20s%42s%24s%42s%24s\n", vec[0].cur,vec[0].por, vec[1].cur,vec[0].por, vec[2].cur,vec[0].por);
        fprintf (fp, "%-24s%60s%66s\n", vec[0].dia, vec[1].dia, vec[2].dia);
        fprintf (fp, "%-24s%60s%66s\n", vec[0].pod, vec[1].pod, vec[2].pod);
        fprintf (fp, "%-30s%60s%66s\n", vec[0].con, vec[1].con, vec[2].con);
        fprintf (fp, "%-29s%60s%66s\n\n\n\n",vec[0].fec,vec[1].fec,vec[2].fec);
       }
    else   
       {       
        fprintf (fp, "%23s%61s%61s\n\n",  vec[0].por, vec[1].por, vec[2].por);
        fprintf (fp, "%35s%65s%66s\n",    vec[0].dia, vec[1].dia, vec[2].dia);
        fprintf (fp, "%35s%65s%66s\n",    vec[0].pod, vec[1].pod, vec[2].pod);
        fprintf (fp, "%41s%65s%66s\n",    vec[0].con, vec[1].con, vec[2].con);
        fprintf (fp, "%40s%65s%66s\n\n\n",vec[0].fec, vec[1].fec, vec[2].fec);
       }
    for (j=0; j<3; j++)
        {
         strcpy (vec[j].por, "");
         strcpy (vec[j].cur, "");
         strcpy (vec[j].dia, "");
         strcpy (vec[j].pod, "");
         strcpy (vec[j].con, "");
         strcpy (vec[j].fec, "");
        }
    tab = 0;
}
