/*****************************************************************
* ROTULODE.C Version 1.0 - Rev 1.2 - May. 29/90.
*
* resuven.c Programa de facturacion para listar las facturacion de la quincena
*
* Uso : resuven codigo_emp tipo_cliente cliente_ini cliente_fin device
* copias userid/password
*
* Mario E. Santiago I. Creado Enero 06-1998, Modificado en Sep 09-1999.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

double redondo();
void titulos();
void totales();
void totaliza( int i);
void total_fletes();
void titulo_ciudad();
void borro_totales( int i);
void acumulo_totales( int i);
void calculo_fletes();
void datos_cliente();
				     /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
                                 /* Ordenes (C1) */
VARCHAR codigo_cliente [10];
double  consecutivo;
double  numero_orden;
VARCHAR clase_material [5];
double  valor_total;
VARCHAR tipo_cliente   [3];
VARCHAR contado        [3];
VARCHAR codigo_emp     [5];
VARCHAR codigo_emp_op  [5];
VARCHAR numero_quincena[5];
VARCHAR cliente_ini    [10];
VARCHAR cliente_fin    [10];
VARCHAR clase_docu     [5];
int     si_retefte;
int     cm_retefte;
                                 /* Fletes (C2) */
double  fletes;
VARCHAR cantidad_envios[10];
float   ncantidad_env;
                                 /* Envios (C3) */
float   nro_despachos;
double  valor_env;
VARCHAR wcod           [10];
                                 /* Flestescob (C4) */
int     cob_fletes;
                                 /* Nits (C5) */
VARCHAR nomb_clie      [60];
VARCHAR nomb_ciu       [30];
VARCHAR direccion      [60];
double  telefono;
                                 /* Control_fac (C6) */
double  ultimo_numero;
VARCHAR ano_mes        [10];
float   ptaje_iva;
double  vencimiento;
VARCHAR fecha_inicial  [20];
VARCHAR corte          [20];
                                 /* Ciudades (C7) */
VARCHAR nomb_ciudad    [30];
VARCHAR wciu           [10];

double  retefte;
double  monto_retefte;

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
                                            /* Variables globales del usuario */
#define A_F1 "###,###,###.##"
#define O1 " Impresion en proceso...... "
#define O2 " Recuperacion en proceso...... "

char *fmtnum(), r_t[150];
int     con_pag=0;                                 /* Contador de Paginas */
int     con_lin=66;                                /* Contador de Lineas  */
int	staora =0;
int     total_paginas;
char    copias[5];
char    wtipo_cliente[5];
char    wcontado[5];
char    fechas[200];
char    fecha[20];
double  t_fletes;
int     oraest2;

char    cadena[200];
char    wciu2[10];
int     actual=1;
float   nro_ordenes;
float   t_nro_despachos;
float   nro_ordenes_o;
float   nro_ordenes_c;
double  sub_total;
double  sub_total_o;
double  sub_total_c;
double  impue;
double  base_gravable;
double  rete_fte;
double  costo_factura;
struct acm {
            float   nro_despachos;
            double  fletes;
           };
struct acm acum[3];

struct acu {
            float   a_nro_ordenes;
            float   a_nro_despachos;
            float   a_nro_ordenes_o;
            float   a_nro_ordenes_c;
            double  a_sub_total;
            double  a_sub_total_o;
            double  a_sub_total_c;
            double  a_fletes;
            double  a_impue;
            double  a_rete_fte;
            double  a_costo_factura;
           };
struct acu vect[2];
int     pasan=0;
float   c;
char    division[2];
char    n[60];
char    n1[60];
char    n2[60];
char    formas[5];

void main(argc, argv)
int     argc;
char    *argv[];
{

char    device[10];
int	status = 0;

if (argc < 9)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : resuven codigo_emp numero_quincena\n");
    printf ("cliente_ini cliente_fin \n");
    printf ("device copias formas userid/password\n");
    printf ("      device : t salida por terminal\n");
    printf ("               Px salida por impresora (x nro printer)\n");
    printf ("               userid/password nombre usuario y password\n");
    exit (1);
   }

strcpy (codigo_emp.arr     , argv[1]);
codigo_emp.len      =        strlen(codigo_emp.arr);
strcpy (numero_quincena.arr, argv[2]);
numero_quincena.len =        strlen(numero_quincena.arr);
strcpy (cliente_ini.arr    , argv[3]);
cliente_ini.len     =        strlen(cliente_ini.arr);
strcpy (cliente_fin.arr    , argv[4]);
cliente_fin.len     =        strlen(cliente_fin.arr);
strcpy (device,      argv[5]);
strlow (device);
strcpy (copias,      argv[6]);
strcpy (formas,      argv[7]);

if (!strpos ("/", argv[8]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,   argv[8]);
uid.len   =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

  EXEC SQL DECLARE C1 CURSOR FOR
        select o.codigo_cliente,
               o.consecutivo, o.numero_orden,
               o.clase_material, nvl(o.valor_total,0),
               nvl(e.tipo_cliente,'0'), contado
	from ordenes_c o, clientese e
        where o.codigo_cliente   = e.codigo_cliente(+)              and
               :numero_quincena  = e.numero_quincena(+)             and
              o.codigo_cliente  >=  :cliente_ini                    and
              o.codigo_cliente  <=  :cliente_fin                    and
              nvl(o.estado,0)   <> 'R'                              and
              o.fecha_documento >=  :fecha_inicial                  and
              o.fecha_documento <=  :corte
        group by o.codigo_cliente, o.consecutivo, o.numero_orden,
                 o.clase_material, o.valor_total, e.tipo_cliente, contado
        order by o.codigo_cliente, o.consecutivo, o.numero_orden,
                 o.clase_material, o.valor_total, e.tipo_cliente, contado;

  EXEC SQL select ultimo_numero, ano||lpad(mes_proceso,2,0), ptaje_iva,
               to_number(to_char(to_date(
               decode(to_number(numero_quincena),
                    1,to_number(ano||lpad(mes_proceso,2,0)||15),
                    2,to_number(to_char(last_day(to_date(ano||lpad(mes_proceso,2,0),'yymm')),'yyyymmdd'))),'yymmdd')+15,'yyyymmdd')),
               to_date(
               decode(to_number(numero_quincena),
                  1,to_number(ano||lpad(mes_proceso,2,0)||lpad(1,2,0)),
                  2,to_number(ano||lpad(mes_proceso,2,0)||16)),'yyyymmdd'),
               to_date(to_char(to_date(
               decode(to_number(numero_quincena),
                  1,to_number(ano||lpad(mes_proceso,2,0)||lpad(15,2,0)),
                  2,to_number(to_char(last_day(to_date(ano||lpad(mes_proceso,2,0),'yymm')),'yyyymmdd'))),'yymmdd'),'yyyymmdd'),'yymmdd'),
                  retefte, monto_retefte
           into  :ultimo_numero, :ano_mes, :ptaje_iva,
                 :vencimiento, :fecha_inicial, :corte,
                 :retefte, :monto_retefte
           from  control_fac
           where codigo_emp    = :codigo_emp;


  if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
      fprintf (stderr, "Error leyendo C6 (%d)\n", sqlca.sqlcode);

  ano_mes.arr       [ano_mes.len]       = '\0';
  fecha_inicial.arr [fecha_inicial.len] = '\0';
  corte.arr         [11]                = '\0';
  ano_mes.len       = strlen(ano_mes.arr);
  fecha_inicial.len = strlen(fecha_inicial.arr);
  corte.len         = strlen(corte.arr);


  strcpy(fecha,fecha_inicial.arr);
  fecha_oracle(fecha);
  strcpy(cadena,fecha);
  strcpy(fecha,corte.arr);
  strcat(cadena," hasta ");
  fecha_oracle(fecha);
  strcat(cadena,fecha);
  strcpy(fechas,cadena);

  EXEC SQL OPEN C1;
  pasan  = 0;
  staora = 0;
  while (staora == 0) {
         EXEC SQL FETCH C1 INTO :codigo_cliente, :consecutivo, :numero_orden,
                                :clase_material, :valor_total, :tipo_cliente, :contado;

         staora  = sqlca.sqlcode;
         if (staora ==  1403) break;
         if (staora == -1405)
             staora  = 0;
         else if (staora)
                  fprintf (stderr, "Error leyendo C1 (%d)\n", staora);

         codigo_cliente.arr [codigo_cliente.len] = '\0';
         clase_material.arr [clase_material.len] = '\0';
         tipo_cliente.arr   [tipo_cliente.len]   = '\0';
         contado.arr        [contado.len]        = '\0';

         if (pasan == 0) {
             pasan  = 1;
             strcpy(wcod.arr,codigo_cliente.arr);
             strcpy(wciu.arr,codigo_cliente.arr);
             strcpy(wtipo_cliente,tipo_cliente.arr);
             strcpy(wcontado,contado.arr);
             strorg(wciu.arr,1,2);
            }
         if (strcmp(wcod.arr,codigo_cliente.arr))
            {
             totales();
             strcpy(wciu2,codigo_cliente.arr);
             strorg(wciu2,1,2);
             if (strcmp(wciu2,wciu.arr))
                {
                 strcpy(cadena,"TOTAL CIUDAD");
                 totaliza(0);
                 strcpy(wciu.arr,codigo_cliente.arr);
                 strorg(wciu.arr,1,2);
                 if (con_lin > 58)
                    titulos();
                 titulo_ciudad();
                }
            }
         if (!strcmp(clase_material.arr,"C"))
            {
             strcpy(division,"2");
             sub_total_c+=valor_total;
             nro_ordenes_c++;
            }
         else
            {
             strcpy(division,"1");
             sub_total_o+=valor_total;
             nro_ordenes_o++;
            }
      }

  if (con_lin > 56)
     titulos();
  totales();
  strcpy(cadena,"TOTAL CIUDAD");
  totaliza(0);
  strcpy(wciu.arr,codigo_cliente.arr);
  strorg(wciu.arr,1,2);
  strcpy(cadena,"TOTALES GENERALES");
  totaliza(1);
  total_fletes();

  cierre_impresora();

  EXEC SQL CLOSE C1;

  EXEC SQL COMMIT WORK RELEASE;

  exit   (0);
}

void totales()
{
 int i;
 calculo_fletes();
 if (valor_env == 0)
    {
     if (c >= 1 && c <= 1.5)
        fletes=nro_despachos*fletes*cob_fletes;
     else fletes=nro_ordenes*fletes*cob_fletes;
    }
 sub_total=sub_total_o+sub_total_c;
 impue=0;
 if(!strcmp(wtipo_cliente,"0"))
    impue=((sub_total+fletes)*ptaje_iva)/100;
 impue=redondo(impue);

 base_gravable = sub_total+fletes;
 datos_cliente();
 EXEC ORACLE OPTION (RELEASE_CURSOR=YES);
 EXEC SQL select codigo_emp
          into  :codigo_emp_op
          from opticasp
          where codigo_cliente = :wcod and
                codigo_emp is not null;
 oraest2  = sqlca.sqlcode;
// printf("%s %s %s %9.0f %9.0f",wcontado,tipo_cliente.arr,clase_docu.arr, base_gravable, monto_retefte); getchar();
 if(strcmp(wcontado,"1")) {
    if(!strcmp(wtipo_cliente,"0")) {
       rete_fte = 0;
     //printf("wcod<%s> oraest2<%d>",wcod.arr,oraest2); getchar();
//     if (!strcmp(clase_docu.arr,"N")) {  //Para las opticas propias debe calcular la Retefuente por cualquier monto
       if (si_retefte == 1) {
          if (base_gravable >= monto_retefte || cm_retefte == 1 || oraest2 == 0 || oraest2 ==  -1405 ) {
              rete_fte = base_gravable*retefte/100;
              rete_fte = redondo( rete_fte );
          }
       }
//     }
    }
 }
 costo_factura=base_gravable+impue-rete_fte; //Total factura
 EXEC ORACLE OPTION (RELEASE_CURSOR=NO);

 if (con_lin > 60)
    titulos();
 fprintf(fp,"%-7s",wcod.arr);
 fprintf(fp,"%-39s",nomb_clie.arr);
 sprintf(cadena,"%6.0f",nro_ordenes_o);
 fprintf(fp,"%3s",fmtnum("zz9",cadena,r_t));
 sprintf(cadena,"%6.2f",sub_total_o);
 fprintf(fp,"%15s",fmtnum("zzz,zzz,zz9.99",cadena,r_t));
 sprintf(cadena,"%6.0f",nro_ordenes_c);
 fprintf(fp,"%9s",fmtnum("zz9",cadena,r_t));
 sprintf(cadena,"%6.2f",sub_total_c);
 fprintf(fp,"%14s",fmtnum("zzz,zzz,zz9.99",cadena,r_t));
 sprintf(cadena,"%6.0f",nro_despachos);
 fprintf(fp,"%9s",fmtnum("zz9",cadena,r_t));
 sprintf(cadena,"%6.2f",fletes);
 fprintf(fp,"%16s",fmtnum("zzz,zzz,zz9.99",cadena,r_t));
 sprintf (cadena,"%8.2f",impue);
 fprintf(fp,"%16s",fmtnum("zzz,zzz,zz9.99",cadena,r_t));
 sprintf (cadena,"%7.0f",rete_fte);
 fprintf(fp,"%10s",fmtnum("z,zzz,zz9",cadena,r_t));
 sprintf (cadena,"%6.2f",costo_factura);
 fprintf(fp,"%16s\n",fmtnum("zzz,zzz,zz9.99",cadena,r_t));
 con_lin+=1;
 for (i=0;i<=1;++i)
     acumulo_totales(i);
 strcpy(wcod.arr,codigo_cliente.arr);
 strcpy(wtipo_cliente,tipo_cliente.arr);
 strcpy(wcontado,contado.arr);
 sub_total=0;
 sub_total_o=0;
 sub_total_c=0;
 nro_ordenes_o=0;
 nro_ordenes_c=0;
 nro_despachos=0;
 fletes=0;
 rete_fte=0;
 costo_factura=0;
 total_paginas=0;
}

void totaliza(i)
int i;
{
 if (con_lin > 60)
    titulos();
 fprintf(fp,"\n%-7s"," ");
 fprintf(fp,"%s%s%-18s%s%s",enfatizado_on,ancho_on,cadena,enfatizado_off,ancho_off);
 sprintf(cadena,"%6.0f",vect[i].a_nro_ordenes_o);
 fprintf(fp,"%6s",fmtnum("z,zz9",cadena,r_t));
 sprintf(cadena,"%6.2f",vect[i].a_sub_total_o);
 fprintf(fp,"%15s",fmtnum("zzz,zzz,zz9.99",cadena,r_t));
 sprintf(cadena,"%6.0f",vect[i].a_nro_ordenes_c);
 fprintf(fp,"%9s",fmtnum("z,zz9",cadena,r_t));
 sprintf(cadena,"%6.2f",vect[i].a_sub_total_c);
 fprintf(fp,"%14s",fmtnum("zzz,zzz,zz9.99",cadena,r_t));
 sprintf(cadena,"%6.0f",vect[i].a_nro_despachos);
 fprintf(fp,"%9s",fmtnum("z,zz9",cadena,r_t));
 sprintf(cadena,"%6.2f",vect[i].a_fletes);
 fprintf(fp,"%16s",fmtnum("zzz,zzz,zz9.99",cadena,r_t));
 sprintf (cadena,"%6.2f",vect[i].a_impue);
 fprintf(fp,"%16s",fmtnum("zzz,zzz,zz9.99",cadena,r_t));
 sprintf (cadena,"%6.2f",vect[i].a_rete_fte);
 fprintf(fp,"%10s",fmtnum("z,zzz,zz9",cadena,r_t));
 sprintf (cadena,"%6.2f",vect[i].a_costo_factura);
 fprintf(fp,"%16s\n",fmtnum("zzz,zzz,zz9.99",cadena,r_t));
 con_lin+=2;
 borro_totales(i);
}

void total_fletes()
{
/* strcpy(cadena,"TOTAL FLETES SERVICOMERCIALES");
 fprintf(fp,"\n%s%s%-40s%s",enfatizado_on,diezcpi,cadena,enfatizado_off);
 sprintf(cadena,"%6.0f",acum[0].nro_despachos);
 fprintf(fp,"%9s",fmtnum("z,zz9",cadena,r_t));
 sprintf(cadena,"%6.2f",acum[0].fletes);
 fprintf(fp,"%16s\n",fmtnum("zzz,zzz,zz9.99",cadena,r_t));
 strcpy(cadena,"TOTAL FLETES OTRAS RUTAS");
 fprintf(fp,"\n%s%-40s%s",enfatizado_on,cadena,enfatizado_off);
 sprintf(cadena,"%6.0f",acum[1].nro_despachos);
 fprintf(fp,"%9s",fmtnum("z,zz9",cadena,r_t));
 sprintf(cadena,"%6.2f",acum[1].fletes);
 fprintf(fp,"%16s\n",fmtnum("zzz,zzz,zz9.99",cadena,r_t)); */
 strcpy(cadena,"TOTAL FLETES COBRADOS");
 fprintf(fp,"\n%s%-40s%s",enfatizado_on,cadena,enfatizado_off);
 sprintf(cadena,"%6.0f",acum[2].nro_despachos);
 fprintf(fp,"%9s",fmtnum("z,zz9",cadena,r_t));
 sprintf(cadena,"%6.2f",acum[2].fletes);
 fprintf(fp,"%16s\n",fmtnum("zzz,zzz,zz9.99",cadena,r_t));
/* fprintf(fp,"\n%s%s\n",enfatizado_on,"TOTAL PAGADO SERVICOMERCIALES _________________");
fprintf(fp,"\n%s\n","TOTAL PAGADO OTRAS RUTAS      _________________"); */
 fprintf(fp,"\n%s%s\n","TOTAL FLETES PAGADOS          _________________",enfatizado_off);
 con_lin+=17;
}

void titulo_ciudad()
{
 wciu.len =   strlen(wciu.arr);
 EXEC SQL select nombre into :nomb_ciudad
          from   ciudades
          where  codigo = :wciu;

 if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
     fprintf (stderr, "Error leyendo C7 (%d)\n", sqlca.sqlcode);

 nomb_ciudad.arr   [nomb_ciudad.len] = '\0';
 fprintf(fp,"\n%s%16s%s%s%s%s\n\n",enfatizado_on,ancho_on,"CIUDAD ",nomb_ciudad.arr,ancho_off,enfatizado_off);
 con_lin+=3;
}

void borro_totales(i)
int i;
{
 vect[i].a_nro_ordenes_o=0;
 vect[i].a_sub_total_o  =0;
 vect[i].a_nro_ordenes_c=0;
 vect[i].a_sub_total_c  =0;
 vect[i].a_nro_despachos=0;
 vect[i].a_fletes       =0;
 vect[i].a_impue        =0;
 vect[i].a_rete_fte     =0;
 vect[i].a_costo_factura=0;
}

void acumulo_totales(i)
int i;
{
 vect[i].a_nro_ordenes_o+=nro_ordenes_o;
 vect[i].a_sub_total_o  +=sub_total_o;
 vect[i].a_nro_ordenes_c+=nro_ordenes_c;
 vect[i].a_sub_total_c  +=sub_total_c;
 vect[i].a_nro_despachos+=nro_despachos;
 vect[i].a_fletes       +=fletes;
 vect[i].a_impue        +=impue;
 vect[i].a_rete_fte     +=rete_fte;
 vect[i].a_costo_factura+=costo_factura;
 if (i == 0)
    {
    if (!strcmp(wciu.arr,"BG")||!strcmp(wciu.arr,"CL")||
        !strcmp(wciu.arr,"SM")||!strcmp(wciu.arr,"MD")||
        !strcmp(wciu.arr,"CG"))
       {
        acum[0].nro_despachos  +=nro_despachos;
        acum[0].fletes         +=fletes;
       }
    else
       {
        acum[1].nro_despachos  +=nro_despachos;
        acum[1].fletes         +=fletes;
       }
    acum[2].nro_despachos  +=nro_despachos;
    acum[2].fletes         +=fletes;
    }
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
 con_pag++;
 if (con_pag != 1)
     fprintf(fp,"%s",salte_pagina);
 fprintf(fp,"%s%s%s%44s",diezcpi,condensado_on,ancho_on,"RESUMEN DE VENTAS PARA PRUEBA");
 fprintf(fp,"%s%s%17s %d\n\n",ancho_off,diezcpi,"PAGINA ",con_pag);
 strorg(fechas,1,strlen(fechas));
 fprintf(fp,"%s%62s%s\n\n",enfatizado_on,fechas,enfatizado_off);
 fprintf(fp,"%s%40s",condensado_on,"C L I E N T E / O P T I C A");
 fprintf(fp,"%46s\n","DIVISION OFTALMICA    DIVISION DE CONTACTO");
 fprintf(fp,"%s%156s\n",enfatizado_on,"NUMERO VALOR ORDENES  NUMERO VALOR ORDENES     NUMERO   VALOR DESPACHOS    IMPOVENTAS    RETE  VALOR FACTURACION");
 fprintf(fp,"%s%110s     %2.0f %%%14s%s%s\n\n","CODIGO","ORDENES  VENTA NETA   ORDENES VENTA NETA     DESPACHOS FLETES Y EMPAQUES",ptaje_iva,"  FUENTE  ","TOTAL VENTA",enfatizado_off);
 if (con_pag == 1)
    titulo_ciudad();
 con_lin = 9;
}

void calculo_fletes()
{
 /**** Veo si tiene fletes ****/

 wcod.len =   strlen(wcod.arr);
 EXEC SQL select to_number(decode(si_no,'S','1','N','0','1'))
          into :cob_fletes
          from  fletescob
          where codigo_cli_may >= :wcod and
                codigo_cli_men <= :wcod;

 if (sqlca.sqlcode == -2112) {
     EXEC SQL select to_number(decode(si_no,'S','1','N','0','1'))
              into :cob_fletes
              from  fletescob
              where codigo_cli_may = :wcod and
                    codigo_cli_men = :wcod;
 }
 if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
     fprintf (stderr, "Error leyendo C4 (%d)\n", sqlca.sqlcode);
 else if (sqlca.sqlcode == 1403)
          cob_fletes=0;

 /**** Veo los envios ****/

 EXEC SQL select nvl(cantidad,0), nvl(valor,0)
          into :nro_despachos, :valor_env
          from  envios
          where codigo_cliente  = :wcod            and
                ano_mes         = :ano_mes         and
                numero_quincena = :numero_quincena;

 if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
     fprintf (stderr, "Error leyendo C3 (%d)\n", sqlca.sqlcode);

 if (sqlca.sqlcode == 1403) {
     valor_env=-1;
 }

 if (valor_env == 0)
    {
     nro_ordenes=nro_ordenes_c+nro_ordenes_o;
     c=nro_ordenes/nro_despachos;
     sprintf(cantidad_envios.arr,"%2.2f",c);
     cantidad_envios.len = strlen(cantidad_envios.arr);

     cantidad_envios.arr[strpos(".",cantidad_envios.arr)-1] = ',';

     EXEC SQL select nvl(valor,0) into :fletes
              from  fletes
              where cantidad_mayor >= to_number(:cantidad_envios) and
                    cantidad_menor <= to_number(:cantidad_envios) and
                    fecha = (select max(f.fecha)
                             from   fletes f
                             where  f.fecha <= :corte);
//     printf ("nro_despachos %f nro_ordenes_c %d nro_ordenes_o %d cantidad_envios %s corte %s fletes %f\n", nro_despachos, nro_ordenes_c, nro_ordenes_o, cantidad_envios.arr, corte.arr, fletes ); getchar();
     if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) {
         fprintf (stderr, "Error leyendo C2 (%d)\n", sqlca.sqlcode);
         sqlca.sqlcode = 0;
     }
    }
 else
     if (valor_env == -1)
        {
         nro_ordenes=1;
         fletes=valor_env=0;
        }
     else
        {
         nro_ordenes=1;
         fletes=valor_env;
        }
}

void datos_cliente()
{
    wcod.len =   strlen(wcod.arr);

    EXEC SQL select n.nombre, c.nombre, n.direccion, max(nvl(t.numero,0)), n.clase_docu, si_retefte, cm_retefte
             into :nomb_clie, :nomb_ciu, :direccion, :telefono, :clase_docu, :si_retefte, :cm_retefte
             from nits n, clientes cl, telefonos t, ciudades c
             where n.codigo_nit     = cl.codigo_nit               and
                    :wcod           = cl.codigo_cliente           and
                   n.codigo_ciu     = c.codigo                    and
                   n.codigo_nit     = t.codigo_nit(+)
             group by n.nombre, c.nombre, n.direccion, n.clase_docu, si_retefte, cm_retefte
             order by n.nombre, c.nombre, n.direccion, n.clase_docu;

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo C5 (%d)\n", sqlca.sqlcode);

    nomb_clie.arr   [nomb_clie.len]  = '\0';
    nomb_ciu.arr    [nomb_ciu.len]   = '\0';
    direccion.arr   [direccion.len]  = '\0';
    clase_docu.arr  [clase_docu.len] = '\0';
    strorg(nomb_clie.arr,1,39);
}
