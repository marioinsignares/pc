/*****************************************************************
* BALANCE.C Version 1.0 - Rev 1.2 - Jun. 30/92.
*
* balancep.c. Balance General
*
* Uso : codigo_emp aamm device copias userid/password\n");
*
* Mario E. Santiago I. Creado Noviembre 19-1993.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <setjmp.h>
#include <stdlib.h>
#include <math.h>

void titulos();
void balance();
void lista_balance();
void totales();
int  uso();

EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100]; 

VARCHAR nomb_emp   [41];
double  nit;
int     digito;
VARCHAR codigo_emp [3];

VARCHAR cuenta     [15];
VARCHAR nombre_cta [61];
double  valor;
VARCHAR db_cr      [3];
VARCHAR ano_mesi   [20];
VARCHAR ano_mes    [20];
VARCHAR cuentai    [15];
VARCHAR cuentaf    [15];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
				     /* Parametros de comunicacion con ORACLE */

                                            /* Variables globales del usuario */
int     con_pag=0;                                   /* Contador de Paginas */
int     con_lin=66;                                   /* Contador de Lineas  */
int     cl;
int     staora =0;
        		                /* Variables de recepcion para datos */
char *fmtnum(), r_t[100];
int     diai;
int     mesi;
int     anoi;
double  tot_val;
char    cadena[100];
char    login[30];
char    copias[5];

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;
    if (argc < 6)
       {
	printf ("Incorrecta invocacion:\n");
        printf ("Uso : codigo_emp aaaamm copias device userid/password\n");
	printf ("      device : t salida por terminal\n");
	printf ("      device : s salida standar     \n");
	printf ("               Px salida por impresora (x nro printer)\n");
	printf ("               userid/password nombre usuario y password\n");
        exit (1);
       }
       strcpy (codigo_emp.arr, argv[1]);
       codigo_emp.len =        strlen(codigo_emp.arr);
       strcpy (copias,         argv[3]);
       strcpy (device,         argv[4]);
       strlow (device);

    if (!strpos ("/", argv[5]))
       {
        printf ("user id/password incorrecto.\n");
	exit (1);
       }

    strcpy (uid.arr,    argv[5]);
    uid.len   =         strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/

    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/
    strcpy (ano_mes.arr,    argv[2]);
    ano_mes.len    =        strlen(ano_mes.arr);
    strcpy (cadena,ano_mes.arr);
    strorg (cadena,5,2);
    mesi=atoi(cadena);
    if (mesi==13)
        mesi=12;
    sprintf (ano_mesi.arr,"%04d%02d",anoi-1,13);
    ano_mesi.len   =        strlen(ano_mesi.arr);

    EXEC SQL select n.nombre, n.nit, n.digito
                    into :nomb_emp, :nit, :digito
             from   nits n, empresas e
             where  n.codigo_nit = e.codigo_nit and
                    e.codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) 
        fprintf (stderr, "Error leyendo Empresa (%d)\n", sqlca.sqlcode);

    EXEC SQL DECLARE C2 CURSOR FOR
    select p.cuenta, p.nombre,
           sum(decode(db_cr,'DB',a.valor_deb-a.valor_cre,
                                 a.valor_cre-a.valor_deb)),
           p.db_cr
    from plan p, acumulados a
    where p.nivel      = '2'                  and
          p.cuenta     = substr(a.cuenta,1,4) and
          a.codigo_emp = p.codigo_emp         and
          a.codigo_emp = (:codigo_emp)        and
          p.cuenta    >= (:cuentai)           and
          p.cuenta    <= (:cuentaf)           and
          a.ano_mes   >= (:ano_mesi)          and
          a.ano_mes   <= (:ano_mes)
    group by p.cuenta, p.nombre, p.db_cr;

    strcpy(cuentai.arr, "1100");
    cuentai.len = strlen(cuentai.arr);
    strcpy(cuentaf.arr, "1499");
    cuentaf.len = strlen(cuentaf.arr);

    EXEC SQL OPEN C2;

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) 
        fprintf (stderr, "Error leyendo C2 (%d)\n", sqlca.sqlcode);
    else {
        titulos();
        fprintf(fp,"%s%s%s%s\n\n",elite,enfatizado_on,"                ACTIVO",enfatizado_off);
        fprintf(fp,"%s%s%s\n\n",enfatizado_on,"ACTIVO CORRIENTE",enfatizado_off);
        balance();
        EXEC SQL CLOSE C2;
        strcpy(cuentai.arr, "1500");
        cuentai.len = strlen(cuentai.arr);
        strcpy(cuentaf.arr, "1599");
        cuentaf.len = strlen(cuentaf.arr);
        EXEC SQL OPEN C2;
        fprintf(fp,"\n%s%s%s\n\n",enfatizado_on,"PROPIEDADES, PLANTA Y EQUIPO",enfatizado_off);
        balance();
        EXEC SQL CLOSE C2;
        strcpy(cuentai.arr, "1700");
        cuentai.len = strlen(cuentai.arr);
        strcpy(cuentaf.arr, "1799");
        cuentaf.len = strlen(cuentaf.arr);
        EXEC SQL OPEN C2;
        fprintf(fp,"\n%s%s%s\n\n",enfatizado_on,"OTROS ACTIVOS",enfatizado_off);
        balance();
        EXEC SQL CLOSE C2;
        strcpy(cuentai.arr, "1900");
        cuentai.len = strlen(cuentai.arr);
        strcpy(cuentaf.arr, "1999");
        cuentaf.len = strlen(cuentaf.arr);
        EXEC SQL OPEN C2;
        fprintf(fp,"\n%s%s%s\n\n",enfatizado_on,"VALORIZACIONES",enfatizado_off);
        balance();
        fprintf(fp,"\n%s%s%s%s\n\n",enfatizado_on,"TOTAL ACTIVOS",enfatizado_off,salte_pagina);
        EXEC SQL CLOSE C2;
        strcpy(cuentai.arr, "2100");
        cuentai.len = strlen(cuentai.arr);
        strcpy(cuentaf.arr, "2999");
        cuentaf.len = strlen(cuentaf.arr);
        EXEC SQL OPEN C2;
        titulos();
        fprintf(fp,"\n%s%s%s%s\n\n",elite,enfatizado_on,"                PASIVO",enfatizado_off);
        fprintf(fp,"\n%s%s%s\n\n",enfatizado_on,"PASIVO",enfatizado_off);
        balance();
        EXEC SQL CLOSE C2;
        strcpy(cuentai.arr, "3100");
        cuentai.len = strlen(cuentai.arr);
        strcpy(cuentaf.arr, "3899");
        cuentaf.len = strlen(cuentaf.arr);
        EXEC SQL OPEN C2;
        fprintf(fp,"\n%s%s%s\n\n",enfatizado_on,"PATRIMONIO",enfatizado_off);
        balance();
        fprintf(fp,"\n%s%s%s%s\n\n",enfatizado_on,"TOTAL PASIVO Y PATRIMONIOS",enfatizado_off,salte_pagina);
        fprintf(fp,"%s\f",enfatizado_off);
    }

    cierre_impresora();

    EXEC SQL CLOSE C2;

    EXEC SQL COMMIT WORK RELEASE;
    exit   (0);
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
 con_pag++;
/* fprintf(fp,"%s",salte_pagina); */
 if (!strcmp(codigo_emp.arr,"3"))
    fprintf(fp,".");
 strful(cadena,(int)(42-strlen(nomb_emp.arr))/2,' ');
 fprintf(fp,"%s%s%s%s%s\n",diezcpi,ancho_on,cadena,nomb_emp.arr,ancho_off);
 uso(r_t,"###,###,###,###",nit);
 fprintf (fp,"%s%25s %18s",ancho_on,"NIT :",r_t);
 if (digito > 0) {
    sprintf (cadena,"%d",digito);
    fprintf (fp,"-%s",fmtnum("z",cadena,r_t));
 }
 else if (digito == 0)
         fprintf (fp,"-%s","0");
 fprintf(fp,"\n%s%25s%s\n\n",ancho_on," ","BALANCE GENERAL");
 fprintf(fp,"%54s%10s / %d\n"," ",mes[mesi-1],anoi);
 fprintf(fp,"\r%s%s\n",ancho_off,condensado_off);
 con_lin = 8;
}
void balance()
{
 staora  = 0;
 while (staora == 0) {
       EXEC SQL FETCH C2 INTO :cuenta, :nombre_cta, :valor, :db_cr;
       staora  = sqlca.sqlcode;

       if (sqlca.sqlcode == 1403) break;

       if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) 
           fprintf (stderr, "Error leyendo C13 (%d)\n", sqlca.sqlcode);

       cuenta.arr      [cuenta.len]     = '\0';
       nombre_cta.arr  [nombre_cta.len] = '\0';
       db_cr.arr       [db_cr.len]      = '\0';
       if (con_lin > 60)
           titulos();
       lista_balance();
 }
}
void lista_balance()
{

 if (con_lin > 60)
     titulos();
 if (valor != 0) {
     fprintf (fp,"%-13s",fmtnum("ZZZZZZZZ",cuenta.arr,r_t));
     strorg  (nombre_cta.arr,1,48);
     nombre_cta.len = strlen(nombre_cta.arr);
     fprintf (fp,"%-48s",nombre_cta.arr);
     uso(r_t,"###,###,###,###.##",valor);
     fprintf (fp,"%18s\n",r_t);
     tot_val += valor;
     con_lin ++;
 }

}
void totales()
{
  if (con_lin > 60)
      titulos();
  fprintf (fp,"%47s%18s%19s\n"," ","-----------------");
  uso(r_t,"###,###,###,###.##",tot_val);
  fprintf (fp,"%19s\n",r_t);
}
