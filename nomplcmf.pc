/*****************************************************************
* NOMPLPOR  Version 1.0 - Rev 1.2 - Feb. 11/99.
*
* nomplpor.pc Programa de liquidaci¢n de novedades
*
* Uso : nomplpor codigo_emp device copias userid/password
*
* Mario E. Santiago I. Creado Enero 22-2001.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

double redondo();
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
VARCHAR codigo_emp     [05];

double  nit_empr;
int     digito;
VARCHAR nombre_empr[39];
double  nit_empl;
VARCHAR nombre_empl[40];
VARCHAR direccion[40];
double  basico;

double  nit_empl;
int     codigo_bco;
VARCHAR nombre_bco[40];
VARCHAR cuenta[20];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;

FILE    *fp1;
FILE    *fp2;

char *fmtnum(), r_t[100];
int     con_pag;                                   /* Contador de Paginas */
int     con_lin=66;                                /* Contador de Lineas  */
int     nconsec=0;
char    copias[6];

int	  staora = 0;
char    formas[5];
char    fechas[100];
char    fecha[30];
char    cadena[100];
char    cadena2[200];
char    aestado[2][8];
char    registro[85];

void lista_trabaja();
void lista_cuentas();
void regtraslado();

void main(argc, argv)
int     argc;
char    *argv[];
{
int     status = 0;

if (argc < 2)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : nomplpor codigo_emp userid/password\n");
    printf ("               userid/password nombre usuario y password\n");
    printf ("archivo: nombre archivo con toda su ruta ");
    exit (1);
   }

strcpy (codigo_emp.arr, argv[1]);
codigo_emp.len = strlen(codigo_emp.arr);

if (!strpos ("/", argv[2]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,   argv[2]);
uid.len   =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);
/*
    busco_impresora(device);
    abre_impresora(copias);
*/

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

 EXEC SQL DECLARE C1 CURSOR FOR
      select ne.nit, ne.digito, ne.nombre, n.nit, n.nombre, nvl(n.direccion,''), p.basico
      from   nomemple p, nomfijos e, nits n, nits ne
      where  e.codigo_nit    = ne.codigo_nit    and
             e.codigo_emp    = :codigo_emp      and
             p.codigo_nit    = n.codigo_nit     and
             p.estado_lab    <> 'R'             and
             p.codigo_emp    = e.codigo_emp;

 EXEC SQL DECLARE C2 CURSOR FOR
      select n.nit, e.nombre, '51', 'DAVIVIENDA',
             substr(ctacte,1,4)||substr(ctacte,6,7)||substr(ctacte,14,1)
      from   nomemple e, nits n
      where  e.codigo_nit    = n.codigo_nit     and
             e.estado_lab    <> 'R'             and
             e.codigo_emp    = :codigo_emp
      order by n.nit;

 EXEC SQL OPEN C1;

 if ((fp1 = fopen("trabaja.txt", "w")) == NULL) {
     fprintf (stderr,"Error abriendo archivo pipe trabaja\n");
     exit (1);
 }

 lista_trabaja();
 fclose(fp1);

 if ((fp2 = fopen("cuentas.txt", "w")) == NULL) {
     fprintf (stderr,"Error abriendo archivo pipe cuentas\n");
     exit (1);
 }

 lista_cuentas();
 fclose(fp2);

 EXEC SQL COMMIT WORK RELEASE;
 EXEC SQL CLOSE C1;

 cierre_impresora();
 exit   (0);
}

void lista_trabaja()
{

 EXEC SQL OPEN C1;

 while (staora == 0) {

      EXEC SQL FETCH C1 INTO :nit_empr,    :digito,    :nombre_empr, :nit_empl,
                             :nombre_empl, :direccion, :basico;

      nombre_empr.arr    [nombre_empr.len]     = '\0';
      nombre_empl.arr    [nombre_empl.len]     = '\0';
      direccion.arr      [direccion.len]       = '\0';

      staora  = sqlca.sqlcode;

      if (staora ==  1403) break;
      if (staora == -1405)
          staora  = 0;
      else if (staora)
               fprintf (stderr, "Error leyendo C1 (%d)\n", staora);

      fprintf(fp1,"%010.0f%1d%",nit_empr,digito);
      fprintf(fp1,"%-39s",nombre_empr.arr);
      fprintf(fp1,"%010.0f",nit_empl);
      fprintf(fp1,"%-40s",nombre_empl.arr);
      fprintf(fp1,"%-40s",direccion.arr);
      fprintf(fp1,"%09.0f\n",basico);
 }
}

void lista_cuentas()
{
 staora  = 0;

 EXEC SQL OPEN C2;

 while (staora == 0) {

        EXEC SQL FETCH C2 INTO :nit_empl, :nombre_empl, :codigo_bco, :nombre_bco, :cuenta;

        nombre_empl.arr      [nombre_empl.len]    = '\0';
        nombre_bco.arr       [nombre_bco.len]     = '\0';
        cuenta.arr           [cuenta.len]         = '\0';

        staora  = sqlca.sqlcode;

        if (staora == -1405) {
           staora = 0;
        }
        if (staora) {
           fprintf (stderr, "Error leyendo C2 (%d)\n", staora);
           exit   (1);
        }

        fprintf(fp2,"%011.0f%-40s%06d%-40s%20s\n",nit_empl,nombre_empl.arr,codigo_bco,nombre_bco.arr,cuenta.arr);
 }

}
