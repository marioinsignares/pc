/*****************************************************************
* ORDENES.C Version 1.0 - Rev 1.2 - May. 29/90.
*
* ordenes.c. Listado de Ordenes de Produccion.
*
* Uso : ordenes numero_orden device userid/password
*
* Martin A. Toloza L. Creado Febrero 10-1998.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

#define length(x) (sizeof(x)/sizeof(x[0]))

void ver_tipo_material();
void tipos1();
void tipos2();
void leer_material();
void leer_coloresv();
void leer_servicios();
void imprimo_servicios();
void totales();
void Rx_procesor();
void borro_puntos();
void titulos();
int hacer_asiento();
void reverso_asiento();
void ver_inf();

				     /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
                                 /* Ordenes_c (C1) */
double  numero_orden;
int     loop_2 = 0;
int     traidos = 0;
int     num_ret = 0;
VARCHAR codigo_cliente [6];
VARCHAR nomb_clie      [51];
VARCHAR nomb_ciu       [30];
VARCHAR nomb_clase     [14];
VARCHAR tipo_material  [3];
VARCHAR tipo_lista     [6];
VARCHAR fecha_control  [70];
VARCHAR fecha_cliente  [70];
double  codigo_nit;
double  valor_material;
double  valor_bis_mont;
double  valor_trat;
double  valor_color;
double  tipo_descto;
double  valor_desctos;
double  valor_otros;
double  valor_total;
double  consecutivo;
int     ano_mes;
int     puntos;
int     puntosc;
int     clase_prom;
int     promocion;
int     premios;
int     propias;
int     puntos_ac;
float   numero_caja;
VARCHAR color_caja     [02];
VARCHAR estado         [02];
VARCHAR clase_material [03];
VARCHAR orden          [15];
                                 /* Ordenes_d (C2) */
VARCHAR lado_lente     [02];
VARCHAR d_tipo_material[03];
float   diametro;
VARCHAR colorv         [03];
float   esfera;
float   cilindro;
int     eje;
float   prisma;
VARCHAR base           [02];
float   dir_prisma;
float   adicion;
int     cantidad;
int     tcantidad;
double  valor_venta;
VARCHAR codigo_articulo[15];
VARCHAR terminado      [02];
VARCHAR esp_cial       [02];
float   d_diametro;
VARCHAR d_nomb_clase   [14];
VARCHAR clase_mat_fac  [02];
VARCHAR tipo_mat_fac   [04];
VARCHAR ano_mesa       [20];
VARCHAR consecutivoa   [08];
VARCHAR codigo_prv     [05];
VARCHAR lote           [22];
                                 /* Tipos (C3) */
VARCHAR nomb_tipol     [33];
VARCHAR tipo_mat       [03];
VARCHAR tipo_lis       [06];
VARCHAR clase_mat      [10];
                                 /* Tipos (C4) */
VARCHAR nomb_tipo      [33];
                                 /* Almacen (C5) */
VARCHAR nomb_tipoa     [33];
VARCHAR codigo_art     [13];
                                 /* Coloresv (C6) */
VARCHAR nomb_color     [11];
VARCHAR colorva        [03];
                                 /* Servicios_len (C7) */
VARCHAR nomb_servicio  [26];
int     cantidad_srv;
double  valor_servicio;
VARCHAR tipo_servicio  [03];
                                 /* Pedido_c (C8) */
VARCHAR observacion    [31];
VARCHAR profesional    [31];
float   gaveta;
float   pfactu;
                                 /* Ordenes_d (C9) */
double  tot_lin;
                                 /* Ordenes_o (C10) */
double  tot_lin2;

/* VARIABLES PARA ASIENTOS CONTABLES */

VARCHAR codigo_emp[5];
VARCHAR ultimo_numero_c[10];
VARCHAR fecha_corte_c[20];
VARCHAR vecinf      [20][14];
                                 /* Movto_C (C3) */
VARCHAR comprobanteb[15];
VARCHAR consecutivob[07];
VARCHAR fechab      [20];
                                 /* Movto_D (C4) */
double  secuencia;
VARCHAR secuenciab  [7];
VARCHAR cuentab     [15];
VARCHAR infa        [14];
VARCHAR infb        [14];
VARCHAR infc        [14];
VARCHAR infd        [14];
VARCHAR codigo_nitb [6];
VARCHAR valor_debb  [15];
VARCHAR valor_creb  [15];
double  costo_promedio_p;
double  valor;
char    inf         [5][14];
                                 /* Control_Mes (C5) */
VARCHAR fuenteb     [3];
double  consecutivo15;
double  version;
float   nitn;
                                 /* Acumulados (C6) */
VARCHAR cuenta_db   [15];
VARCHAR cuenta_cr   [15];
VARCHAR fecha_asto  [20];
VARCHAR codigo      [03];
VARCHAR ano_mesi    [20];
VARCHAR codigox     [15];
                                 /* Plan (C8) */
VARCHAR veca        [14];
VARCHAR vecb        [14];
VARCHAR vecc        [14];
VARCHAR vecd        [14];
VARCHAR rinvima     [110];
char    vecplan     [5][14];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
                                            /* Variables globales del usuario */
#define TITULO_1 "TEODORO TARUD & CIA LTDA."
#define TITULO_2 "Nit. 890.112.740-2"
#define A_F1     "###,###.##"
char *fmtnum(), r_t[100];
int     con_pag;                                   /* Contador de Paginas */
int     con_len;                                   /* Contador de Paginas */
int     con_lin= 22;                               /* Contador de Lineas  */
int     staora = 0;
int     oraest = 0;
double  tot_pag;
char    fecha[20];
char    hora[12];
int     tip;
char    nombre_tipo[33];
double  tot_servicio;
double  subtotal;
double  costo_venta;
int     i;
int     j, k;
char    cadena[100];
char    cadena2[100];
char    lineas[132];
char    mensaje[100];
int     tpuntos;
int     commited;
int     contador;
int     npromo;
int     nclaprom;
int     npremio;
char    clado[2][10];
char    clotes[2][100];
char    aInvima[2][110];
char    cinvima[110];
int     l = 0;

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

    if (argc < 4)
       {
	printf ("Incorrecta invocacion:\n");
	printf ("Uso : ordenes numero_orden device userid/password\n");
	printf ("      device : t salida por terminal\n");
	printf ("               Px salida por impresora (x nro printer)\n");
	printf ("               userid/password nombre usuario y password\n");
        exit (1);
       }

       strcpy (orden.arr, argv[1]);
       orden.len   =      strlen(orden.arr);
       strcpy (device,    argv[2]);
       strlow (device);

    if (!strpos ("/", argv[3]))
       {
        printf ("user id/password incorrecto.\n");
	exit (1);
       }

    strcpy (uid.arr,   argv[3]);
    uid.len   =        strlen(uid.arr);

    strcpy(codigo_emp.arr,"1");
    codigo_emp.len  = strlen(codigo_emp.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora("1");

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

    EXEC SQL select o.numero_orden, o.codigo_cliente, n.nombre,
                    nvl(n.nombre_muni,c.nombre),
                    cl.nombre, o.tipo_material, o.tipo_lista,
                    to_char(o.fecha_control,'DD-MON-YYYY hh:mi am'),
                    nvl(valor_material,0),
                    nvl(valor_bis_mont,0), nvl(valor_trat,0),
                    nvl(valor_color,0),    nvl(valor_desctos,0),
                    nvl(valor_otros,0),    nvl(valor_total,0),
                    nvl(diam_pedido,0), o.consecutivo, o.ano_mes,
                    o.numero_caja, o.color_caja, o.estado, o.clase_material,
                    nvl(o.tipo_descto,0), nvl(puntos_ac,0), nvl(puntos,0)
             into  :numero_orden, :codigo_cliente, :nomb_clie, :nomb_ciu,
                   :nomb_clase, :tipo_material, :tipo_lista, :fecha_control,
                   :valor_material, :valor_bis_mont, :valor_trat, :valor_color,
                   :valor_desctos, :valor_otros, :valor_total, :diametro,
                   :consecutivo, :ano_mes, :numero_caja, :color_caja,
                   :estado, :clase_material, :tipo_descto, :puntos_ac, :puntosc
             from   nits n,ordenes_c o, ciudades c, clase cl, clientes ct
             where  n.codigo_nit = ct.codigo_nit and
                    ct.codigo_cliente in
                       (select codigo_cliente
                        from ordenes_c
                        where numero_orden = :orden)      and
                    n.codigo_ciu     = c.codigo           and
                    o.clase_material = cl.clase_material  and
                    o.numero_orden   = :orden;

    staora  = sqlca.sqlcode;
    if (staora != -1405 && staora != 1403 && staora != 0)
        fprintf (stderr, "Error leyendo Ordenes_c (%d)\n", staora);

    codigo_cliente.arr [codigo_cliente.len] = '\0';
    nomb_clie.arr      [nomb_clie.len]      = '\0';
    nomb_ciu.arr       [nomb_ciu.len]       = '\0';
    nomb_clase.arr     [nomb_clase.len]     = '\0';
    fecha_control.arr  [fecha_control.len]  = '\0';
    tipo_material.arr  [tipo_material.len]  = '\0';
    tipo_lista.arr     [tipo_lista.len]     = '\0';
    color_caja.arr     [color_caja.len]     = '\0';
    estado.arr         [estado.len]         = '\0';
    clase_material.arr [clase_material.len] = '\0';

    sprintf(ano_mesa.arr,"%6d",ano_mes);
    ano_mesa.len     =   strlen(ano_mesa.arr);
    sprintf(consecutivoa.arr,"%5.0f",consecutivo);
    consecutivoa.len =   strlen(consecutivoa.arr);

    EXEC SQL select 1
             into  :propias
             from   opticasp
             where  codigo_cliente = :codigo_cliente;

    EXEC SQL DECLARE C2 CURSOR FOR
             select d.lado_lente, nvl(d.tipo_mat_fac,d.tipo_material), d.colorv,
                    esfera, nvl(cilindro,0), nvl(eje,0), nvl(prisma,0),
                    nvl(base,0), d.dir_prisma, nvl(adicion,0), cantidad,
                    valor_venta, codigo_articulo, nvl(terminado,'0'),
                    d.especial, d.diametro, cl.nombre, d.clase_mat_fac, d.tipo_mat_fac,
                    costo_promedio_p, nvl(puntos,0),
                    decode(substr(codigo_articulo,1,1),'4',1,'5',1,'B',1,0),
                    decode(substr(codigo_articulo,3,2),'50',1,'51',1,'54',1,'55',1,'56',1,'57',1,'59',1,'60',1,0),
                    substr(codigo_articulo,3,2),
                    d.codigo_prv, d.lote, p.rinvima
             from   ordenes_d d, clase cl, proveedores p
             where  d.consecutivo = :consecutivoa  and
                    d.ano_mes     = :ano_mesa      and
                    nvl(d.clase_mat_fac,clase_mat) = cl.clase_material(+) and
                    d.codigo_prv  = p.codigo_prv(+)
             order by lado_lente;

    EXEC SQL DECLARE C7 CURSOR FOR
             select s.nombre, o.cantidad, o.cantidad*o.valor_unidad
             from   ordenes_o o, servicios_len s
             where  o.tipo_servicio = s.tipo_servicio and
                    o.tipo_trabajo  = s.tipo_trabajo  and
                    o.consecutivo   =  :consecutivoa  and
                    o.ano_mes       =  :ano_mesa      and
                    o.tipo_servicio =  :tipo_servicio and
                    s.lista         = (select lista
                                       from   clientes
                                       where  codigo_cliente = :codigo_cliente )
             order by s.secuencia;

    EXEC SQL select paciente, gaveta, factura, profesional,
                    to_char(fecha_cliente,'DD-MON-YYYY')
             into  :observacion, :gaveta, :pfactu, :profesional,
                   :fecha_cliente
             from   pedido_c
             where  numero_orden    = :orden;

    if (sqlca.sqlcode != -1405 && sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Pedido_c C8(%d)\n", sqlca.sqlcode);

    observacion.arr    [observacion.len]    = '\0';
    profesional.arr    [profesional.len]    = '\0';
    fecha_cliente.arr  [fecha_cliente.len]  = '\0';

    EXEC SQL select count(*) into :tot_lin
             from   ordenes_d
             where  ano_mes       = :ano_mesa  and
                    consecutivo   = :consecutivoa;

    if (sqlca.sqlcode != -1405 && sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Ordenes_d C9(%d)\n", sqlca.sqlcode);

    EXEC SQL select count(*) into :tot_lin2
             from   ordenes_o
             where  ano_mes       = :ano_mesa  and
                    consecutivo   = :consecutivoa;

    if (sqlca.sqlcode != -1405 && sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Ordenes_o C10(%d)\n", sqlca.sqlcode);

/***************************************/

    EXEC SQL DECLARE C8 CURSOR FOR
             select inf
             from   infacu;

    EXEC SQL OPEN C8;

    staora  = 0;
    traidos = 0;
    num_ret = 0;
    while (staora == 0) {

          EXEC SQL FETCH C8 INTO :vecinf;

          if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
             fprintf (stderr, "Error leyendo C8 (%d)\n", sqlca.sqlcode);

          staora  = sqlca.sqlcode;
          traidos = sqlca.sqlerrd[2];

          for (loop_2 = 0; loop_2 < (traidos - num_ret); loop_2++) {
              vecinf[loop_2].arr  [vecinf[loop_2].len] = '\0';
          }
          num_ret = traidos;
    }
    k = traidos;
    EXEC SQL CLOSE C8;

/***************************************/

    tot_pag=tot_lin+tot_lin2;
    tot_pag=ceil(tot_pag/7);
    strcpy(fecha,fecha_control.arr);
    strorg(fecha,1,11);
    strcpy(hora,fecha_control.arr);
    strorg(hora,13,11);

    fprintf(fp,"%s%s%c%s%c%c%s%c%c\r",line_feed6,diezcpi,27,"C",22,27,"B",17,0);
    titulos();

    npromo   = 0;
    nclaprom = 0;

    EXEC SQL OPEN C2;
    staora  = 0;
    while (staora == 0) {

          EXEC SQL FETCH C2 INTO :lado_lente, :d_tipo_material, :colorv,
                                 :esfera, :cilindro, :eje, :prisma, :base,
                                 :dir_prisma, :adicion, :cantidad, :valor_venta,
                                 :codigo_articulo, :terminado, :esp_cial,
                                 :d_diametro, :d_nomb_clase, :clase_mat_fac, :tipo_mat_fac,
                                 :costo_promedio_p, :puntos, :clase_prom, :promocion, :premios,
                                 :codigo_prv, :lote, :rinvima;

          staora  = sqlca.sqlcode;
          if (staora ==  1403) break;
          if (staora == -1405)
              staora  = 0;
          else if (staora)
                   fprintf (stderr, "Error leyendo C2 (%d)\n", staora);

          lado_lente.arr      [lado_lente.len]      = '\0';
          d_tipo_material.arr [d_tipo_material.len] = '\0';
          colorv.arr          [colorv.len]          = '\0';
          base.arr            [base.len]            = '\0';
          codigo_articulo.arr [codigo_articulo.len] = '\0';
          terminado.arr       [terminado.len]       = '\0';
          esp_cial.arr        [esp_cial.len]        = '\0';
          d_nomb_clase.arr    [d_nomb_clase.len]    = '\0';
          clase_mat_fac.arr   [clase_mat_fac.len]   = '\0';
          tipo_mat_fac.arr    [tipo_mat_fac.len]    = '\0';
          codigo_prv.arr      [codigo_prv.len]      = '\0';
          lote.arr            [lote.len]            = '\0';
          rinvima.arr         [rinvima.len]         = '\0';

          if ( l <= 1 ) { 
             strcpy(aInvima[l],rinvima.arr);
             strcpy(clado[l],"L.");
             strcat(clado[l],lado_lente.arr);
             strcat(clado[l],":");
             strcpy(clotes[l],lote.arr);
             l++;
          }

          if ( clase_prom == 1 ) {
              nclaprom = 1;
          }
          if ( promocion == 1 ) {
              npromo = 1;
          }

          if ( premios > 0 ) {
              npremio = premios;
          }

          if (!strcmp(lado_lente.arr,"S")||!strcmp(lado_lente.arr,"O")) {
              strcpy(codigo_art.arr,codigo_articulo.arr);
              strcpy(nomb_clase.arr," ");
              diametro=0;
              leer_material();
          }
          else ver_tipo_material();
          if (strcmp(colorv.arr,"")) {
              strcpy(colorva.arr,colorv.arr);
              leer_coloresv();
          }
          if (con_lin > 16)
              titulos();
          strcpy (cadena,codigo_articulo.arr);
          strorg (cadena,3,1);
          if (!strcmp(cadena,"1")||!strcmp(cadena,"6")) {
              if (cantidad > 1)
                  strcpy(lado_lente.arr," ");
          }
          if (con_len == 0 && !strcmp(lado_lente.arr,"I")) {
              fprintf(fp,"\n");
              con_lin++;
          }
          if (cantidad > 0) {
              fprintf (fp, "%s%s",diezcpi,condensado_on);
              strorg(nomb_clase.arr,1,13);
              strorg(d_nomb_clase.arr,1,13);
              if (!strcmp(esp_cial.arr,"E") && strlen(d_nomb_clase.arr) > 0)
                  fprintf (fp, "%-13s " ,d_nomb_clase.arr);
              else if (strlen(d_nomb_clase.arr) > 0)
                       fprintf (fp, "%-13s " ,d_nomb_clase.arr);
                   else fprintf (fp, "%-13s " ,nomb_clase.arr);
	      if (!strcmp(clase_mat.arr,"V")) {
              	  strorg  (nombre_tipo,1,23);
                  fprintf (fp, "%-23s " ,nombre_tipo);
                  fprintf (fp, "%-9s  " ,nomb_color.arr);
	      }
	      else {
                    fprintf (fp, "%-34s " ,nombre_tipo);
	      }
              if ((!strcmp(tipo_material.arr,"11")  ||
                   !strcmp(tipo_material.arr,"21")) &&
                   !strcmp(clase_material.arr,"5")) {
                   fprintf (fp, "%5s","70/76 ");
              }
              else if (!strcmp(tipo_material.arr,"6")     &&
                      (diametro == 65 || diametro == 70 ) &&
                       !strcmp(clase_material.arr,"0")) {
                        fprintf (fp, "%5s","65/70 ");
              }
              else if  (!strcmp(tipo_material.arr,"6")   &&
                       (!strcmp(clase_material.arr,"1")  ||
                        !strcmp(clase_material.arr,"2"))) {
                        fprintf (fp, "%5s","70/75 ");
              }
              else if ((!strcmp(clase_mat_fac.arr,"1")  ||
                        !strcmp(clase_mat_fac.arr,"2"))  &&
                        diametro              == 70  &&
                       (!strcmp(terminado.arr,"T") || !strcmp(terminado.arr,"F"))) {
                       fprintf (fp, "%5s","70/75 ");
                   }
                   else if (!strcmp(esp_cial.arr,"E") && d_diametro > 0)
                             fprintf (fp, "%4.0f  ",d_diametro);
                        else fprintf (fp, "%4.0f  ",diametro);
              fprintf (fp, "         ");
              fprintf (fp, "%6.2f ",esfera);
              fprintf (fp, "%8.2f     ",cilindro);
              fprintf (fp, "%3d  "  ,eje);
              fprintf (fp, "%6.1f  ",prisma);
              fprintf (fp, "%2s"  ,base.arr);
              if (dir_prisma > 0) {
                 sprintf (cadena,"%1.1f",dir_prisma);
                 fmtnum("z.z",cadena,r_t);
              }
              else
                 strcpy(cadena,"  ");
              fprintf (fp, "%3s",cadena);
              fprintf (fp, "%6.2f  ",adicion);
              fprintf (fp, "%8d  ",cantidad);
              sprintf (cadena, "%7.0f",cantidad*valor_venta);
              subtotal+=cantidad*valor_venta;
              costo_venta+=cantidad*costo_promedio_p;
              fmtnum("zz,zzz,zz9",cadena,r_t);
              fprintf (fp, "%s%s%11s\n",condensado_off,elite,r_t);
              tpuntos+=puntos;
//              if (puntos > 0 && cantidad > 0)
              if ( cantidad > 0)
                  tcantidad+=cantidad;
              con_len++;
              con_lin++;
          }
    }
/*    if (tcantidad < 2)
       borro_puntos(); */
    totales();
    fprintf(fp,"%c\r",11);
    Rx_procesor();

    cierre_impresora();

    EXEC SQL CLOSE C2;
    EXEC SQL CLOSE C7;

    EXEC SQL COMMIT WORK RELEASE;
// EXEC SQL ROLLBACK WORK RELEASE;


    exit   (0);
}

void borro_puntos()
{
  EXEC SQL update ordenes_c set puntos = 0
           where  numero_orden = to_number(:orden);
  puntosc = 0;
  tpuntos = 0;

 if (sqlca.sqlcode) printf("Error actualizando ordenes_c en rutina borro_puntos (%d)\n",
                           sqlca.sqlcode);
}

void ver_tipo_material()
{
 tip=atoi(d_tipo_material.arr);
 //printf("%s %s %s %d",clase_material.arr,d_tipo_material.arr,tipo_lista.arr,tip); getchar();
 if (!strcmp(d_tipo_material.arr,"11") && !strcmp(tipo_lista.arr,"N") ||
     !strcmp(d_tipo_material.arr,"21") && !strcmp(tipo_lista.arr,"N")) {
       strcpy(tipo_mat.arr,tipo_material.arr);
       strcpy(tipo_lis.arr,tipo_lista.arr);
       tipos1();
 }
 else if (!strcmp(d_tipo_material.arr,"11") || !strcmp(d_tipo_material.arr,"56") || !strcmp(d_tipo_material.arr,"57")) {
           strcpy(tipo_mat.arr,d_tipo_material.arr);
           tipos2();
 }
 else if (tip >= 60 && tip <= 65) {
          if (!strcmp(tipo_lista.arr,"M")) {
             strcpy(tipo_lis.arr,tipo_lista.arr);
          }
          if (!strcmp(tipo_mat_fac.arr,"60")) {
             strcpy(tipo_mat.arr,tipo_mat_fac.arr);
          }
          else {
             strcpy(tipo_mat.arr,"11");
          }
//          printf("%s %s",clase_material.arr,terminado.arr); getchar();
          if (!strcmp(terminado.arr,"T")) {
//             if(!strcmp(clase_material.arr,"B"))
                strcpy(tipo_mat.arr,"6");
             if (!strcmp(tipo_lista.arr,"AR") || !strcmp(tipo_lista.arr,"SA") || !strcmp(tipo_lista.arr,"M")) {
// printf("%s %s %s",clase_material.arr,d_tipo_material.arr,tipo_lista.arr); getchar();
                strcpy(tipo_lis.arr,tipo_lista.arr);
                tipos1();
             }
             else tipos2();
          }
          else {
                if (!strcmp(terminado.arr,"F"))
                   strcpy(nombre_tipo,"MONOFOCAL");
                else tipos2();
          }
      }
      else if (!strcmp(tipo_material.arr,"51") && !strcmp(clase_material.arr,"3")) {
              strcpy(tipo_mat.arr,tipo_material.arr);
              tipos2();
           }
                else if (!strcmp(tipo_material.arr,"11") &&
                         (!strcmp(tipo_lista.arr,"LEN") ||
                          !strcmp(tipo_lista.arr,"AR")  ||
                          !strcmp(tipo_lista.arr,"N"))) {
                         strcpy(tipo_mat.arr,tipo_material.arr);
                         strcpy(tipo_lis.arr,tipo_lista.arr);
                         tipos1();
                     }
                else if (!strcmp(tipo_material.arr,"21") &&
                         !strcmp(tipo_lista.arr,"N")) {
                         strcpy(tipo_mat.arr,tipo_material.arr);
                         strcpy(tipo_lis.arr,tipo_lista.arr);
                         tipos1();
                     }
                     else {
                           if (!strcmp(tipo_material.arr,"21")) {
                               if (esfera >= 0 && esfera <= 3 && cilindro==0 &&
                                   !strcmp(terminado.arr,"F")) {
                                   strcpy(tipo_mat.arr,"7");
                                   tipos2();
                               }
                               else {
                                strcpy(tipo_mat.arr,tipo_material.arr);
                                tipos2();
                               }
                           }
                           else if (strcmp(d_tipo_material.arr,"")) {
                                    strcpy(tipo_mat.arr,d_tipo_material.arr);
                                    tipos2();
                                }
                                else {
                                      strcpy(tipo_mat.arr,tipo_material.arr);
                                      tipos2();
                                }
                     }
}

void tipos1()
{
 strcpy(clase_mat.arr,clase_material.arr);
 tipo_mat.len  = strlen(tipo_mat.arr);
 tipo_lis.len  = strlen(tipo_lis.arr);
 clase_mat.len = strlen(clase_mat.arr);

 EXEC SQL select nombre into :nomb_tipol
          from   tipos
          where  tipo_material  = :tipo_mat and
                 tipo_lista     = :tipo_lis and
	               clase_material = :clase_mat;
 oraest  = sqlca.sqlcode;
 if (sqlca.sqlcode == 1403 ) 
     strcpy(nomb_tipol.arr,"");
 if (sqlca.sqlcode != -1405 && sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) {
     fprintf (stderr, "Error leyendo Tipos C3 (%d)\n", sqlca.sqlcode);
 }
// printf("1) %s %s %s",clase_mat.arr,tipo_mat.arr,tipo_lis.arr); getchar();
 nomb_tipol.arr [nomb_tipol.len] = '\0';
 strcpy(nombre_tipo,nomb_tipol.arr);
}

void tipos2()
{
 strcpy(clase_mat.arr,clase_material.arr);
 if (strcmp(clase_mat_fac.arr,""))
    strcpy(clase_mat.arr,clase_mat_fac.arr);
 tipo_mat.len  = strlen(tipo_mat.arr);
 clase_mat.len = strlen(clase_mat.arr);

 EXEC SQL select nombre into :nomb_tipo
          from   tipos
          where  tipo_material  = :tipo_mat and
		             clase_material = :clase_mat;
 oraest  = sqlca.sqlcode;
 if (sqlca.sqlcode != -1405 && sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
     fprintf (stderr, "Error leyendo Tipos C4 (%d) tipo_mat = %s, clase_mat = %s \n", sqlca.sqlcode, tipo_mat.arr, clase_mat.arr);

// printf("2) %s %s %s",clase_mat.arr,tipo_mat.arr,tipo_lis.arr); getchar();

 nomb_tipo.arr [nomb_tipo.len] = '\0';
 strcpy(nombre_tipo,nomb_tipo.arr);
}

void leer_material()
{
 codigo_art.len = strlen(codigo_art.arr);
 EXEC SQL select nombre into :nomb_tipoa
          from   almacen
          where  codigo_articulo = :codigo_art;
 oraest  = sqlca.sqlcode;
 if (sqlca.sqlcode != -1405 && sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
     fprintf (stderr, "Error leyendo Almacen C5 (%d)\n", sqlca.sqlcode);

 nomb_tipoa.arr [nomb_tipoa.len] = '\0';
 strcpy(nombre_tipo,nomb_tipoa.arr);
}

void leer_coloresv()
{
 colorva.len = strlen(colorva.arr);
 EXEC SQL select nombre into :nomb_color
          from   coloresv
          where  colorv = :colorva;
 oraest  = sqlca.sqlcode;
 if (sqlca.sqlcode != -1405 && sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
     fprintf (stderr, "Error leyendo Coloresv C6 (%d)\n", sqlca.sqlcode);

 nomb_color.arr [nomb_color.len] = '\0';
}

void leer_servicios()
{
 tipo_servicio.len = strlen(tipo_servicio.arr);
 EXEC SQL OPEN C7;

 EXEC SQL FETCH C7 INTO :nomb_servicio, :cantidad_srv, :valor_servicio;
 oraest  = sqlca.sqlcode;
 if (oraest == -1405)
     oraest  = 0;
}

/************************
* TOTALES()
*    Imprime totales en el archivo de spool.
*/

void totales()
{
    int rc;
    if (strcmp (lado_lente.arr,"S")||!strcmp(lado_lente.arr,"O")) {
       if (valor_material != valor_total) {
           if (con_lin > 16)
               titulos();
           sprintf (cadena,"%8.2f",valor_material);
           fprintf (fp,"%s%s%s%64s%s%31s\n",condensado_off,elite,enfatizado_on,"VALOR MATERIAL : ................................",enfatizado_off,fmtnum("$$$,$$$,$$9",cadena,r_t));
           con_lin++;
       }
    }
    if (subtotal!=valor_material) {
        fprintf (fp,"%s%s%s%57s%s\n",condensado_off,elite,enfatizado_on,"****** DESCUADRE EN VALOR MATERIAL *******",enfatizado_off);
        con_lin++;
    }
    subtotal = valor_material;

    strcpy(tipo_servicio.arr,"TR");
    leer_servicios();
    if (!oraest) {
       if (con_lin > 16)
          titulos();
       fprintf (fp,"%s%32s%s\r",enfatizado_on,"TRATAMIENTO : ",enfatizado_off);
       imprimo_servicios();
       if (tot_servicio!=valor_trat) {
           fprintf (fp,"%s%s%s%57s%s\n",condensado_off,elite,enfatizado_on,"****** DESCUADRE EN VALOR TRATAMIENTO *******",enfatizado_off);
           con_lin++;
       }
    }

    strcpy(tipo_servicio.arr,"CO");
    EXEC SQL CLOSE C7;
    leer_servicios();
    if (!oraest) {
       if (con_lin > 16)
          titulos();
       fprintf (fp,"%s%32s%s\r",enfatizado_on,"COLOR : ",enfatizado_off);
       imprimo_servicios();
       if (tot_servicio!=valor_color) {
           fprintf (fp,"%s%s%s%57s%s\n",condensado_off,elite,enfatizado_on,"****** DESCUADRE EN VALOR COLOR *******",enfatizado_off);
           con_lin++;
       }
    }

    strcpy(tipo_servicio.arr,"BM");
    EXEC SQL CLOSE C7;
    leer_servicios();
    if (!oraest) {
       if (con_lin > 16)
          titulos();
       fprintf (fp,"%s%32s%s\r",enfatizado_on,"BISEL Y MONTAJE : ",enfatizado_off);
       imprimo_servicios();
       if (tot_servicio!=valor_bis_mont) {
           fprintf (fp,"%s%s%s%57s%s\n",condensado_off,elite,enfatizado_on,"****** DESCUADRE EN VALOR BISEL MONTAJE *******",enfatizado_off);
           con_lin++;
       }
    }

    rc=0;
    strcpy(tipo_servicio.arr,"RC");
    EXEC SQL CLOSE C7;
    leer_servicios();
    if (!oraest) {
       if (con_lin > 16)
          titulos();
       fprintf (fp,"%s%32s%s\r",enfatizado_on,"SERV. A MONTURA - ELEM. DE RECAMBIO : ",enfatizado_off);
       imprimo_servicios();
       rc=1;
    }

    strcpy(tipo_servicio.arr,"RP");
    EXEC SQL CLOSE C7;
    leer_servicios();
    if (!oraest) {
       if (con_lin > 16)
          titulos();
       if (rc == 0)
          fprintf (fp,"%s%32s%s\r",enfatizado_on,"SERV. A MONTURA - REPARACION : ",enfatizado_off);
       else fprintf (fp,"%s%32s%s\r",enfatizado_on,"REPARACION : ",enfatizado_off);
       imprimo_servicios();
    }

    strcpy(tipo_servicio.arr,"FE");
    EXEC SQL CLOSE C7;
    leer_servicios();
    if (!oraest) {
       if (con_lin > 16)
          titulos();
       fprintf (fp,"%s%32s%s\r",enfatizado_on,"FLETES : ",enfatizado_off);
       imprimo_servicios();
    }

    strcpy(tipo_servicio.arr,"OT");
    EXEC SQL CLOSE C7;
    leer_servicios();
    if (!oraest) {
       if (con_lin > 16)
          titulos();
       fprintf (fp,"%s%32s%s\r",enfatizado_on,"OTROS : ",enfatizado_off);
       imprimo_servicios();
    }

    if (subtotal != valor_total) {
       if (con_lin > 16)
          titulos();
       sprintf (cadena,"%8.2f",subtotal);
       fprintf (fp,"%s%32s%s%63s\n",enfatizado_on,"SUBTOTAL ",enfatizado_off,fmtnum("zzz,zzz,zz9",cadena,r_t));
       con_lin++;
    }
    if (valor_desctos > 0) {
       if (con_lin > 16)
           titulos();
       sprintf (cadena,"%8.2f",valor_desctos);
       if (tipo_descto > 0)
          fprintf (fp,"%s%32s%s%63s\n",enfatizado_on,"DESCUENTO POR CASO ESPECIAL ",enfatizado_off,fmtnum("zzz,zzz,zz9",cadena,r_t));
       else fprintf (fp,"%s%32s%s%63s\n",enfatizado_on,"DESCUENTOS ",enfatizado_off,fmtnum("zzz,zzz,zz9",cadena,r_t));
       con_lin++;
    }
    if ((subtotal-valor_desctos)!=valor_total) {
        fprintf (fp,"%s%s%s%57s%s\n",condensado_off,elite,enfatizado_on,"****** DESCUADRE EN VALOR LIQUIDACION *******",enfatizado_off);
        con_lin++;
    }
    if (con_lin <= 16)
       fprintf(fp,"%c\r",11);
    sprintf (cadena,"%6.2f",valor_total);

    strcpy(mensaje," ");
/*
    if ( tcantidad > 1 && valor_total > 0 ) {
        if ( npremio == 60 && (strcmp(terminado.arr,"T") && strcmp(terminado.arr,"F") && strcmp(terminado.arr,"C") ) )  { //Acolade
//             strcat(mensaje,"Obsequio Carnaval");
             strcat(mensaje," ");
        }
        else {
              if ( npromo == 1 ) {
//                  strcpy(mensaje,"Obsequio Carnaval");  //Solo multifocales
                  strcpy(mensaje," ");  //Solo multifocales
              }
              if ( nclaprom == 1 ) { //Transitions
//                   strcpy(mensaje,"Obsequio Carnaval");
                   strcpy(mensaje," ");
              }
        }
    }

    if ( nclaprom ==1 ) { //Promover Transitions 2010
       if (tcantidad > 1 && valor_total > 0) {
           if (npromo == 1) {    //Solo multifocales
               strcpy(mensaje,"Promover Transitions 2010 - Cupo\b'n Naranja, 185 puntos");  
           }
           else { //Bifocales y Monofocales
               strcpy(mensaje,"Promover Transitions 2010 - Cupo\b'n Azul, 85 puntos");  
           }
           if ( npremio == 60 && (strcmp(terminado.arr,"T") && strcmp(terminado.arr,"F") && strcmp(terminado.arr,"C") ) )  { //Acolade
               strcpy(mensaje,"Promover Transitions 2010 - Cupo\b'n Naranja, 185 puntos");  
           }
       }
    }


           if ( nclaprom == 1 ) { //Registrese y gane al instante con Essilor y Transition
              if ( npremio == 51 || npremio == 54 || npremio == 55 || npremio == 57 ) {
                   strcat(mensaje,"Varilux Transitions, 40 puntos");
              }
              else {
                   if ( npremio == 56 || npremio == 60 ) {
                        strcat(mensaje,"Acolade y Ovation Transitions, 20 puntos");
                   }
                   else {
                        if ( npremio == 50 || npremio == 59 ) {
                             strcat(mensaje,"Adaptar y Smallfit Transitions, 10 puntos");
                        }
                        else {
                              strcat(mensaje," ");
                        }
                   }
              }
           }
           else {
                if ( npremio == 51 || npremio == 54 || npremio == 55 || npremio == 57 ) {
                     strcat(mensaje,"Varilux Blanco, 20 puntos");
                }
                else {
                     if ( npremio == 56 || npremio == 60 && (strcmp(terminado.arr,"T") && strcmp(terminado.arr,"F") && strcmp(terminado.arr,"C") ) )  {
                          strcat(mensaje,"Acolade y Ovation Blanco, 10 puntos");
                     }
                     else {
                          if ( npremio == 50 || npremio == 59 ) {
                               strcat(mensaje,"Adaptar y Smallfit Blanco, 5 puntos");
                          }
                          else {
                                strcat(mensaje," ");
                          }
                     }
                }
           }
       }
*/
//  }
    fprintf (fp,"%s%s%s%-51s%s%44s%s\n",condensado_off,elite,enfatizado_on,mensaje,enfatizado_off,fmtnum("$$$,$$$,$$9",cadena,r_t),diezcpi);
    con_lin++;
    sprintf (cadena,"%6d",tpuntos+puntosc);
//  fprintf (fp,"Puntos de esta orden %s,",fmtnum("zzz9",cadena,r_t));
//  sprintf (cadena2,"%6d",puntos_ac);
//  fprintf (fp," puntos acumulados %s\n",fmtnum("zzzz9",cadena2,r_t));
//  fprintf (fp,"\n");
//    fprintf (fp,"\n");

//    if ( strcmp(codigo_cliente.arr,"BM037") ) {
       for (l=0;l<length(aInvima);l++) {
           if (strlen(aInvima[l])>0) {
               fprintf (fp,"%s%s %s %s%s\n",condensado_on,clado[l],aInvima[l],"Lote:",clotes[l]);
               con_lin++;
           }
       }
/*    }
 else {
       fprintf (fp,"%s%s %s %s%s %s\n",condensado_on," "," "," "," ",mensaje);
       con_lin+=1;
 }
*/
//    fprintf (fp,"%s%s. %s%s\r",condensado_on,cinvima,"Lote(s):",clotes);
//    fprintf (fp,"%s%s. %s%s\r",condensado_on,"Importado por LABOCOSTA S.A., Registro sanitario No. INVIMA 2009 DM-0003426","Lote(s):",clotes);
    fprintf (fp,"%s\r",condensado_off);
    con_pag=0;
    commited=0;
    contador=0;

    while (!commited && contador < 5) {
          if ( hacer_asiento() == 0 ) {
              commited=1;
          }
          else {
                EXEC SQL ROLLBACK WORK RELEASE;
                contador++;
          }
    }
   
}

void imprimo_servicios()
{
 int i=0;
 tot_servicio=0;
 while (!oraest) {
       nomb_servicio.arr [nomb_servicio.len] = '\0';
       i++;
       subtotal+=valor_servicio;
       tot_servicio+=valor_servicio;
       sprintf (cadena,"%6d",cantidad_srv);
       if (i>1)
          fprintf (fp,".\r");
       fprintf (fp,"%39s%25s%19s"," ",nomb_servicio.arr,fmtnum("zzz,zz9",cadena,r_t));
       sprintf (cadena,"%6.0f",valor_servicio);
       fprintf (fp,"%12s\n",fmtnum("zz,zzz,zz9",cadena,r_t));
       con_lin++;
       EXEC SQL FETCH C7 INTO :nomb_servicio, :cantidad_srv, :valor_servicio;
       oraest  = sqlca.sqlcode;
       if (oraest == -1405)
           oraest  = 0;
 }
}

/************************
* Rx_procesor
*    Imprime Rx_procesor.
*/

void Rx_procesor()
{
/*  system("rx_procesor"); */
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
  for (i=0;i<22-con_lin;i++)
       fprintf(fp,"\n");
  con_pag++;
  con_len=0;
  strcpy(cadena,fecha);
  numero_fecha(cadena);
  fprintf (fp,"%s%s%s%s%34s%7.0f%s%s%s\n\n",condensado_off,diezcpi,enfatizado_on,ancho_on,alto_on,numero_orden,ancho_off,alto_off,enfatizado_off);
  fprintf (fp,"%34s\n%40s%5.0f%s  %s%s%5.0f%s%s%s%s %s%s %s\n",codigo_cliente.arr," ",consecutivo,elite,ancho_on,enfatizado_on,numero_caja,"-",color_caja.arr,ancho_off,diezcpi,cadena,enfatizado_off,hora);
  fprintf (fp,"%s%s%s\n",elite,enfatizado_on,nomb_clie.arr);
  fprintf (fp,"%-49s%-39s%s%02d    %02d\n\n",nomb_ciu.arr,"OFTALMICA",enfatizado_off,con_pag,1);
  fprintf (fp,"%53s%11s\n"," ","Fec.Cliente");
  sprintf(cadena,"%6.0f",pfactu);
  fmtnum("ZZZZZZ",cadena,r_t);
  fprintf (fp,"%12s",cadena);
  sprintf(cadena,"%6.0f",gaveta);
  fmtnum("ZZZZZZ",cadena,r_t);
  fprintf (fp,"%14s %-26s%11s %s\n\n",cadena,observacion.arr,fecha_cliente.arr,profesional.arr);
  con_lin = 10;
  if (!strcmp(estado.arr,"R")) {
      fprintf (fp,"%30s%s%s\n",ancho_on,"**** A N U L A D A ****",ancho_off);
      con_lin++;
  }
}

int hacer_asiento()
{

  strcpy(fuenteb.arr,"18");
  fuenteb.len = strlen(fuenteb.arr);

  strcpy(comprobanteb.arr,orden.arr);
  comprobanteb.len = strlen(comprobanteb.arr);

  strcpy(fechab.arr,fecha);
  fechab.len = strlen(fechab.arr);

/* Lee consecutivo de control_mes Fte 15 Cns ultimo Asiento Ordenes */
  EXEC SQL select consecutivo   into :consecutivo15
           from control_mes
           where fuente       = to_number(:fuenteb)       and
                 ano_mes      = to_number(:ano_mesa)      and
                 codigo_emp   = to_number(:codigo_emp);

  if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
      fprintf (stderr, "Error leyendo Control_Mes (%d)\n", sqlca.sqlcode);
  sprintf(consecutivob.arr,"%5.0f",consecutivo15);
  consecutivob.len = strlen(consecutivob.arr);
  EXEC SQL
       select c.consecutivo, max(secuencia)
       into   :consecutivo, :secuencia
       from movto_d d, movto_c c
       where c.codigo_emp  = to_number(:codigo_emp)    and
             c.codigo_emp  = d.codigo_emp              and
             c.ano_mes     = d.ano_mes                 and
             c.consecutivo = d.consecutivo             and
             c.comprobante = to_number(:comprobanteb)  and
             c.clase       = 'CV'                      and
             c.tipo        = 9                         and
             c.ano_mes     = to_number(:ano_mesa)      and
             c.estado      <>   '2'
       group by c.consecutivo;

  if (sqlca.sqlcode == 0) {
       sprintf(consecutivob.arr,"%5.0f",consecutivo);
       consecutivob.len = strlen(consecutivob.arr);
       reverso_asiento();
  }
  else {
       strcpy(fuenteb.arr,"08");
       fuenteb.len = strlen(fuenteb.arr);

  /* Lee consecutivo de Control_mes Fte 08 sgte consecutivo */

       EXEC SQL select consecutivo+1, version
                into :consecutivo, :version
                from control_mes
                where fuente       = to_number(:fuenteb)       and
                      ano_mes      = to_number(:ano_mesa)      and
                      codigo_emp   = to_number(:codigo_emp);

       if (sqlca.sqlcode)
          {
           fprintf (stderr, "Error leyendo Control_Mes 08 (%d)\n", sqlca.sqlcode);
           consecutivo=1;
           sprintf(consecutivob.arr,"%5.0f",consecutivo);
           consecutivob.len = strlen(consecutivob.arr);
               /* Inserta en Control_Mes Fte 08 si no existe (C11) */
           EXEC SQL insert into control_mes
                    (FUENTE,ANO_MES,NOMBRE,CONSECUTIVO,CODIGO_EMP,VERSION)
                    values (:fuenteb, :ano_mesa, 'CONTROL SALIDAS CREDITO',
                            :consecutivob, :codigo_emp,0);
          }
       else {
             sprintf(consecutivob.arr,"%5.0f",consecutivo);
             consecutivob.len = strlen(consecutivob.arr);
                    /* Actualiza Cns de Fte 08 en control_mes (C12) */
             EXEC SQL update control_mes
                      set    consecutivo = :consecutivob
                      where codigo_emp   = to_number(:codigo_emp)    and
                            ano_mes      = to_number(:ano_mesa)      and
                            fuente       = :fuenteb                  and
                            version      = :version;
       }
/*       if (sqlca.sqlcode) {
          return 1;
       }*/

       strcpy(fuenteb.arr,"18");
       fuenteb.len = strlen(fuenteb.arr);

       EXEC SQL select consecutivo, version
                into :consecutivo15, :version
                from control_mes
                where fuente       = to_number(:fuenteb)       and
                      ano_mes      = to_number(:ano_mesa)      and
                      codigo_emp   = to_number(:codigo_emp);

       if (sqlca.sqlcode)
          {
           fprintf (stderr, "Error leyendo Control_Mes 18 (%d)\n", sqlca.sqlcode);
                    /* Inserta en Control_Mes Fte 15 si no existe (C11) */
           EXEC SQL insert into control_mes
                    (FUENTE,ANO_MES,NOMBRE,CONSECUTIVO,CODIGO_EMP,VERSION)
                    values (:fuenteb, :ano_mesa, 'CONTROL SALIDAS CREDITO',
                            :consecutivob, :codigo_emp,0);
          }
       else {
               /* Actualiza Cns de Fte 15 en control_mes (C12) */
             EXEC SQL update control_mes
                      set    consecutivo = :consecutivob
                      where codigo_emp   = to_number(:codigo_emp)    and
                            ano_mes      = to_number(:ano_mesa)      and
                            fuente       = :fuenteb                  and
                            version      = :version;
       }

/*       if (sqlca.sqlcode) {
          return 1;
       }*/

       EXEC SQL insert into movto_c
       (CODIGO_EMP, ANO_MES, COMPROBANTE, CONSECUTIVO, CLASE, DESCRIPCION, FECHA, TIPO,
	ESTADO, NITB, CODIGO_NITB, VALORB, RETENCION, CONTADO )
                values(:codigo_emp, :ano_mesa, :comprobanteb, :consecutivob, 'CV',
                       'LENTES OFTALMICOS',:fechab,'9', '0','','','','','');

       if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) {
           fprintf (stderr, "Error insertando Movto_C (%d)\n", sqlca.sqlcode);
           return 1;
       }
  }

  staora  = 0;
  strcpy(cuenta_db.arr,"61359501");
  strcpy(cuenta_cr.arr,"14350101");
  cuenta_db.arr  [cuenta_db.len]  = '\0';
  cuenta_cr.arr  [cuenta_cr.len]  = '\0';
  fecha_asto.arr [fecha_asto.len] = '\0';
  codigo.arr     [codigo.len]     = '\0';
  codigo.len  =  strlen(codigo.arr);

/***************************************/
/* COSTO DE VENTAS CONTRA INVENTARIOS  */
/***************************************/

/* 1) Grabar Ventas lentes oftalmicos ( Debito ) */

//  fprintf (stderr, "costo_venta: %15.2f", costo_venta); getchar();

  if ( costo_venta != 0 ) {
     secuencia++;
     sprintf(secuenciab.arr,"%6.0f",secuencia);
     secuenciab.len = strlen(secuenciab.arr);

     strcpy(cuentab.arr,"61359501");
     cuentab.len = strlen(cuentab.arr);
     cuentab.arr  [cuentab.len]  = '\0';

     strcpy(codigox.arr,cuentab.arr);
     codigox.len = strlen(codigox.arr);

     for (i=1;i<=4;i++) {
          strcpy(inf[i],"");
     }
     strcpy(inf[1],cuentab.arr);
     strcpy(inf[2],comprobanteb.arr);

     ver_inf();
     strcpy (valor_creb.arr,"");
     valor_creb.len = strlen(valor_creb.arr);
     sprintf(valor_debb.arr,"%10.2f",costo_venta);
     valor_debb.len = strlen(valor_debb.arr);
/*
     printf("asiento movto_d_1 %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s ",codigo_emp.arr, ano_mesa.arr, consecutivob.arr, secuenciab.arr,
                     cuentab.arr, infa.arr, infb.arr, infc.arr, infd.arr,
                     codigo_nitb.arr, valor_debb.arr, valor_creb.arr); getchar();
*/                                         /* Graba en movto_d el Debito (C4) */
     EXEC SQL insert into movto_d
     	      (CODIGO_EMP, ANO_MES,CONSECUTIVO,SECUENCIA,CUENTA,
		INFA,INFB,INFC,INFD,CODIGO_NIT,VALOR_DEB,VALOR_CRE,SUCURSAL,CEN_COS)
              values(:codigo_emp, :ano_mesa, :consecutivob, :secuenciab,
                     :cuentab, :infa, :infb, :infc, :infd,
                     :codigo_nitb, :valor_debb, :valor_creb, '001', 1);

     if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) {
         fprintf (stderr, "Error Grabando Debito (%d)\n", sqlca.sqlcode);
//         return 1;
     }
  }

/* 2) Grabar Inventario de lentes oftalmicos ( Credito ) */

  if ( costo_venta != 0 ) {
     secuencia++;
     sprintf(secuenciab.arr,"%6.0f",secuencia);
     secuenciab.len = strlen(secuenciab.arr);

     strcpy(cuentab.arr,"14350120");
     cuentab.len = strlen(cuentab.arr);
     cuentab.arr  [cuentab.len]  = '\0';

     strcpy(codigox.arr,cuentab.arr);
     codigox.len = strlen(codigox.arr);

     for (i=1;i<=4;i++) {
          strcpy(inf[i],"");
     }

     strcpy(inf[2],comprobanteb.arr);

     ver_inf();
     strcpy (valor_debb.arr,"");
     valor_debb.len = strlen(valor_debb.arr);
     sprintf(valor_creb.arr,"%10.2f",costo_venta);
     valor_creb.len = strlen(valor_creb.arr);
                                         /* Graba en movto_d el Debito (C4) */
/*
     printf("asiento movto_d_2 %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s ",codigo_emp.arr, ano_mesa.arr, consecutivob.arr, secuenciab.arr,
                     cuentab.arr, infa.arr, infb.arr, infc.arr, infd.arr,
                     codigo_nitb.arr, valor_debb.arr, valor_creb.arr); getchar();
*/

     EXEC SQL insert into movto_d
     	      (CODIGO_EMP, ANO_MES,CONSECUTIVO,SECUENCIA,CUENTA,
		INFA,INFB,INFC,INFD,CODIGO_NIT,VALOR_DEB,VALOR_CRE,SUCURSAL,CEN_COS)
              values(:codigo_emp, :ano_mesa, :consecutivob, :secuenciab,
                     :cuentab, :infa, :infb, :infc, :infd,
                     :codigo_nitb, :valor_debb, :valor_creb, '001', 1);

     if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) {
         fprintf (stderr, "Error Grabando Debito (%d)\n", sqlca.sqlcode);
//         return 1;
     }
  }

  return 0;

}

void reverso_asiento()
{

    EXEC SQL
         select max(secuencia)
         into   :secuencia
         from movto_d d, movto_c c
         where c.codigo_emp  = to_number(:codigo_emp)    and
               c.codigo_emp  = d.codigo_emp              and
               c.ano_mes     = d.ano_mes                 and
               c.consecutivo = d.consecutivo             and
               c.comprobante = to_number(:comprobanteb)  and
               c.clase       = 'CV'                      and
               c.tipo        = 9                         and
               c.ano_mes     = to_number(:ano_mesa)      and
               c.estado      <>   '2';

    if ( secuencia > 0 ) {

       EXEC SQL DECLARE C9 CURSOR FOR
            select d.consecutivo, cuenta, infa, infb, infc, infd, codigo_nit, sum(nvl(valor_deb,0)-nvl(valor_cre,0))
            from movto_d d, movto_c c
            where c.codigo_emp  = to_number(:codigo_emp)    and
                  c.codigo_emp  = d.codigo_emp              and
                  c.ano_mes     = d.ano_mes                 and
                  c.consecutivo = d.consecutivo             and
                  c.comprobante = to_number(:comprobanteb)  and
                  c.clase       = 'CV'                      and
                  c.tipo        = 9                         and
                  c.ano_mes     = to_number(:ano_mesa)      and
                  c.estado      <>   '2'
            group by d.consecutivo, cuenta, infa, infb, infc, infd, codigo_nit;

      EXEC SQL OPEN C9;

      EXEC SQL FETCH C9 INTO :consecutivo,  :cuentab,
                             :infa, :infb,  :infc, :infd,
                             :codigo_nit,   :valor;

      oraest  = sqlca.sqlcode;

      if (sqlca.sqlcode == -1405 )
          oraest = 0;
      else {
            if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
                fprintf (stderr, "Error leyendo C9 (%d)\n", sqlca.sqlcode);
      }

      cuentab.arr             [cuentab.len]            = '\0';
      infa.arr                [infa.len]               = '\0';
      infb.arr                [infb.len]               = '\0';
      infc.arr                [infc.len]               = '\0';
      infd.arr                [infd.len]               = '\0';

      while (oraest==0) {

           sprintf(consecutivob.arr,"%5.0f",consecutivo);
           consecutivob.len = strlen(consecutivob.arr);

           secuencia++;
           sprintf(secuenciab.arr,"%6.0f",secuencia);
           secuenciab.len = strlen(secuenciab.arr);

           if (codigo_nit==0)
              strcpy(codigo_nitb.arr,"");
           else sprintf(codigo_nitb.arr,"%5d",codigo_nit);
           codigo_nitb.len = strlen(codigo_nitb.arr);

           if ( valor > 0 ) {
               strcpy (valor_debb.arr,"");
               valor_debb.len = strlen(valor_debb.arr);
               sprintf(valor_creb.arr,"%10.2f",valor);
               valor_creb.len = strlen(valor_creb.arr);
           }
           else {
              strcpy (valor_creb.arr,"");
              valor_creb.len = strlen(valor_creb.arr);
              sprintf(valor_debb.arr,"%10.2f",valor*-1);
              valor_debb.len = strlen(valor_debb.arr);
          }
/*

     printf("asiento movto_d_3 %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s ",codigo_emp.arr, ano_mesa.arr, consecutivob.arr, secuenciab.arr,
                     cuentab.arr, infa.arr, infb.arr, infc.arr, infd.arr,
                     codigo_nitb.arr, valor_debb.arr, valor_creb.arr); getchar();
*/
              EXEC SQL insert into movto_d
     	      		(CODIGO_EMP, ANO_MES,CONSECUTIVO,SECUENCIA,CUENTA,
			 INFA,INFB,INFC,INFD,CODIGO_NIT,VALOR_DEB,VALOR_CRE,SUCURSAL,CEN_COS)
                       values(:codigo_emp, :ano_mesa, :consecutivob, :secuenciab,
                              :cuentab, :infa, :infb, :infc, :infd,
                              :codigo_nitb, :valor_debb, :valor_creb, '001', 1);

              if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
                  fprintf (stderr, "Error Grabando movto_d (%d)\n", sqlca.sqlcode);

           EXEC SQL FETCH C9 INTO :consecutivo,  :cuentab,
                                  :infa, :infb,  :infc, :infd,
                                  :codigo_nit,   :valor;

           cuentab.arr             [cuentab.len]            = '\0';
           infa.arr                [infa.len]               = '\0';
           infb.arr                [infb.len]               = '\0';
           infc.arr                [infc.len]               = '\0';
           infd.arr                [infd.len]               = '\0';

           oraest  = sqlca.sqlcode;
           if (sqlca.sqlcode == 1403) break;

           if (sqlca.sqlcode == -1405 )
               oraest = 0;
           else {
                 if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
                     fprintf (stderr, "Error leyendo C9 (%d)\n", sqlca.sqlcode);
           }
      }

    }

}

void ver_inf()
{
  EXEC SQL select infa, infb, infc, infd
           into :veca, :vecb, :vecc, :vecd
           from   plan
           where  codigo_emp = :codigo_emp and
                  cuenta     = :cuentab;

  if (sqlca.sqlcode == 1403)
      printf ("Cuentab (%-s) no existe\n", cuentab.arr);

  veca.arr [veca.len] = '\0';
  vecb.arr [vecb.len] = '\0';
  vecc.arr [vecc.len] = '\0';
  vecd.arr [vecd.len] = '\0';

  strcpy (vecplan[1], veca.arr);
  strcpy (vecplan[2], vecb.arr);
  strcpy (vecplan[3], vecc.arr);
  strcpy (vecplan[4], vecd.arr);

  i=j=0;
  for (i=1;i<=4;i++) {
      if (!strcmp(vecplan[i],"NIT")) {
          sprintf(inf[i],"%12.0f",nitn);
      }
      else {
            for (j=1;j<=k;j++) {
                if (!strcmp(vecplan[i],vecinf[j].arr) && strcmp(vecplan[i],"") ) {
                   strcpy(inf[i],codigox.arr);
                }
            }
      }
  }
  strtri(inf[1]);
  strtri(inf[2]);
  strtri(inf[3]);
  strtri(inf[4]);
  strcpy (infa.arr, inf[1]);
  strcpy (infb.arr, inf[2]);
  strcpy (infc.arr, inf[3]);
  strcpy (infd.arr, inf[4]);
  infa.len = strlen(infa.arr);
  infb.len = strlen(infb.arr);
  infc.len = strlen(infc.arr);
  infd.len = strlen(infd.arr);
}

