/*****************************************************************
* BALANCEP.C Version 1.0 - Rev 1.2 - Jun. 30/92.
*
* anexobal.c. Anexo al balance de prueba
*
* Uso: anexobal codigo_emp aamm cuentai cuentaf device copias userid/password\n");
*
* Mario E. Santiago I. Creado Noviembre 19-1993.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <setjmp.h>
#include <stdlib.h>
#include <math.h>

void trabajo();
void titulos();
void lista_balance();
void imprime_acumulados();
void imprime_acumulanit();
void ver_anexo();
void leer_articulos();
void leer_bienes();
void leer_bancos();
void leer_varios();
void leer_import();
void totales();

EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
				     /* Parametros de comunicacion con ORACLE */
VARCHAR nomb_emp   [61];
double  nit;
int     digito;
VARCHAR codigo_emp [03];

VARCHAR cuenta     [20];
VARCHAR nombre_cta [70];
VARCHAR db_cr      [03];
int     nivel;
double  valor_deb;
double  valor_cre;
double  valors;

VARCHAR ano_mesi   [20];
VARCHAR ano_mes    [20];
VARCHAR cuentai    [20];
VARCHAR cuentaf    [20];

VARCHAR cuentan    [20];
VARCHAR cuentax    [20];

VARCHAR	nombre_var [50];
VARCHAR	nombre_bco [50];
VARCHAR	nombre_art [50];
VARCHAR	nombre_imp [50];
VARCHAR	nombre_bien[50];
VARCHAR	nombre_ctan[50];
VARCHAR	nombre_ctam[50];
VARCHAR	codigo     [20];
VARCHAR	codigob    [20];
VARCHAR infa       [20];
VARCHAR infb       [20];
VARCHAR infc       [20];
VARCHAR infd       [20];
double  total_no5;
double  valor_debn;
double  valor_cren;
VARCHAR vecinf     [20][20];
VARCHAR cuentab    [20];
VARCHAR veca       [20];
VARCHAR vecb       [20];
VARCHAR vecc       [20];
VARCHAR vecd       [20];
double  nitn;
VARCHAR sucursal   [10];
VARCHAR sucursali  [10];
VARCHAR sucursalf  [10];
VARCHAR sucursalb  [10];
VARCHAR sucursaln  [10];
VARCHAR cen_cosi   [04];
VARCHAR cen_cosf   [04];
VARCHAR cen_cosb   [04];
int     cen_cosn;
int     cen_cos;
VARCHAR nomb_suci  [12];
VARCHAR nomb_sucf  [12];
VARCHAR librob        [4];
VARCHAR lib[5];
VARCHAR nomblib[20];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;

double  valor_niv3=0;
double  valor_niv4=0;
char    cuenta_adl  [20];
char    cuenta_an   [20];
char    sucursal_an [05];
int     cen_cos_an;
char    g_nombre    [70];
char    nombre_ctan2[50];
char    nombre_adl  [50];
int     traidos;
int     num_ret;
int     loop_4;
int     staora;
int     staorad  = 0;
int     staoran  = 0;
int     staorax  = 0;
char    pagina[4];                                   /* Contador de Paginas */
int     con_pag=0;                                   /* Contador de Paginas */
int     con_lin=66;                                   /* Contador de Lineas  */
int     cl;
        		                /* Variables de recepcion para datos */
char *fmtnum(), r_t[100];
int     diai;
int     mesi;
int     anoi;
double  nitn_an;
char    codigo_an[20];
double  valor_debx;
double  valor_crex;
double  total[5];
char    cadena[100];
char    cadena2[240];
char    cadena3[240];
char    cadenon[240];
char    copias [5];
char    timbrado[2];
char    por_suc[2];
char    un_mes[2];
char    vecplan[5][20];
int     entre;
int     i;
int     j;
int     k;
int     sub_anexos;

EXEC ORACLE OPTION (RELEASE_CURSOR=YES);
EXEC ORACLE OPTION (HOLD_CURSOR=YES);

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

    if (argc < 16)
       {
	printf ("Incorrecta invocacion:\n");
        printf ("Uso : codigo_emp aaaamm cuentai cuentaf sucursali sucursalf c.costoi c.costof copias pagina device timbrado(s/n) por sucursal(s/n) un solo mes(s/n) libro userid/password\n");
	printf ("      device : t salida por terminal\n");
	printf ("      device : s salida standar     \n");
	printf ("               Px salida por impresora (x nro printer)\n");
  printf ("      libro(0= COLGAAP 1=IFRS)\n");
	printf ("               userid/password nombre usuario y password\n");
        exit (1);
       }
       strcpy (codigo_emp.arr, argv[1]);
       codigo_emp.len =        strlen(codigo_emp.arr);
       strcpy (cuentai.arr,    argv[3]);
       cuentai.len    =        strlen(cuentai.arr);
       strcpy (cuentaf.arr,    argv[4]);
       cuentaf.len    =        strlen(cuentaf.arr);
       strcpy (sucursali.arr,  argv[5]);
       sucursali.len  =        strlen(sucursali.arr);
       strcpy (sucursalf.arr,  argv[6]);
       sucursalf.len  =        strlen(sucursalf.arr);
       strcpy (cen_cosi.arr,   argv[7]);
       cen_cosi.len   =        strlen(cen_cosi.arr);
       strcpy (cen_cosf.arr,   argv[8]);
       cen_cosf.len   =        strlen(cen_cosf.arr);
       strcpy (copias,         argv[9]);
       strcpy (pagina,         argv[10]);
       strcpy (device,         argv[11]);
       strlow (device);
       strcpy (timbrado,       argv[12]);
       strlow (timbrado);
       strcpy (por_suc,        argv[13]);
       strlow (por_suc);
       strcpy (un_mes,         argv[14]);
       strlow (un_mes);
       strcpy (librob.arr,     argv[15]);
       librob.len  =           strlen(librob.arr);

    if (!strpos ("/", argv[16]))
       {
        printf ("user id/password incorrecto.\n");
	exit (1);
       }

    strcpy(uid.arr,argv[16]);
    uid.len = strlen(uid.arr);

    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/***********************************************
 * Pasa la sentencia SQL a ORACLE. (osql3).    *
 * e identifica la localizacion y tipo  de  un *
 * area en el programa para recuperar datos de *
 * ORACLE. (odefin).                           *
 ***********************************************/
    strcpy (ano_mes.arr,    argv[2]);
    ano_mes.len    =        strlen(ano_mes.arr);

    strcpy (cadena,ano_mes.arr);
    strorg (cadena,1,4);
    anoi=atoi(cadena);

    strcpy (cadena,ano_mes.arr);
    strorg (cadena,5,2);
    mesi=atoi(cadena);

    if (mesi==13)
        mesi=12;
    if (strcmp(un_mes,"s")) {
        sprintf (ano_mesi.arr,"%04d%02d",anoi-1,13);
        ano_mesi.len   =        strlen(ano_mesi.arr);
    }
    else {
        strcpy (ano_mesi.arr,    argv[2]);
        ano_mesi.len   =        strlen(ano_mesi.arr);
    }

/* Cx */

    EXEC SQL select nombre
             into  :nomb_suci
             from   sucursal
             where  sucursal   = :sucursali   and
                    codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode == 0)
        nomb_emp.arr [nomb_emp.len] = '\0';

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Sucursali=%s (%d)\n",sucursali.arr, sqlca.sqlcode);

/* Cx1 */

    EXEC SQL select nombre
             into  :nomb_sucf
             from   sucursal
             where  sucursal   = :sucursalf   and
                    codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode == 0)
        nomb_emp.arr [nomb_emp.len] = '\0';

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Sucursalf=%s (%d)\n",sucursalf.arr, sqlca.sqlcode);

        if (!strcmp(por_suc,"s")) {
    	    EXEC SQL DECLARE C2A CURSOR FOR
   	     select plan.cuenta, a.sucursal, a.cen_cos, plan.nombre, db_cr, nivel, sum(valor_deb),
               	    sum(valor_cre)
    	     from acumulados a, plan
    	     where  a.codigo_emp = to_number(:codigo_emp)     and
            	    a.codigo_emp = plan.codigo_emp            and
          	    ano_mes     >= to_number(:ano_mesi)       and
          	    ano_mes     <= to_number(:ano_mes)        and
          	    plan.cuenta  =
          	    substr(a.cuenta,1,decode(to_number(nivel),0,1,to_number(nivel)*2))
                                                    	      and
          	    plan.cuenta >= (:cuentai)                 and
          	    plan.cuenta <= (:cuentaf)                 and
          	    a.sucursal  >= (:sucursali)               and
          	    a.sucursal  <= (:sucursalf)               and
          	    a.cen_cos   >= to_number(:cen_cosi)       and
          	    a.cen_cos   <= to_number(:cen_cosf)       and
                a.libro      = to_number(:librob)
    	    group by plan.cuenta, a.sucursal, a.cen_cos, plan.nombre, nivel, db_cr
    	    order by plan.cuenta, a.sucursal, a.cen_cos, plan.nombre, nivel, db_cr;
        }
        else {
    	    EXEC SQL DECLARE C2 CURSOR FOR
   	     select plan.cuenta, plan.nombre, db_cr, nivel, sum(valor_deb),
            	    sum(valor_cre)
    	     from acumulados a, plan
    	     where  a.codigo_emp = to_number(:codigo_emp)     and
          	    a.codigo_emp = plan.codigo_emp            and
          	    ano_mes     >= to_number(:ano_mesi)       and
          	    ano_mes     <= to_number(:ano_mes)        and
          	    plan.cuenta  =
          	    substr(a.cuenta,1,decode(to_number(nivel),0,1,to_number(nivel)*2))
                                                    	      and
          	    plan.cuenta >= (:cuentai)                 and
          	    plan.cuenta <= (:cuentaf)                 and
          	    a.sucursal  >= (:sucursali)               and
          	    a.sucursal  <= (:sucursalf)               and
          	    a.cen_cos   >= to_number(:cen_cosi)       and
          	    a.cen_cos   <= to_number(:cen_cosf)       and
                a.libro      = to_number(:librob)
    	     group by plan.cuenta, plan.nombre, nivel, db_cr
    	     order by plan.cuenta, plan.nombre, nivel, db_cr;
        }

    	EXEC SQL DECLARE C3 CURSOR FOR
    	select cuenta, nombre, nvl(nit,0), decode(codigo,'0','',codigo),
    	       sucursal, cen_cos,
               sum(valor_deb), sum(valor_cre)
    	from acumulanit a, nits
    	where nits.codigo_nit(+)    = a.codigo_nit            and
           	a.codigo_emp          = to_number(:codigo_emp)  and
           	ano_mes              >= to_number(:ano_mesi)    and
           	ano_mes              <= to_number(:ano_mes)     and
           	cuenta               >= (:cuentai)              and
           	cuenta               <= (:cuentaf)              and
          	sucursal             >= (:sucursali)            and
          	sucursal             <= (:sucursalf)            and
          	cen_cos              >= to_number(:cen_cosi)    and
          	cen_cos              <= to_number(:cen_cosf)    and
            a.libro               = to_number(:librob)
    	group by cuenta, nombre, codigo, sucursal, cen_cos, a.codigo_nit, nit
    	order by cuenta, sucursal, cen_cos, codigo, nit;

/* C1 */

    EXEC SQL select n.nombre, n.nit, n.digito
             into  :nomb_emp, :nit, :digito
             from   nits n, empresas e
             where  n.codigo_nit = e.codigo_nit and
                    e.codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode == 0)
        nomb_emp.arr [nomb_emp.len] = '\0';

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Empresa (%d)\n", sqlca.sqlcode);

    /* C9 */

    EXEC SQL select nvl(sum(valor_deb)-sum(valor_cre),0)
             into :total_no5
             from acumulados a
             where codigo_emp = to_number(:codigo_emp)      and
                   ano_mes   >= to_number(:ano_mesi)        and
                   ano_mes   <= to_number(:ano_mes)         and
                   cuenta    >= (:cuentai)                  and
                   cuenta    <= (:cuentaf)                  and
             	     sucursal  >= (:sucursali)                and
          	       sucursal  <= (:sucursalf)                and
          	       cen_cos   >= to_number(:cen_cosi)        and
          	       cen_cos   <= to_number(:cen_cosf)        and
                   a.libro   = to_number(:librob)           and
                   not exists (select *
                               from  acumulanit
                               where codigo_emp = to_number(:codigo_emp) and
                                     ano_mes   >= to_number(:ano_mesi)   and
                                     ano_mes   <= to_number(:ano_mes)    and
              	                     sucursal  >= (:sucursali)           and
              	                     sucursal  <= (:sucursalf)           and
              	                     cen_cos   >= to_number(:cen_cosi)   and
              	                     cen_cos   <= to_number(:cen_cosf)   and
                                     libro      = to_number(:librob)     and
                                     a.cuenta   = cuenta);

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "C9 Error leyendo Acumulados, ano_mesi (%-s), ano_mes (%-s), cuentai (%-s), cuentaf (%-s), (%d)\n", ano_mesi.arr,  ano_mes.arr , cuentai.arr, cuentaf.arr, sqlca.sqlcode);

    EXEC SQL DECLARE C4 CURSOR FOR
    select inf
    from   infacu;

    EXEC SQL OPEN C4;

    staora  = 0;
    traidos = 0;
    num_ret = 0;
    while (staora == 0) {

          EXEC SQL FETCH C4 INTO :vecinf;

          if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
             fprintf (stderr, "Error leyendo C4 (%d)\n", sqlca.sqlcode);

          staora  = sqlca.sqlcode;
          traidos = sqlca.sqlerrd[2];

          for (loop_4 = 0; loop_4 < (traidos - num_ret); loop_4++) {
              vecinf[loop_4].arr  [vecinf[loop_4].len] = '\0';
          }
          num_ret = traidos;
    }
    k = traidos;
    EXEC SQL CLOSE C4;

    trabajo();

    EXEC SQL DECLARE C11 CURSOR FOR
    select cuenta
    from   cta_anexos
    where  codigo_emp = :codigo_emp          and
           cuenta    >= :cuentai             and
           cuenta    <= :cuentaf             and
           sucursal  >= (:sucursali)         and
      	   sucursal  <= (:sucursalf)         and
      	   cen_cos   >= to_number(:cen_cosi) and
      	   cen_cos   <= to_number(:cen_cosf)
    order  by cuenta;

    EXEC SQL OPEN  C11;
    EXEC SQL FETCH C11 INTO :cuentax;
    if (!sqlca.sqlcode)
       cuentax.arr [cuentax.len] = '\0';
    staorax  = sqlca.sqlcode;
    if (staorax) {
       strcpy(cuentax.arr,"9999999999");
       cuentax.len = strlen(cuentax.arr);
    }
    lista_balance();
    totales();

    staorad=0;
    staoran=0;
    con_lin=66;
    EXEC SQL CLOSE C11;
    EXEC SQL OPEN  C11;
    EXEC SQL FETCH C11 INTO :cuentax;
    if (!sqlca.sqlcode)
        cuentax.arr [cuentax.len] = '\0';
    staorax  = sqlca.sqlcode;
    if (staorax) {
       strcpy(cuentax.arr,"9999999999");
       cuentax.len = strlen(cuentax.arr);
    }
    while (staorax==0) {
          for (i=0;i<=5;i++) {
               total[i]=0;
          }
          sub_anexos=1;
          if (!strcmp(por_suc,"s"))
              EXEC SQL CLOSE C2A;
          else
              EXEC SQL CLOSE C2;
          EXEC SQL CLOSE C3;
          strcpy(cuentai.arr,cuentax.arr);
          cuentai.len = strlen(cuentai.arr);
          strcpy(cuentaf.arr,cuentax.arr);
          cuentaf.len = strlen(cuentaf.arr);
          trabajo();
          lista_balance();
          fprintf(fp,"\n");
          con_lin++;
          totales();
          EXEC SQL FETCH C11 INTO :cuentax;
          cuentax.arr [cuentax.len] = '\0';
          staorax  = sqlca.sqlcode;
    }

/************************************************
 * Recuperar datos en el area de datos definida *
 * una fila al tiempo. (ofetch).                *
 * Aqui se hace la primera lectura del cursor 0.*
 ************************************************/
    cierre_impresora();
    EXEC SQL COMMIT WORK RELEASE;
    exit   (0);
}

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/
void trabajo()
{
static int cuantas = 0;

cuantas++;
//printf ("trabajo nro. %-d\n", cuantas);

    staorad=0;
    staoran=0;

    EXEC SQL OPEN  C3;
    EXEC SQL FETCH C3 INTO :cuentan, :nombre_ctam, :nitn,
                           :codigo,  :sucursaln, :cen_cosn,
                           :valor_debn,  :valor_cren;
    cuentan.arr     [cuentan.len]     = '\0';
    sucursaln.arr   [sucursaln.len]   = '\0';
    nombre_ctam.arr [nombre_ctam.len] = '\0';
    codigo.arr      [codigo.len]      = '\0';
    staoran  = sqlca.sqlcode;
    if ((staoran == -1405 || staoran == 0) && strlen(nombre_ctam.arr)) {
        strcpy(g_nombre,nombre_ctam.arr);
        strcpy(nombre_ctan.arr,nombre_ctam.arr);
        nombre_ctan.len = strlen(nombre_ctan.arr);
    }
    else {
          strcpy(nombre_ctan.arr,g_nombre);
          nombre_ctan.len = strlen(nombre_ctan.arr);
    }
    if (staoran == 1403) {
        strcpy(cuentan.arr,"9999999999");
        cuentan.len = strlen(cuentan.arr);
    }
    else if (staoran == -1405) {
             strcpy (codigo.arr, "");
             codigo.len = 0;
         }
         else if (staoran) fprintf (stderr, "Error en Acumulanit C3, %-d\n", staoran);

    if (!strcmp(por_suc,"s")) {
       EXEC SQL OPEN  C2A;
       EXEC SQL FETCH C2A INTO :cuenta, :sucursal, :cen_cos, :nombre_cta, :db_cr, :nivel,
                               :valor_deb, :valor_cre;
    }
    else {
       EXEC SQL OPEN  C2;
       EXEC SQL FETCH C2 INTO :cuenta, :nombre_cta, :db_cr, :nivel,
                              :valor_deb, :valor_cre;
    }
    cuenta.arr     [cuenta.len]     = '\0';
    nombre_cta.arr [nombre_cta.len] = '\0';
    db_cr.arr      [db_cr.len]      = '\0';
    sucursal.arr   [sucursal.len]   = '\0';
    staorad  = sqlca.sqlcode;
    if (!staorad) {
       if (strcmp(cuenta.arr,cuentan.arr) <= 0)
           strcpy(g_nombre,nombre_cta.arr);
    }
    if (staorad == 1403) {
        strcpy(cuenta.arr,"9999999999");
        cuenta.len = strlen(cuenta.arr);
    }
    else if (staorad) fprintf (stderr, "Error1, %-d\n", staorad);
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
 char fecha[30];
 con_pag++;
 
 fprintf(fp,"%s",salte_pagina);
 if (strcmp(timbrado,"s")) {
    if (atoi(pagina)>con_pag)
       return;
    if (!strcmp(codigo_emp.arr,"3"))
       fprintf(fp,".");
    strful(cadena,(int)(42-strlen(nomb_emp.arr))/2,' ');
    fprintf(fp,"%s%s%s%s%s\n",diezcpi,ancho_on,cadena,nomb_emp.arr,ancho_off);

    sprintf(cadena2,"SUCURSAL: %s %s A %s %s C.COSTO: %s A %s",sucursali.arr,nomb_suci.arr,sucursalf.arr,nomb_sucf.arr,cen_cosi.arr,cen_cosf.arr);
    strful(cadena,(int)(80-strlen(cadena2))/2,' ');
    fprintf(fp,"%s%s%s%s\n",condensado_on,ancho_on,cadena,cadena2);

    sprintf (cadena,"%12.0f",nit);
    fmtnum("zzz,zzz,zzz,zzz",cadena,r_t);
    fprintf (fp,"%s%s%25s %18s",condensado_on,ancho_on,"NIT :",r_t);
    if (digito > 0) {
       sprintf (cadena,"%d",digito);
       fmtnum("z",cadena,r_t);
       fprintf (fp,"-%s",r_t);
    }
    else if (digito == 0)
            fprintf (fp,"-%s","0");
    fprintf(fp,"\n%20s%s%s\n\n"," ","ANEXOS AL BALANCE DE PRUEBA",ancho_off);
    fecha_system(fecha);
   /* printf("mesi=%d\n",mesi); */
    if (strcmp(timbrado,"s"))
       fprintf(fp,"%s%s%-44s%s%10s / %d",condensado_on,"FECHA PROCESO : ",fecha,"PERIODO : ",mes[mesi-1],anoi);
    else
       fprintf(fp,"%s%s%-44s%s%10s / %d",condensado_on,"                "," ",  "PERIODO : ",mes[mesi-1],anoi);
 }
 else {
    fecha_system(fecha);
   /* printf("mesi=%d\n",mesi); */
    fprintf(fp,"%s%s%-44s%s%10s / %d",condensado_on,"                "," ","PERIODO : ",mes[mesi-1],anoi);
 }

 EXEC SQL DECLARE clibro CURSOR FOR 
      select libro, nombre
      from libro
      where libro = to_number(:librob);
 
 EXEC SQL OPEN clibro;
 EXEC SQL FETCH clibro into :lib, :nomblib;
 if (!sqlca.sqlcode) {
     lib.arr [lib.len] = '\0';
     nomblib.arr [nomblib.len] = '\0';
 }

 EXEC SQL CLOSE clibro;
  
 fprintf(fp,"%8s %2s %6s %34s %d\n\n","LIBRO:",lib.arr,nomblib.arr,"PAGINA ",con_pag);
 fprintf(fp,"%s%s%s%161s%s\n\n",enfatizado_on,diezcpi,condensado_on,"CUENTA   SUC CC   NIT      CODIGO     NOMBRE DE LA CUENTA                        AUXILIAR #2    AUXILIAR #1      SUBCUENTA         CUENTA          GRUPO          CLASE",enfatizado_off);
 con_lin = 9;
}

void lista_balance()
{
 while (staorad==0 || staoran==0) {
        if (strcmp(cuenta.arr,cuentan.arr)==0) {
            imprime_acumulados();
            imprime_acumulanit();
            if (entre==0) {
                EXEC SQL FETCH C3 INTO :cuentan, :nombre_ctam, :nitn,
                                       :codigo,  :sucursaln, :cen_cosn,
                                       :valor_debn,  :valor_cren;
                cuentan.arr     [cuentan.len]     = '\0';
                sucursaln.arr   [sucursaln.len]   = '\0';
                nombre_ctam.arr [nombre_ctam.len] = '\0';
                codigo.arr      [codigo.len]      = '\0';
                staoran = sqlca.sqlcode;
                if ((staoran == -1405 || staoran == 0)
                     && strlen(nombre_ctam.arr)) {
                     staoran = 0;
                   if (nitn != 1) {
                       strcpy(g_nombre,nombre_ctam.arr);
                       strcpy(nombre_ctan.arr,nombre_ctam.arr);
                       nombre_ctan.len = strlen(nombre_ctan.arr);
                   }
                   else {
                         strcpy(nombre_ctan.arr,g_nombre);
                         nombre_ctan.len = strlen(nombre_ctan.arr);
                   }
                }
                else {
                      strcpy(nombre_ctan.arr,g_nombre);
                      nombre_ctan.len = strlen(nombre_ctan.arr);
                }
                if (staoran == 1403) {
                    strcpy(cuentan.arr,"9999999999");
                    cuentan.len = strlen(cuentan.arr);
                }
                else if (staoran == -1405) {
                        strcpy (codigo.arr, "");
                        codigo.len = 0;
                        staoran = 0;
                     }
                else if (staoran) fprintf (stderr, "Error2, %-d\n", staoran);
            }
            if (!strcmp(por_suc,"s")) {
               EXEC SQL FETCH C2A INTO :cuenta, :sucursal, :cen_cos, :nombre_cta, :db_cr, :nivel,
                                       :valor_deb, :valor_cre;
            }
            else {
               EXEC SQL FETCH C2 INTO :cuenta, :nombre_cta, :db_cr, :nivel,
                                      :valor_deb, :valor_cre;
            }
            cuenta.arr     [cuenta.len]     = '\0';
            nombre_cta.arr [nombre_cta.len] = '\0';
            db_cr.arr      [db_cr.len]      = '\0';
            sucursal.arr   [sucursal.len]   = '\0';
            staorad = sqlca.sqlcode;
            if (!staorad) {
               if (strcmp(cuenta.arr,cuentan.arr) <= 0)
                   strcpy(g_nombre,nombre_cta.arr);
            }
            if (staorad) {
                strcpy(cuenta.arr,"9999999999");
                cuenta.len = strlen(cuenta.arr);
            }
        }
        else {
              if (strcmp(cuenta.arr,cuentan.arr)<0) {
                  if (valor_deb!=0 || valor_cre!=0) {
                      imprime_acumulados();
                  }
                  if (!strcmp(por_suc,"s")) {
                     EXEC SQL FETCH C2A INTO :cuenta, :sucursal, :cen_cos, :nombre_cta, :db_cr, :nivel,
                                             :valor_deb, :valor_cre;
                  }
                  else {
                     EXEC SQL FETCH C2 INTO :cuenta, :nombre_cta, :db_cr, :nivel,
                                            :valor_deb, :valor_cre;
                  }
                  cuenta.arr     [cuenta.len]     = '\0';
                  nombre_cta.arr [nombre_cta.len] = '\0';
                  db_cr.arr      [db_cr.len]      = '\0';
                  sucursal.arr   [sucursal.len]   = '\0';
                  staorad = sqlca.sqlcode;
                  if (!staorad) {
                     if (strcmp(cuenta.arr,cuentan.arr) <= 0)
                         strcpy(g_nombre,nombre_cta.arr);
                  }
                  if (staorad) {
                      strcpy(cuenta.arr,"9999999999");
                      cuenta.len = strlen(cuenta.arr);
                  }
              }
              else {
                    imprime_acumulanit();
                    if (entre==0) {
               	        EXEC SQL FETCH C3 INTO :cuentan, :nombre_ctam, :nitn,
                                       	       :codigo,  :sucursaln,   :cen_cosn,
                                               :valor_debn,  :valor_cren;

                        cuentan.arr     [cuentan.len]     = '\0';
                        sucursaln.arr   [sucursaln.len]   = '\0';
                        nombre_ctam.arr [nombre_ctam.len] = '\0';
                        codigo.arr      [codigo.len]      = '\0';
                        staoran = sqlca.sqlcode;
                        if ((staoran == -1405 || staoran == 0)
                            && strlen(nombre_ctam.arr)) {
                           staoran = 0;
                           if (nitn != 1) {
                               strcpy(g_nombre,nombre_ctam.arr);
                               strcpy(nombre_ctan.arr,nombre_ctam.arr);
                               nombre_ctan.len = strlen(nombre_ctan.arr);
                           }
                           else {
                                 strcpy(nombre_ctan.arr,g_nombre);
                                 nombre_ctan.len = strlen(nombre_ctan.arr);
                           }
                        }
                        else {
                              strcpy(nombre_ctan.arr,g_nombre);
                              nombre_ctan.len = strlen(nombre_ctan.arr);
                        }
                        if (staoran == 1403) {
                            strcpy(cuentan.arr,"9999999999");
                            cuentan.len = strlen(cuentan.arr);
                        }
                        else if (staoran == -1405) {
                                staoran = 0;
                                strcpy (codigo.arr, "");
                                codigo.len = 0;
                             }
                        else if (staoran) fprintf (stderr, "Error3, %-d\n", staoran);
                    }
              }
        }
// if (strcmp(cuenta.arr,"94152001")==0) {
//     printf("%s %s %f12.0 %s staorad==%d || staoran==%d",cuenta.arr,cuentan.arr,nitn,g_nombre,staorad,staoran); getchar();
// }
 }
 imprime_acumulanit();

}

void imprime_acumulados()
{
  if (!strcmp(cuenta.arr,"9999999999"))
      return;
  if (con_lin > 60)
      titulos();

  if (atoi(pagina)<=con_pag) {
     if (!strcmp(por_suc,"s"))
         sprintf (cadena2,"%-9s %3s %1d %-10s %-10s ",cuenta.arr,sucursal.arr,cen_cos," "," ");
     else
         sprintf (cadena2,"%-9s%29s",cuenta.arr," ");
     strcpy  (cadenon,cadena2);
     strorg  (nombre_cta.arr,1,39);
     sprintf (cadena2,"%-39s",nombre_cta.arr);
     strcat  (cadenon,cadena2);
  }
//  valors+=valor_deb-valor_cre;
  valor_deb-=valor_cre;
  total[nivel]+=valor_deb;
  if (nivel==3)
     valor_niv3=valor_deb;
  sprintf (cadena,"%9.2f",valor_deb);
  strful(cadena3,(int)((5-nivel)*14),' ');
  if (atoi(pagina)<=con_pag) {
     if (valor_deb != 0) {
        fprintf (fp,"%s",cadenon);
        fmtnum("zzzzz,zzz,zz9.99",cadena,r_t);
        fprintf (fp,"%s%16s\n",cadena3,r_t);
	fflush(fp);
        con_lin++;
     }
  }
}

void imprime_acumulanit()
{
  if (!strcmp(cuentan.arr,"9999999999"))
      return;
  if (con_lin > 60)
      titulos();
  strcpy(cuentab.arr,cuentan.arr);
  cuentab.len   = strlen(cuentab.arr);

  strcpy(sucursalb.arr,sucursaln.arr);
  sucursalb.len = strlen(sucursalb.arr);

  sprintf(cen_cosb.arr,"%2d",cen_cosn);
  cen_cosb.len = strlen(cen_cosb.arr);

  /* C5 */
  EXEC SQL select infa, infb, infc, infd
           into  :veca, :vecb, :vecc, :vecd
           from   plan
           where  codigo_emp = :codigo_emp and
                  cuenta     = :cuentab;
  veca.arr     [veca.len]     = '\0';
  vecb.arr     [vecb.len]     = '\0';
  vecc.arr     [vecc.len]     = '\0';
  vecd.arr     [vecd.len]     = '\0';
  if (sqlca.sqlcode == 1403) {
      printf ("Cuentab (%-s) no existe en plan\n", cuentab.arr);
      exit(1);
  }

  strcpy (vecplan[0], veca.arr);
  strcpy (vecplan[1], vecb.arr);
  strcpy (vecplan[2], vecc.arr);
  strcpy (vecplan[3], vecd.arr);

  i=j=0;
  if (sub_anexos==0) {
    for (i=0;i<4;i++) {
        for (j=0;j<k;j++) {
            if (!strcmp(vecplan[i],vecinf[j].arr)) {
                if ((!strcmp(vecplan[i],"CODART") && nitn==1) ||
                    (!strcmp(vecplan[i],"CODART") && nitn==0)) {
                   strcpy(codigob.arr,codigo.arr);
                   codigob.len = strlen(codigob.arr);
                   leer_articulos();
                   j=k+1;
                   i=4;
                }
                else {
                     if (!strcmp(vecplan[i],"CODBIENES")) {
                          strcpy(codigob.arr,codigo.arr);
                          codigob.len = strlen(codigob.arr);
                          leer_bienes();
                        j=k+1;
                        i=4;
                     }
                     else if (!strcmp(vecplan[i],"CTA-CTE") ||
                              !strcmp(vecplan[i],"PAGARE-#")) {
                              strcpy(codigob.arr,codigo.arr);
                              codigob.len = strlen(codigob.arr);
                              leer_bancos();
                              j=k+1;
                              i=4;
                            }
                          else if (!strcmp(vecplan[i],"COD-VAR") ||
                                   !strcmp(vecplan[i],"POLIZA")) {
                                   strcpy(codigob.arr,codigo.arr);
                                   codigob.len = strlen(codigob.arr);
                                   leer_varios();
                                   j=k+1;
                                   i=4;
                               }
                          else if (!strcmp(vecplan[i],"IMPORT-US")) {
                                   strcpy(codigob.arr,codigo.arr);
                                   codigob.len = strlen(codigob.arr);
                                   leer_import();
                                   j=k+1;
                                   i=4;
                               }
                }
            }
        }
    }
}
  valor_debx=valor_debn;
  valor_crex=valor_cren;
  if (nitn==1) {
      nitn=0;
      valor_debx-=valor_crex;
      if (!strlen(codigo.arr) && valor_debx != 0) {
         strcpy(nombre_ctan.arr,g_nombre);
         nombre_ctan.len = strlen(nombre_ctan.arr);
      }
      else if (!memcmp(codigo.arr,"13050501",8)) {
               strcpy(nombre_ctan.arr,g_nombre);
               nombre_ctan.len = strlen(nombre_ctan.arr);
           }
  }

  valor_debx=0;
  valor_crex=0;
  entre=0;
  strcpy(codigo_an,codigo.arr);
  strcpy(cuenta_an,cuentan.arr);
  nitn_an=nitn;
  if (strcmp(sucursal_an,sucursaln.arr)!=0) {
//     if (nivel==4) {
//        fprintf (fp,"%s",cadenon);
//        fprintf (fp,"%s","TOTAL SUCURSAL --------->");
//        sprintf (cadena,"%9.2f",valors);
//        fmtnum("zzzzz,zzz,zz9.99",cadena,r_t);
//        fprintf (fp,"%s%16s\n",cadena3,r_t);
//        valors=0;
//     }
     strcpy(sucursal_an,sucursaln.arr);
     cen_cos_an=cen_cosn;
  }
  strcpy(nombre_ctan2,nombre_ctan.arr);
  while(strcmp(cuentan.arr,cuentax.arr)==0 && strcmp(codigo_an,codigo.arr)==0 && sub_anexos==0) {
        ver_anexo();
        strcpy(nombre_ctan.arr,nombre_ctan2);
        nombre_ctan.len = strlen(nombre_ctan.arr);
        nitn=nitn_an=0;
        entre=1;
  }

  if (entre==0) {
     valor_debx=valor_debn;
     valor_crex=valor_cren;
  }

  sprintf (cadena,"%10.0f",nitn_an);
  fmtnum("ZZZZZZZZZZ",cadena,r_t);
  if (atoi(pagina)<=con_pag) {
     sprintf (cadena2,"%-9s %3s %1d %-10s %-10s ",cuenta_an,sucursal_an,cen_cos_an,r_t,codigo_an);
     strcpy(cadenon,cadena2);

     while(strcmp(cuentax.arr,cuentan.arr)<0 && sub_anexos==0) {
         EXEC SQL FETCH C11 INTO :cuentax;
         cuentax.arr [cuentax.len] = '\0';
         staorax  = sqlca.sqlcode;
         if (staorax != -1405 && staorax != 0) {
            strcpy(cuentax.arr,"9999999999");
            cuentax.len = strlen(cuentax.arr);
         }
     }

     strorg(nombre_ctan.arr,1,39);
     nombre_ctan.len = strlen(nombre_ctan.arr);
     sprintf (cadena2,"%-39s",nombre_ctan.arr);
     strcat(cadenon,cadena2);
  }
  valor_debx-=valor_crex;
  valor_niv4=valor_debx;
  total[5]+=valor_debx;
  sprintf (cadena,"%9.2f",valor_debx);
  if (atoi(pagina)<=con_pag) {
     if (valor_debx != 0) {
        fprintf (fp,"%s",cadenon);
        fmtnum("zzzzz,zzz,zz9.99",cadena,r_t);
        fprintf (fp,"%15s\n",r_t);
fflush(fp);
        con_lin ++;
     }
  }
}

void ver_anexo()
{
 entre=1;
 valor_debx+=valor_debn;
 valor_crex+=valor_cren;

 EXEC SQL FETCH C3 INTO :cuentan, :nombre_ctam, :nitn,
                        :codigo,  :sucursaln,   :cen_cosn,
                        :valor_debn,  :valor_cren;

 cuentan.arr     [cuentan.len]     = '\0';
 sucursaln.arr   [sucursaln.len]   = '\0';
 nombre_ctam.arr [nombre_ctam.len] = '\0';
 codigo.arr      [codigo.len]      = '\0';
 staoran = sqlca.sqlcode;
 if ((staoran == -1405 || staoran == 0) && strlen(nombre_ctam.arr)) {
     if (nitn != 1) {
         strcpy(g_nombre,nombre_ctam.arr);
         strcpy(nombre_ctan.arr,nombre_ctam.arr);
         nombre_ctan.len = strlen(nombre_ctan.arr);
     }
     else {
           strcpy(nombre_ctan.arr,g_nombre);
           nombre_ctan.len = strlen(nombre_ctan.arr);
     }
 }
 else {
       strcpy(nombre_ctan.arr,g_nombre);
       nombre_ctan.len = strlen(nombre_ctan.arr);
 }
 if (staoran == 1403) {
     strcpy(cuentan.arr,"9999999999");
     cuentan.len = strlen(cuentan.arr);
 }
 else if (staoran == -1405) {
          strcpy (codigo.arr, "");
          codigo.len = 0;
      }
      else if (staoran) fprintf (stderr, "Error4, %-d\n", staoran);
}

void leer_articulos()
{
int	staora;
/* C6 */
    EXEC SQL select nombre
             into  :nombre_art
             from   articulos
             where  codart = (:codigob);

    staora = sqlca.sqlcode;
    nombre_art.arr [nombre_art.len] = '\0';
    if (!staora) {
        strcpy(g_nombre,nombre_art.arr);
        strcpy(nombre_ctan.arr,nombre_art.arr);
        nombre_ctan.len = strlen(nombre_ctan.arr);
    }
    else {
          strcpy(nombre_ctan.arr,g_nombre);
          nombre_ctan.len = strlen(nombre_ctan.arr);
    }
//    fprintf (stderr,"Error-1 (%d), cuentab (%-s), Codigo (%-s) , nombre_art(%s), nombre_ctan(%s) en articulos\n", staora, cuentab.arr, codigob.arr, nombre_art.arr, nombre_ctan.arr);
}

void leer_bienes()
{
int	staora;
    EXEC SQL DECLARE C1 CURSOR FOR
       select nombre
       from   ACTIVOS
       where  CODIGO = (:codigob) and
              codigo_emp = (:codigo_emp);
    EXEC SQL DECLARE C7 CURSOR FOR
       select nombre
       from   bienes
       where  codbienes = (:codigob);

    staora = 0;
    EXEC SQL OPEN  C1;
    EXEC SQL FETCH C1 INTO :nombre_bien;
    staora = sqlca.sqlcode;
    nombre_bien.arr [nombre_bien.len] = '\0';
    if (!staora) {
        strcpy(g_nombre,nombre_bien.arr);
        strcpy(nombre_ctan.arr,nombre_bien.arr);
        nombre_ctan.len = strlen(nombre_ctan.arr);
    }
    else {
          staora = 0;
          EXEC SQL OPEN  C7;
          EXEC SQL FETCH C7 INTO :nombre_bien;
          staora = sqlca.sqlcode;
          nombre_bien.arr [nombre_bien.len] = '\0';
          if (!staora) {
              strcpy(g_nombre,nombre_bien.arr);
              strcpy(nombre_ctan.arr,nombre_bien.arr);
              nombre_ctan.len = strlen(nombre_ctan.arr);
          }
          else {
               strcpy(nombre_ctan.arr,g_nombre);
               nombre_ctan.len = strlen(nombre_ctan.arr);
          }
    }

    EXEC SQL CLOSE C1;
    EXEC SQL CLOSE C7;

//    fprintf (stderr,"Error-2 (%d), cuentab (%-s), Codigo (%-s) , nombre_bien(%s), nombre_ctan(%s) en bienes\n", staora, cuentab.arr, codigob.arr, nombre_bien.arr, nombre_ctan.arr);
}

void leer_bancos()
{
int	staora;

/* C8 */
    EXEC SQL select nombre
             into  :nombre_bco
             from   ctacte
             where  cuenta     = (:cuentab)   and
                    cta_cte    = (:codigob)   and
                    sucursal   = (:sucursalb) and
                    codigo_emp = (:codigo_emp);

    staora = sqlca.sqlcode;
    nombre_bco.arr [nombre_bco.len] = '\0';
    if (!staora) {
        strcpy(g_nombre,nombre_bco.arr);
        strcpy(nombre_ctan.arr,nombre_bco.arr);
        nombre_ctan.len = strlen(nombre_ctan.arr);
    }
    else {
          strcpy(nombre_ctan.arr,g_nombre);
          nombre_ctan.len = strlen(nombre_ctan.arr);
    }
//    fprintf (stderr,"Error-3 (%d), cuentab (%-s), Codigo (%-s) , nombre_bco(%s), nombre_ctan(%s) en bancos\n", staora, cuentab.arr, codigob.arr, nombre_bco.arr, nombre_ctan.arr);
}

void leer_varios()
{
int	staora;
/* C10 */
    EXEC SQL select nombre
             into  :nombre_var
             from   cta_varias
             where  cuenta     = :cuentab             and
                    cod_var    = :codigob             and
                    sucursal   = :sucursalb           and
                    cen_cos    = to_number(:cen_cosb) and
                    codigo_emp = :codigo_emp;

    staora = sqlca.sqlcode;
    nombre_var.arr [nombre_var.len] = '\0';
    if (!staora) {
        strcpy(g_nombre,nombre_var.arr);
        strcpy(nombre_ctan.arr,nombre_var.arr);
        nombre_ctan.len = strlen(nombre_ctan.arr);
    }
    else {
          strcpy(nombre_ctan.arr,g_nombre);
          nombre_ctan.len = strlen(nombre_ctan.arr);
    }
//    fprintf (stderr,"Error-4 (%d), cuentab (%-s), Codigo (%-s) , nombre_var(%s), nombre_ctan(%s) en varias\n", staora, cuentab.arr, codigob.arr, nombre_var.arr, nombre_ctan.arr);

}

void leer_import()
{
int	staora;
/* C12 */
    EXEC SQL select nombre
             into  :nombre_imp
             from   cta_import
             where  cuenta     = (:cuentab)    and
                    import     = (:codigob)    and
                    codigo_emp = (:codigo_emp) and
                    sucursal   = (:sucursalb)  and
                    cen_cos    = to_number(:cen_cosb);
    staora = sqlca.sqlcode;
    nombre_imp.arr [nombre_imp.len] = '\0';
//    printf("staora (%d), cuentab(%s), codigob(%s), codigo_emp(%s), sucursalb.arr(%s), cen_cosb.arr(%s), nombre_imp.arr (%s)",staora,cuentab.arr,codigob.arr,codigo_emp.arr,sucursalb.arr,cen_cosb.arr,nombre_imp.arr); getchar();
    if (!staora) {
        strcpy(g_nombre,nombre_imp.arr);
        strcpy(nombre_ctan.arr,nombre_imp.arr);
        nombre_ctan.len = strlen(nombre_ctan.arr);
    }
    else {
          strcpy(nombre_ctan.arr,g_nombre);
          nombre_ctan.len = strlen(nombre_ctan.arr);
    }
//    fprintf (stderr,"Error-5 (%d), cuentab (%-s), Codigo (%-s) , nombre_imp(%s), nombre_ctan(%s) en import\n", staora, cuentab.arr, codigob.arr, nombre_imp.arr, nombre_ctan.arr);

}

void totales()
{
  if (con_lin > 60)
      titulos();
  if (atoi(pagina)>con_pag)
     return;
  fprintf (fp,"%71s%15s%15s%15s%15s%15s%15s\n"," "," --------------"," --------------"," --------------"," --------------"," --------------"," --------------");
  sprintf (cadena,"%9.2f",total[5]);
  fmtnum("zzzzz,zzz,zz9.99",cadena,r_t);
  fprintf (fp,"%71s%16s"," ",r_t);
  sprintf (cadena,"%9.2f",total[4]);
  fmtnum("zzzzz,zzz,zz9.99",cadena,r_t);
  fprintf (fp,"%16s",r_t);
  sprintf (cadena,"%9.2f",total[3]);
  fmtnum("zzzzz,zzz,zz9.99",cadena,r_t);
  fprintf (fp,"%16s",r_t);
  sprintf (cadena,"%9.2f",total[2]);
  fmtnum("zzzzz,zzz,zz9.99",cadena,r_t);
  fprintf (fp,"%16s",r_t);
  sprintf (cadena,"%9.2f",total[1]);
  fmtnum("zzzz,zzz,zz9.99",cadena,r_t);
  fprintf (fp,"%16s",r_t);
  sprintf (cadena,"%9.2f",total[0]);
  fmtnum("zzzzzz,zzz,zz9.99",cadena,r_t);
  fprintf (fp,"%16s\n",r_t);
  fprintf (fp,"%71s%15s%15s%15s%15s%15s%15s\n"," "," =============="," =============="," =============="," =============="," =============="," ==============");
  con_lin+=3;
  if (abs((long int)total_no5) > 0 && sub_anexos == 0) {
      sprintf (cadena,"%9.2f",total_no5);
      fprintf (fp,"%71s%15s\n","Total suma de las cuentas sin AUXILIAR #2 ====>     ",fmtnum("zzz,zzz,zz9.99",cadena,r_t));
      fprintf (fp,"%71s%15s\n"," "," ==============");
      total[5]+=total_no5;
      sprintf (cadena,"%9.2f",total[5]);
      fmtnum("zzzz,zzz,zz9.99",cadena,r_t);
      fprintf (fp,"%71s%15s\n"," ",r_t);
      fprintf (fp,"%71s%15s\n"," "," ==============");
      con_lin+=4;
  }
}

