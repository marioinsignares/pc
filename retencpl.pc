/*****************************************************************
* NOMLINOV  Version 1.0 - Rev 1.2 - Feb. 11/99.
*
* nomlinov.c Programa de liquidaci¢n de novedades
*
* Uso : nomlinov codigo_emp device copias userid/password
*
* Mario E. Santiago I. Creado Febrero 11-2000.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

double redondo();
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
VARCHAR codigo_emp     [05];
VARCHAR ano_mesi       [20];
VARCHAR ano_mesf       [20];
VARCHAR periodo        [04];
VARCHAR w_arch         [100];
VARCHAR ano            [6];
VARCHAR nit            [30];
VARCHAR nombre         [100];
VARCHAR base           [30];
VARCHAR valor          [30];
VARCHAR conceptoc      [20];
int     opcion;

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;

FILE    *fp1;

char *fmtnum(), r_t[100];
int     con_pag;                                   /* Contador de Paginas */
int     con_lin=66;                                /* Contador de Lineas  */
int     nconsec=0;
char    copias[6];

int	staora = 0;
char    formas[5];
char    fechas[100];
char    fecha[30];
char    cadena[100];
char    comando[100];
char    csubsrv[20];
char    aestado[2][8];
double  ndeven;
double  ndeduc;

void lista_empresa();
void registro();

void main(argc, argv)
int     argc;
char    *argv[];
{
char    device[10];
int     status = 0;

if (argc < 6)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : retencpl codigo_emp año mes_inicial mes_final periodo [(1)=Practicadas]/[(2)=Nos Practicaron] device copias archivo userid/password\n");
    printf ("      device : t salida por terminal\n");
    printf ("               Px salida por impresora (x nro printer)\n");
    printf ("               userid/password nombre usuario y password\n");
    printf ("archivo: nombre archivo con toda su rura ");
    exit (1);
   }

strcpy (codigo_emp.arr, argv[1]);
codigo_emp.len = strlen(codigo_emp.arr);

strcpy (ano.arr, argv[2]);
ano.len = strlen(ano.arr);

strcpy (ano_mesi.arr, argv[3]);
ano_mesi.len = strlen(ano_mesi.arr);

strcpy (ano_mesf.arr, argv[4]);
ano_mesf.len = strlen(ano_mesf.arr);

strcpy (periodo.arr, argv[5]);
periodo.len = strlen(periodo.arr);

strcpy (opcion, argv[6]);
if(opcion == 1) {
  strcpy (conceptoc.arr = "2320");
  conceptoc.len = strlen(conceptoc.arr);
}
else {
  strcpy (conceptoc.arr = "2321");
  conceptoc.len = strlen(conceptoc.arr);
} 

strcpy (device,             argv[7]);
strlow (device);
strcpy (copias,             argv[8]);
strcpy (w_arch.arr,         argv[9]);
w_arch.len = strlen(w_arch.arr);
if (!strpos ("/", argv[10]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,   argv[10]);
uid.len   =        strlen(uid.arr);

sprintf(ano_mesi.arr,"%4s%02d",ano.arr,atoi(ano_mesi.arr));
ano_mesi.len = strlen(ano_mesi.arr);
sprintf(ano_mesf.arr,"%4s%02d",ano.arr,atoi(ano_mesf.arr));
ano_mesf.len = strlen(ano_mesf.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

  EXEC SQL DECLARE C1 CURSOR FOR
  select  n.nit,
          n.nombre,
          trim(to_char((-1*(decode(co.db_cr,'DB',sum(valor_deb),'CR',sum(valor_cre),'DB_CR',sum(valor_deb-valor_cre))))*1000/9.6,'999999999999')) Base,
          trim(to_char(-1*(decode(co.db_cr,'DB',sum(valor_deb),'CR',sum(valor_cre),'DB_CR',sum(valor_deb-valor_cre))),'999999999999')) Valor
  from    acumulanit a, nits n, plan p, ciudades c, conceptodian_c co, conceptodian_d cd
  where   n.codigo_nit(+)       = a.codigo_nit                and 
          n.codigo_ciu          = c.codigo (+)                and 
          a.codigo_emp          = :codigo_emp                 and
          a.codigo_emp          = p.codigo_emp                and 
          p.cuenta  = 
          substr(a.cuenta,1,decode(to_number(nivel),0,1,to_number(nivel)*2)) and
          ano_mes              >=  :ano_mesi                  and 
          ano_mes              <=  :ano_mesf                  and 
          p.cuenta             >=        cd.cuenta            and 
          p.cuenta             <=        cd.cuentaf           and 
          length(p.cuenta)      =  length(cd.cuenta)          and          
          co.formato            =        cd.formato           and 
          co.concepto           =        cd.concepto          and
          co.concepto           =        :conceptoc           and
          co.formato            =        '1002'                          
  group by co.concepto,co.formato,co.monto,co.db_cr,n.nit, n.nombre
  order by n.nit,valor;

  EXEC SQL OPEN C1;

  if ((fp1 = fopen(w_arch.arr, "w")) == NULL) {
      fprintf (stderr,"Error abriendo archivo pipe \n");
      exit (1);
  }
  lista_empresa();
  fclose(fp1);

  EXEC SQL COMMIT WORK RELEASE;
  EXEC SQL CLOSE C1;

  cierre_impresora();
  exit   (0);
}

void lista_empresa()
{

 staora  = 0;

 EXEC SQL FETCH C1 INTO :nit, :nombre, :base, :valor;

 staora  = sqlca.sqlcode;

 if (staora == -1405) {
    staora = 0;
 }
 if (staora) {
    fprintf (stderr, "Error leyendo C1 (%d)\n", staora);
    exit   (1);
 }

 nit.arr          [nit.len]        = '\0';
 nombre.arr       [nombre.len]     = '\0';
 base.arr         [base.len]       = '\0';
 valor.arr        [valor.len]      = '\0';

 while (staora == 0) {

      EXEC SQL FETCH C1 INTO :nit, :nombre, :base, :valor;

      nit.arr          [nit.len]        = '\0';
      nombre.arr       [nombre.len]     = '\0';
      base.arr         [base.len]       = '\0';
      valor.arr        [valor.len]      = '\0';
      
      registro();

      staora  = sqlca.sqlcode;
      if (staora ==  1403) break;
      if (staora == -1405)
          staora  = 0;
      else if (staora)
               fprintf (stderr, "Error leyendo C1 (%d)\n", staora);
 }
}

void registro()
{

    fprintf(fp1,"%s;",nit.arr);
    fprintf(fp1,"%s;",nombre.arr);
    fprintf(fp1,"%s;","COMPRAS");
    fprintf(fp1,"%s;",base.arr);
    fprintf(fp1,"%02.2f;",9.6);
    fprintf(fp1,"%s;",valor.arr);
    fprintf(fp1,"%s;",ano.arr);
    fprintf(fp1,"%d;",periodo.arr);
    fprintf(fp1,"%s\n","BARRANQUILLA");
}

