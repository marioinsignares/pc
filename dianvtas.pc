/*****************************************************************
* FLISTPAR.C  Version 1.0 - Rev 1.2 - Mar. 11/98.
*
* dianvtas.pc Programa para la DIAN para listar VANTAS X NIT.
*
* Uso : flistpar fecha_ini fecha_fin device copias userid/password
*
* Martin A. Toloza L. Creado Marzo 11-1998.
* Teodoro Tarud & Cia Ltda.
*
*/
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

double redondo();
void titulos();
void fecha_oracle3();
				     /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
                                 /* Facturas (C1) */
VARCHAR fecha_ini     [20];
VARCHAR fecha_fin     [20];
                                 /* Nits (C2) */
VARCHAR nomb_clie     [55];
VARCHAR direccion     [55];
VARCHAR ciudad        [30];
VARCHAR nombre_muni   [25];
double  nit;
double  valor;
double  valor_iva;
                                 /* dianvtas (C4) */
double  valor_total;
double  total_iva;
VARCHAR codigo_emp  [3];
VARCHAR nomb_emp    [51];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
                                            /* Variables globales del usuario */
char *fmtnum(), r_t[100], r_t2[100], r_t3[100];
int     con_pag;                                   /* Contador de Paginas */
int     con_lin=66;                                /* Contador de Lineas  */
int     staora = 0;
int     oraest = 0;
char    copias[3];
int     cantidad;
char    fechas[90];
char    fecha [70];
char    cadena [200];
char    cadena2[100];
char    cadena3[70];
char    wciu[6];
double  porcentaje;
double  valor_parcial;

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

if (argc < 7)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : dianvtas codigo_emp fecha_ini fecha_fin device copias userid/password\n");
    printf ("      device : t salida por terminal\n");
    printf ("               Px salida por impresora (x nro printer)\n");
    printf ("               userid/password nombre usuario y password\n");
    exit (1);
   }

strcpy (codigo_emp.arr ,argv[1]);
codigo_emp.len = strlen(codigo_emp.arr);
strcpy (fecha_ini.arr, argv[2]);
fecha_ini.len   =      strlen(fecha_ini.arr);
strcpy (fecha_fin.arr, argv[3]);
fecha_fin.len   =      strlen(fecha_fin.arr);
if ( strlen(fecha_ini.arr) != 8 || strlen(fecha_fin.arr) != 8 ) {
   printf("Error, la fecha debe ser de 8 digitos y formato AAAAMMDD");
   exit (1);
}
strcpy (device,        argv[4]);
strlow (device);
strcpy (copias,        argv[5]);

strcpy(fecha,fecha_ini.arr);
fecha_oracle3(fecha);
strcpy(cadena,fecha);
strcpy(fecha,fecha_fin.arr);
strcat(cadena," hasta ");
fecha_oracle3(fecha);
strcat(cadena,fecha);
strcpy(fechas,cadena);

if (!strpos ("/", argv[6]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,   argv[6]);
uid.len   =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

       EXEC SQL select nombre into :nomb_emp
                from   empresas, nits
                where  empresas.codigo_nit = nits.codigo_nit and
                       empresas.codigo_emp = to_number(:codigo_emp);

      nomb_emp.arr[nomb_emp.len] = '\0';

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

   EXEC SQL DECLARE C3 CURSOR FOR
            select nit, sum(valor) valor, sum(valor_iva)
            from   dianvtas
            where  valor > 0
            group  by nit
            order  by valor;

   EXEC SQL delete from dianvtas;

   if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
       fprintf (stderr, "Error Borrando Dianvtas (%d)\n", sqlca.sqlcode);

   EXEC SQL insert into dianvtas
            select nit, sum(nvl(valor_oftalmica,0)+nvl(valor_contacto,0)),
                        sum(nvl(valor_iva,0))
            from  facturas f, nits n, clientes c
            where tipo_documento  in ('F','C')                       and
                  fecha_documento >= to_date(:fecha_ini,'yyyymmdd')  and
                  fecha_documento <= to_date(:fecha_fin,'yyyymmdd')  and
                  estado_factura   = 0                               and
                  f.codigo_cliente = c.codigo_cliente                and
                  c.codigo_nit     = n.codigo_nit                    and
                  f.tipo_factura   = :codigo_emp
            group by nit;
/*
              not exists
              (select 'x'
               from   basura
               where  f.tipo_factura   = tipo_factura   and
                      f.tipo_documento = tipo_documento and
                      f.numero_factura = numero_factura )
*/


   if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
       fprintf (stderr, "Error Insertando Dianvtas C1(%d)\n", sqlca.sqlcode);

   EXEC SQL select sum(valor), sum(valor_iva)
            into  :valor_total, :total_iva
            from   dianvtas
            where  valor > 0;

   oraest  = sqlca.sqlcode;
   if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
       fprintf (stderr, "Error Leyendo Dianvtas C4(%d)\n", sqlca.sqlcode);

   EXEC SQL OPEN C3;
   staora  = 0;
   titulos();
   while (staora == 0) {

          if (con_lin > 62)
              titulos();
          EXEC SQL FETCH C3 INTO :nit, :valor, :valor_iva;

          staora  = sqlca.sqlcode;
          if (staora ==  1403) break;
          if (staora == -1405)
              staora  = 0;
          else if (staora)
                   fprintf (stderr, "Error Leyendo C3 (%d)\n", staora);

          valor_parcial+=valor;

          EXEC SQL select nombre, direccion, codigo_ciu, nombre_muni
                   into :nomb_clie, :direccion, :ciudad, :nombre_muni
	           from  nits
                   where nit = :nit;
          oraest  = sqlca.sqlcode;
          if (oraest != 1403 && oraest != 0)
              fprintf (stderr, "Error Leyendo C2 (%d)\n", oraest);
          nomb_clie.arr       [nomb_clie.len]      = '\0';
          direccion.arr       [direccion.len]      = '\0';
          ciudad.arr          [ciudad.len]         = '\0';
          nombre_muni.arr     [nombre_muni.len]    = '\0';

          sprintf(cadena2,"%12.0f",nit);
          sprintf(cadena,"%8.2f",valor);
          sprintf(cadena3,"%8.2f",valor_iva);
          fprintf(fp,"%15s %-40s %-3s %-20s%-45s %14s %14s\n",fmtnum("zzz,zzz,zz9",cadena2,r_t),nomb_clie.arr,ciudad.arr,nombre_muni.arr,direccion.arr,fmtnum("zzz,zzz,zz9",cadena,r_t2),fmtnum("zzz,zzz,zz9",cadena3,r_t3));
          con_lin++;
   }
   sprintf(cadena,"%8.2f",valor_total);
   sprintf(cadena3,"%8.2f",total_iva);
   fprintf(fp,"\n%98s %15s %15s\n","Total Valor ",fmtnum("zz,zzz,zzz,zz9",cadena,r_t),fmtnum("zz,zzz,zzz,zz9",cadena3,r_t3));
   cierre_impresora();

   EXEC SQL CLOSE C3;

   EXEC SQL COMMIT WORK RELEASE;

   exit   (0);
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
 con_pag++;
 if (!strcmp(codigo_emp.arr,"3"))
     strcpy(nomb_emp.arr,"");
 fprintf(fp,"%s%s%s%s%s\n\n",salte_pagina,diezcpi,ancho_on,nomb_emp.arr,ancho_off);
 fprintf(fp,"%s%s%30s%d\n\n",condensado_on,"VENTAS POR CLIENTE PARA LA DIAN","Pagina ",con_pag);
 strful(cadena,(int)(90-strlen(fechas))/2,' ');
 fprintf(fp,"%s%s\n\n",cadena,fechas);
 fprintf(fp,"%s\n","     NIT        NOMBRE   DEL   CLIENTE                   CIU MUNICIPIO           DIRECCION                                             VALOR");
 con_lin = 7;
}
