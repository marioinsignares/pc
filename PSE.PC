/*****************************************************************
* RESUFAC.C  Version 1.0 - Rev 1.2 - Sep. 16/91.
*
* resufac.c Programa de facturacion para listar las facturacion de la quincena
*
* Uso : resufac numero_quincena device copias userid/password
*
* Martin A. Toloza L. Creado Enero 14-1998.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

double redondo();
void lista_empresa();
void saldos_fac();

				     /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
VARCHAR w_arch    [100];
VARCHAR fecha_ini [13];
VARCHAR fecha_fin [13];
VARCHAR saldos    [4];
                                 /* Facturas (C1) y (C6) */
VARCHAR codigo_cliente [14];
VARCHAR id_unico_pago[31];
VARCHAR id_cliente[21];
VARCHAR valor_con_iva[21];
VARCHAR valor_iva[21];
VARCHAR concepto[81];
VARCHAR fecha_vencimiento[11];
VARCHAR email[71];
VARCHAR clave_pago[21];
VARCHAR nombre[51]; 
VARCHAR apellido[51];
VARCHAR telefono[51];
VARCHAR campo_opcional1[71];
VARCHAR campo_opcional2[71];
VARCHAR campo_opcional3[71];
int     codigo_nit;

VARCHAR codigo_emp     [5];
                                 /* Control_fac (C4) */
EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
                                            /* Variables globales del usuario */
char *fmtnum(), r_t[100];
int	staora = 0;
FILE    *fp1;
char    copias[6];

void main(argc, argv)
int     argc;
char    *argv[];
{
char    device[10];
int	status = 0;

if (argc < 8)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : pse codigo_emp device copias fecha_ini fecha_fin archivo saldos(S/N) userid/password\n");
    printf ("      device : t salida por terminal\n");
    printf ("               Px salida por impresora (x nro printer)\n");
    printf ("               userid/password nombre usuario y password\n");
    printf ("archivo: nombre archivo con toda su rura ");
    exit (1);
   }

strcpy (codigo_emp.arr, argv[1]);
codigo_emp.len = strlen(codigo_emp.arr);
strcpy (device,        argv[2]);
strlow (device);
strcpy (copias,        argv[3]);
strcpy (fecha_ini.arr, argv[4]);
fecha_ini.len     =   strlen(fecha_ini.arr);
strcpy (fecha_fin.arr, argv[5]);
fecha_fin.len     =   strlen(fecha_fin.arr);
strcpy (w_arch.arr,    argv[6]);
w_arch.len = strlen(w_arch.arr);
strcpy (saldos.arr,    argv[7]);
saldos.len = strlen(saldos.arr);

if (!strpos ("/", argv[8]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,   argv[8]);
uid.len   =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

if (!strcmp(saldos.arr,"S")) {

// printf("%s",saldos.arr); getchar();
//        to_char(f.fecha_vencmto,'DD/MM/YYYY') as Fecha_vencimiento, 

 EXEC SQL DECLARE C2 CURSOR FOR
 select f.numero_factura as id_unico_pago,
        f.codigo_cliente as id_cliente,
        fm.saldo as Valor_con_iva,
        f.valor_iva as Valor_iva,
        DECODE(f.tipo_documento,'F','FACTURA A CREDITO','ND','NOTA DEBITO','C','FACTURA CONTADO','DOCUMENTO ERRADO ***') AS Concepto,
        to_char(to_date(20181231,'yyyymmdd'),'DD/MM/YYYY') as Fecha_vencimiento, 
        ' ' as Email, 
        ' ' as Clave_pago,
        substr(n.nombre,1,50) as Nombre,
        nvl(n.nombre_muni,ci.nombre) as Apellido,
        ' ' as Telefono,
        'FECHA EXPEDICION DEL DOCUMENTO '||trim(to_char(f.fecha_documento,'DD/MM/YYYY')) as Campo_opcional1,
        'VALOR INICIAL DEL DOCUMENTO '||trim(to_char(f.valor_neto,'999,999,999,999')) as Campo_opcional2,
        ' ' as Campo_opcional3,
        n.codigo_nit
 from   facturas f, facturam fm, clientes c, nits n, ciudades ci
 where  f.tipo_factura   = to_number(:codigo_emp)   and
        f.tipo_factura   = fm.tipo_factura    and
        f.tipo_documento = fm.tipo_documento  and
        f.numero_factura = fm.numero_factura  and
        f.estado_factura = 0                  and
//        nvl(f.contado,'0') != 'C'             and
        fm.saldo         > 0                  and
        fm.ano_mes       =
             (select max(ano_mes)
              from facturam fm2
              where fm2.tipo_factura   = f.tipo_factura   and
                    fm2.tipo_documento = f.tipo_documento and
                    fm2.numero_factura = f.numero_factura and
                    fm2.ano_mes       <= to_number(substr(:fecha_fin,1,6)) and
                    fm2.ano_mes       >= 200209) and
       c.codigo_cliente = f.codigo_cliente and
       n.codigo_nit    = c.codigo_nit and
       substr(c.codigo_cliente,1,2) = ci.codigo and
       nvl(pse,0) = 0 and
       not exists
              (select 'x'
               from   clienser
               where  c.codigo_cliente = codigo_cliente)
 order by f.fecha_documento, f.numero_factura;

 EXEC SQL OPEN C2;
}
else {
//        to_char(f.fecha_vencmto,'DD/MM/YYYY') as Fecha_vencimiento, 

 EXEC SQL DECLARE C1 CURSOR FOR
 select f.numero_factura as id_unico_pago,
        f.codigo_cliente as id_cliente,
        (f.valor_neto-f.valor_pagos) as Valor_con_iva,
        f.valor_iva as Valor_iva,
        DECODE(f.tipo_documento,'F','FACTURA A CREDITO','ND','NOTA DEBITO','C','FACTURA CONTADO','DOCUMENTO ERRADO ***') AS Concepto,
        to_char(f.fecha_documento+120,'DD/MM/YYYY') as Fecha_vencimiento, 
        ' ' as Email, 
        ' ' as Clave_pago,
        substr(n.nombre,1,50) as Nombre,
        nvl(n.nombre_muni,ci.nombre) as Apellido,
        ' ' as Telefono,
        'FECHA EXPEDICION DEL DOCUMENTO '||trim(to_char(f.fecha_documento,'DD/MM/YYYY')) as Campo_opcional1,
        'VALOR INICIAL DEL DOCUMENTO '||trim(to_char(f.valor_neto,'999,999,999,999')) as Campo_opcional2,
        ' ' as Campo_opcional3,
        n.codigo_nit
 from facturas f, clientes c, nits n, ciudades ci
 where to_number(:codigo_emp) = f.tipo_factura         and
       f.tipo_documento       IN ('F','ND','C')        and
       to_number(to_char(f.fecha_documento,'yyyymmdd')) >= :fecha_ini and
       to_number(to_char(f.fecha_documento,'yyyymmdd')) <= :fecha_fin and
       (f.valor_neto - f.valor_pagos) > 0 and
       c.codigo_cliente = f.codigo_cliente and
       n.codigo_nit     = c.codigo_nit and
       substr(c.codigo_cliente,1,2) = ci.codigo and
       nvl(pse,0) = 0
 order by f.fecha_documento, f.numero_factura;

 EXEC SQL OPEN C1;

}

 EXEC SQL DECLARE C3 CURSOR FOR
      select numero 
      from telefonos
      where codigo_nit = :codigo_nit
      order by orden;

 EXEC SQL DECLARE C4 CURSOR FOR
      select direccion
      from mail
      where codigo_nit = :codigo_nit;

 if ((fp1 = fopen(w_arch.arr, "w")) == NULL) {
     fprintf (stderr,"Error abriendo archivo pipe \n");
     exit (1);
 }
 lista_empresa();
 fclose(fp1);

 EXEC SQL COMMIT WORK RELEASE;
 if (!strcmp(saldos.arr,"S")) {
     EXEC SQL CLOSE C1;
 } 
 else {
     EXEC SQL CLOSE C2;
 }
 cierre_impresora();
 exit   (0);
}

void lista_empresa()
{

 staora  = 0;

if (!strcmp(saldos.arr,"S")) {

      EXEC SQL FETCH C2 INTO 
                        :id_unico_pago,
                        :id_cliente,
                        :valor_con_iva,
                        :valor_iva,
                        :concepto,
                        :fecha_vencimiento, 
                        :email, 
                        :clave_pago,
                        :nombre,
                        :apellido,
                        :telefono,
                        :campo_opcional1,
                        :campo_opcional2,
                        :campo_opcional3,
                        :codigo_nit;
}
else {

 EXEC SQL FETCH C1 INTO :id_unico_pago,
                        :id_cliente,
                        :valor_con_iva,
                        :valor_iva,
                        :concepto,
                        :fecha_vencimiento, 
                        :email, 
                        :clave_pago,
                        :nombre,
                        :apellido,
                        :telefono,
                        :campo_opcional1,
                        :campo_opcional2,
                        :campo_opcional3,
                        :codigo_nit;
}                        

 staora  = sqlca.sqlcode;

 if (staora == -1405) {
    staora = 0;
 }
 if (staora) {
    fprintf (stderr, "Error leyendo C1 (%d)\n", staora);
    exit   (1);
 }

 while (staora == 0) {

      id_unico_pago.arr     [id_unico_pago.len]     = '\0';
      id_cliente.arr        [id_cliente.len]        = '\0';
      valor_con_iva.arr     [valor_con_iva.len]     = '\0';
      valor_iva.arr         [valor_iva.len]         = '\0';
      concepto.arr          [concepto.len]          = '\0';
      fecha_vencimiento.arr [fecha_vencimiento.len] = '\0';
      email.arr             [email.len]             = '\0'; 
      clave_pago.arr        [clave_pago.len]        = '\0';
      nombre.arr            [nombre.len]            = '\0';
      apellido.arr          [apellido.len]          = '\0';
      telefono.arr          [telefono.len]          = '\0';
      campo_opcional1.arr   [campo_opcional1.len]   = '\0';
      campo_opcional2.arr   [campo_opcional2.len]   = '\0';
      campo_opcional3.arr   [campo_opcional3.len]   = '\0';

      EXEC SQL OPEN C3;
      EXEC SQL FETCH C3 INTO :telefono;
      telefono.arr          [telefono.len]          = '\0';
      EXEC SQL CLOSE C3;
/*
      EXEC SQL OPEN C4;
      EXEC SQL FETCH C4 INTO :email;
      email.arr             [email.len]             = '\0'; 
      EXEC SQL CLOSE C4;
*/      
      saldos_fac();

if (!strcmp(saldos.arr,"S")) {

      EXEC SQL FETCH C2 INTO 
                        :id_unico_pago,
                        :id_cliente,
                        :valor_con_iva,
                        :valor_iva,
                        :concepto,
                        :fecha_vencimiento, 
                        :email, 
                        :clave_pago,
                        :nombre,
                        :apellido,
                        :telefono,
                        :campo_opcional1,
                        :campo_opcional2,
                        :campo_opcional3,
                        :codigo_nit;
}                        
else {

      EXEC SQL FETCH C1 INTO 
                        :id_unico_pago,
                        :id_cliente,
                        :valor_con_iva,
                        :valor_iva,
                        :concepto,
                        :fecha_vencimiento, 
                        :email, 
                        :clave_pago,
                        :nombre,
                        :apellido,
                        :telefono,
                        :campo_opcional1,
                        :campo_opcional2,
                        :campo_opcional3,
                        :codigo_nit;
}
      staora  = sqlca.sqlcode;
//      printf("stado = %d, %s, %s, %s",staora,id_cliente.arr,id_unico_pago.arr,campo_opcional1.arr); getchar();
//      if (staora ==  1403) break;
      if (staora == -1405)
          staora  = 0;
      else if (staora)
               fprintf (stderr, "Error leyendo C1 (%d)\n", staora);

 }
}

void saldos_fac()
{

    fprintf(fp1,"%s|",id_unico_pago.arr);
    fprintf(fp1,"%s|",id_cliente.arr);
    fprintf(fp1,"%s|",valor_con_iva.arr);
    fprintf(fp1,"%s|",valor_iva.arr);
    fprintf(fp1,"%s|",concepto.arr);
    fprintf(fp1,"%s|",fecha_vencimiento.arr);
    fprintf(fp1,"%s|",email.arr);
    fprintf(fp1,"%s|",clave_pago.arr);
    fprintf(fp1,"%s|",nombre.arr);
    fprintf(fp1,"%s|",apellido.arr);
    fprintf(fp1,"%s|",telefono.arr);
    fprintf(fp1,"%s|",campo_opcional1.arr);
    fprintf(fp1,"%s|",campo_opcional2.arr);
    fprintf(fp1,"%s\n",campo_opcional3.arr);
    
    EXEC SQL 
    UPDATE FACTURAS
    SET PSE = 0
    WHERE CODIGO_CLIENTE = :id_cliente    AND
          NUMERO_FACTURA = :id_unico_pago AND
          TIPO_FACTURA   = :codigo_emp    AND
          TIPO_DOCUMENTO = DECODE(:concepto,'FACTURA A CREDITO','F','NOTA DEBITO','ND','FACTURA CONTADO','C','X') AND
          NVL(PSE,0) = 0;
}
