/*****************************************************************
* NOMLINOV  Version 1.0 - Rev 1.2 - Feb. 11/99.
*
* nomlinov.c Programa de liquidaci¢n de novedades
*
* Uso : nomlinov codigo_emp device copias userid/password
*
* Mario E. Santiago I. Creado Febrero 11-2000.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

double redondo();
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
VARCHAR codigo_emp     [5];
VARCHAR nomb_emp       [50];
VARCHAR fecha_has      [20];
VARCHAR fecha_des      [20];
VARCHAR ctacte         [20];
VARCHAR estado_lab     [2];
double  sueldoact;
int     codigo_nit;
int     codigo;
int     concepto;
int     clase_pd;
int     horas;
double  nit;
VARCHAR nombre         [50];
double  sueldo;
double  valor_noved;

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;

char *fmtnum(), r_t[100];
int     con_pag;                                   /* Contador de Paginas */
int     con_lin=66;                                /* Contador de Lineas  */
char    copias[6];

int	staora = 0;
char    formas[5];
char    fechas[100];
char    fecha[30];
char    cadena[100];
char    cadena2[100];
char    aestado[2][8];
int     dias;
int     diasinc;
double  basico;
double  transp;
double  otrosp;
double  otrosd;
double  iss;
double  prestamo;
double  totalp;
double  totald;
double  totbasico;
double  tottransp;
double  tototrosp;
double  tottotalp;
double  totiss;
double  totprestamo;
double  tototrosd;
double  tottotald;
double  totneto;
double  neto;
int     nconta;

void lista_empresa();
void empresa();
void titulos();
void totalnov();
void acumule_nov();

void main(argc, argv)
int     argc;
char    *argv[];
{
char    device[10];
int     status = 0;

if (argc < 5)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : nomlinov codigo_emp device copias userid/password\n");
    printf ("      device : t salida por terminal\n");
    printf ("               Px salida por impresora (x nro printer)\n");
    printf ("               userid/password nombre usuario y password\n");
    exit (1);
   }

strcpy (codigo_emp.arr, argv[1]);
codigo_emp.len = strlen(codigo_emp.arr);
strcpy (device,             argv[2]);
strlow (device);
strcpy (copias,             argv[3]);

if (!strpos ("/", argv[4]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,   argv[4]);
uid.len   =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

 EXEC SQL DECLARE C1 CURSOR FOR
       select e.codigo, n.codigo_nit, n.nit, n.nombre, e.basico,
              e.ctacte, e.estado_lab
       from   nomemple e, nits n
       where  e.codigo_nit    = n.codigo_nit     and
              e.estado_lab    <> 'R'             and
              e.codigo_emp    = :codigo_emp
       order by e.codigo;

 EXEC SQL DECLARE C2 CURSOR FOR
       select v.concepto, v.clase_pd, v.horas, round(v.valor_noved,0)
       from   nomnoved v, nits n, nomfijos f
       where  n.codigo_nit    = :codigo_nit      and
              f.codigo_emp    = v.codigo_emp     and
              v.fecha_has     = f.fecha_has      and
              v.codigo_emp    = :codigo_emp      and
              v.codigo        = :codigo
       order by v.clase_pd, v.concepto;

 EXEC SQL OPEN C1;
 empresa();
 lista_empresa();
 EXEC SQL COMMIT WORK RELEASE;
 EXEC SQL CLOSE C1;

 cierre_impresora();
 exit   (0);
}

void lista_empresa()
{

 strcpy(fecha,fecha_des.arr);
 fecha_oracle(fecha);
 strcpy(cadena,fecha);
 strcat(cadena," hasta ");
 strcpy(fecha,fecha_has.arr);
 fecha_oracle(fecha);
 strcat(cadena,fecha);
 strcpy(fechas,cadena);
 titulos();

 staora  = 0;

 EXEC SQL FETCH C1 INTO :codigo, :codigo_nit, :nit, :nombre, :sueldo,
                        :ctacte, :estado_lab;

 staora  = sqlca.sqlcode;

 if (staora == -1405) {
    staora = 0;
 }
 if (staora) {
    fprintf (stderr, "Error leyendo C1 (%d)\n", staora);
    exit   (1);
 }
 nombre.arr      [nombre.len]     = '\0';
 ctacte.arr      [ctacte.len]     = '\0';
 estado_lab.arr  [estado_lab.len] = '\0';

 while (staora == 0) {
/*    fprintf (stderr, "Leyendo C1 codigo=(%d) codigo_nit(%d) staora(%d)\n", codigo, codigo_nit, staora); getchar(); */
      sprintf(cadena,"%12.0f",nit);
      strcpy(cadena2,nombre.arr);
      strorg(cadena2,1,19);
      fprintf(fp,"%10s %-19s",fmtnum("zz,zzz,zz9",cadena,r_t), cadena2);
      sprintf(cadena,"%12.0f",sueldo);
      fprintf(fp," %10s",fmtnum("zz,zzz,zz9",cadena,r_t));
      EXEC SQL OPEN C2;
      EXEC SQL FETCH C2 INTO :concepto, :clase_pd, :horas, :valor_noved;

      staora  = sqlca.sqlcode;
      if (staora) {
         fprintf (stderr, "Error leyendo C2 (%d) (%d) (%d)\n", codigo, codigo_nit, staora);
      }
      while (staora == 0) {
            acumule_nov();
      }
      totalnov();
      EXEC SQL CLOSE C2;
      fprintf(fp," %14s",ctacte.arr);
      if (!strcmp(estado_lab.arr,"I"))
          fprintf(fp," %6s","INCAPACI");
      else {
           if (!strcmp(estado_lab.arr,"V"))
              fprintf(fp," %6s","VACACION");
           else
              fprintf(fp," %2s %d","  ",codigo);
      }
      fprintf(fp,"\n");
      diasinc = dias   = 0;
      iss     = basico = transp  = otrosp = otrosd = prestamo = 0;
      EXEC SQL FETCH C1 INTO :codigo, :codigo_nit, :nit, :nombre, :sueldo,
                             :ctacte, :estado_lab;
      nombre.arr      [nombre.len]     = '\0';
      ctacte.arr      [ctacte.len]     = '\0';
      estado_lab.arr  [estado_lab.len] = '\0';

      staora  = sqlca.sqlcode;
      if (staora ==  1403) break;
      if (staora == -1405)
          staora  = 0;
      else if (staora)
               fprintf (stderr, "Error leyendo C1 (%d)\n", staora);
 }
 neto = 0;

 fprintf(fp,"\n %s%30s",enfatizado_on,"Totales =====>");
 sprintf(cadena,"%10.0f",totbasico);
 fprintf(fp," %28s",fmtnum("zz,zzz,zz9",cadena,r_t));
 sprintf(cadena,"%8.0f",tottransp);
 fprintf(fp," %8s",fmtnum("zzz,zz9",cadena,r_t));
 sprintf(cadena,"%9.0f",tototrosp);
 fprintf(fp," %9s",fmtnum("z,zzz,zz9",cadena,r_t));
 sprintf(cadena,"%10.0f",tottotalp);
 fprintf(fp," %10s",fmtnum("zz,zzz,zz9",cadena,r_t));
 sprintf(cadena,"%9.0f",totiss);
 fprintf(fp," %9s",fmtnum("z,zzz,zz9",cadena,r_t));
 sprintf(cadena,"%9.0f",totprestamo);
 fprintf(fp," %9s",fmtnum("z,zzz,zz9",cadena,r_t));
 sprintf(cadena,"%7.0f",tototrosd);
 fprintf(fp," %7s", fmtnum("zzz,zz9",cadena,r_t));
 sprintf(cadena,"%9.0f",tottotald);
 fprintf(fp," %9s",fmtnum("z,zzz,zz9",cadena,r_t));
 sprintf(cadena,"%10.0f",totneto);
 fprintf(fp," %10s%s\n",fmtnum("zz,zzz,zz9",cadena,r_t),enfatizado_off);
 con_lin+=1;

}

void empresa()
{

 EXEC SQL select n.nombre, f.fecha_des, f.fecha_has
          into  :nomb_emp, :fecha_des, :fecha_has
          from   empresas e, nits n, nomfijos f
          where  e.codigo_nit = n.codigo_nit and
                 f.codigo_emp = e.codigo_emp and
                 e.codigo_emp = :codigo_emp;

 if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
     fprintf (stderr, "Error leyendo Empresa(C5) (%d)\n", sqlca.sqlcode);

 nomb_emp.arr   [nomb_emp.len] = '\0';
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/


void titulos()
{
 con_pag++;
 fprintf(fp,"%s",salte_pagina);
 strful(cadena,(int)(42-strlen(nomb_emp.arr))/2,' ');
 fprintf(fp,"%s%s%s%s%s\n\n",diezcpi,ancho_on,cadena,nomb_emp.arr,ancho_off);
 fprintf(fp,"%s%s%s%44s",diezcpi,condensado_on,ancho_on,"LIQUIDACION DE NOVEDADES");
 fprintf(fp,"%s%s%17s %d\n\n",ancho_off,diezcpi,"PAGINA ",con_pag);
 strorg(fechas,1,strlen(fechas));
 fprintf(fp,"%s%62s%s\n\n",enfatizado_on,fechas,enfatizado_off);
 fprintf(fp,"%s%s%s%s\n\n",elite,enfatizado_on,"CEDULA     NOMBRE                 MENSUAL DI. DIAS    PRIMAS  TRANSP.     OTROS      TOTAL    I.S.S. PRESTAMOS   OTROS     TOTAL       NETO CTA-AHORRO    FIRMA",enfatizado_off);
 con_lin = 10;
}

void acumule_nov()
{
 while (staora == 0) {
      if (con_lin > 60)
         titulos();

      if (clase_pd == 1) {
         if (concepto == 1 || concepto == 2) {
            if (concepto != 15)
               dias = dias + horas / 8;
            else {
               dias = horas;
            }
            basico  = basico + valor_noved;
         }
         else {
            if (concepto == 12)
                   transp = transp + valor_noved;
            else if (concepto == 15)
                   basico = basico + valor_noved;
            else
                   otrosp = otrosp + valor_noved;
         }
      }
      else {
         if (concepto == 32)
            iss = iss + valor_noved;
         else {
            if (concepto == 26)
                prestamo = prestamo + valor_noved;
            else
                otrosd = otrosd + valor_noved;
         }
      }

      EXEC SQL FETCH C2 INTO :concepto, :clase_pd, :horas, :valor_noved;

      staora  = sqlca.sqlcode;
      if (staora ==  1403) break;
      if (staora == -1405)
          staora  = 0;
      else if (staora)
               fprintf (stderr, "Error leyendo C2 (%d)\n", staora);

 }
}

void totalnov()
{
 totalp = basico + transp + otrosp;
 totald = iss    + prestamo + otrosd;
 neto   = totalp - totald;

 fprintf(fp," %3d %3d",diasinc,dias);
 sprintf(cadena,"%10.0f",basico);
 fprintf(fp," %10s",fmtnum("zz,zzz,zz9",cadena,r_t));
 sprintf(cadena,"%10.0f",transp);
 fprintf(fp," %8s",fmtnum("zzz,zz9",cadena,r_t));
 sprintf(cadena,"%9.0f",otrosp);
 fprintf(fp," %9s",fmtnum("z,zzz,zz9",cadena,r_t));
 sprintf(cadena,"%10.0f",totalp);
 fprintf(fp," %10s",fmtnum("zz,zzz,zz9",cadena,r_t));
 sprintf(cadena,"%9.0f",iss);
 fprintf(fp," %9s",fmtnum("z,zzz,zz9",cadena,r_t));
 sprintf(cadena,"%9.0f",prestamo);
 fprintf(fp," %9s",fmtnum("z,zzz,zz9",cadena,r_t));
 sprintf(cadena,"%7.0f",otrosd);
 fprintf(fp," %7s",fmtnum("zzz,zz9",cadena,r_t));
 sprintf(cadena,"%9.0f",totald);
 fprintf(fp," %9s",fmtnum("z,zzz,zz9",cadena,r_t));
 sprintf(cadena,"%9.0f",neto);
 fprintf(fp," %10s",fmtnum("zz,zzz,zz9",cadena,r_t));
 con_lin+=1;

 totbasico   = totbasico   + basico;
 tottransp   = tottransp   + transp;
 tototrosp   = tototrosp   + otrosp;
 tottotalp   = tottotalp   + totalp;
 totiss      = totiss      + iss;
 totprestamo = totprestamo + prestamo;
 tototrosd   = tototrosd   + otrosd;
 tottotald   = tottotald   + totald;
 totneto     = totneto     + neto;
}
