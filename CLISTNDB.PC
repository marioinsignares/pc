/*****************************************************************
* CLISTNDB.C Version 1.0 - Rev 1.2 - Oct. 9/92.
*
* clistndb.c. Listado de La relacion de notas credito.
*
* Uso : clistndb codigo_emp fecha_inicial fecha_final device userid/password
*
* Mario E. Santiago I. Creado Octubre-09-1992.
* Teodoro Tarud & Cia Ltda.
*
*/
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

void titulos();
void lista_notas();
void fecha_oracle3();
				     /* Parametros de comunicacion con ORACLE */

EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100]; 
VARCHAR codigo_emp[3];
VARCHAR codigo_nita[6];
VARCHAR codigo_cliente[6];
double  nit;
double  codigo_nit;
double  valor_cartera;
float   numero;
double  fecha;
VARCHAR nomb_clie[51];
VARCHAR nomb_emp [51];
VARCHAR fecha_ini[20];
VARCHAR fecha_fin[20];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;

                                            /* Variables globales del usuario */
int     con_pag=0;                                   /* Contador de Paginas */
int     con_lin=66;                                   /* Contador de Lineas  */
int     cl;
int     oraest;
        		                /* Variables de recepcion para datos */
char *fmtnum(), r_t[100];
double  tot_cartera;
char    fechas [70];
char    cadena [100];
char    cadena2[100];
char    wcadena[100];

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

    if (argc < 6)
       {
	printf ("Incorrecta invocacion:\n");
        printf ("Uso : clistndb codigo_emp fecha_ini fecha_fin\n");
        printf ("      device userid/password\n");
	printf ("      device : t salida por terminal\n");
	printf ("      device : s salida standar     \n");
	printf ("               Px salida por impresora (x nro printer)\n");
	printf ("               userid/password nombre usuario y password\n");
        exit (1);
       }

       strcpy (codigo_emp.arr, argv[1]);
       codigo_emp.len =        strlen(codigo_emp.arr);
       strcpy (fecha_ini.arr,  argv[2]);
       fecha_ini.len =         strlen(fecha_ini.arr);
       strcpy (fecha_fin.arr,  argv[3]);
       fecha_fin.len =         strlen(fecha_fin.arr);
       if ( strlen(fecha_ini.arr) != 8 || strlen(fecha_fin.arr) != 8 ) {
          printf("Error, la fecha debe ser de 8 digitos y formato AAAAMMDD");
          exit (1);
       }
       strcpy (device,         argv[4]);
       strlow (device);

    if (!strpos ("/", argv[5]))
       {
        printf ("user id/password incorrecto.\n");
	exit (1);
       }

    strcpy (uid.arr,    argv[5]);
    uid.len   =         strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora("1");

/*****************************************************
 * Crea o Abre un cursor en area de datos. (oopen)   *
 *****************************************************/
    /* C1 */
    EXEC SQL DECLARE C1 CURSOR FOR
        select numero_factura, to_number(to_char(fecha_documento,'yyyymmdd')),
               codigo_cliente, nvl(valor_neto,0)
	from   facturas\
        where  tipo_factura     = to_number(:codigo_emp)           and
               tipo_documento   = 'ND'                             and
               fecha_documento >= to_date((:fecha_ini),'yyyymmdd') and
               fecha_documento <= to_date((:fecha_fin),'yyyymmdd') and
               contado        is null                              and
               estado_factura   = 0
        order by numero_factura;
               
    EXEC SQL OPEN C1;
               
/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/
    strcpy(cadena2,fecha_ini.arr);
    strcpy(wcadena, cadena2);
    fecha_oracle3(wcadena);
    strcpy(cadena, wcadena);
    strcat(cadena," hasta ");
    strcpy(cadena2,fecha_fin.arr);
    strcpy(wcadena, cadena2);
    fecha_oracle3(wcadena);
    strcat(cadena, wcadena);
    strcpy(fechas,cadena);

    /* C3 */
    EXEC SQL select nombre
             into  :nomb_emp
	     from   empresas, nits
             where  nits.codigo_nit     = empresas.codigo_nit and
                    empresas.codigo_emp = :codigo_emp;

    nomb_emp.arr      [nomb_emp.len]     = '\0';
    if (sqlca.sqlcode) 
       fprintf(stderr,"Error C3 (%d) en empresa \n",sqlca.sqlcode);

    oraest  = 0;
    while (oraest == 0) {
   
           EXEC SQL FETCH C1 INTO :numero, :fecha,  :codigo_cliente,
                                  :valor_cartera;
           oraest  = sqlca.sqlcode;
           if (sqlca.sqlcode == 1403) break;

           if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) 
               fprintf (stderr, "Error leyendo C1 (%d)\n", sqlca.sqlcode);

           codigo_cliente.arr      [codigo_cliente.len]     = '\0';
    
           lista_notas();
    } 
    sprintf(cadena,"%9.2f",tot_cartera);
    if (tot_cartera > 0) {
        sprintf(cadena,"%9.2f",tot_cartera);
        fprintf(fp,"\n%88s%18s\r","TOTAL............. ",fmtnum("$zz,zzz,zz9.99",cadena,r_t));
    }

    cierre_impresora();

/************************************************
 * Desconectarse de ORACLE.                     *
 ************************************************/

    EXEC SQL CLOSE C1;
    EXEC SQL COMMIT WORK RELEASE;
    exit   (0);
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
 con_pag++;
 if (!strcmp(codigo_emp.arr,"3"))
    strcpy(nomb_emp.arr," ");
 fprintf(fp,"%s",salte_pagina);
 strful(cadena,(int)(42-strlen(nomb_emp.arr))/2,' ');
 fprintf(fp,"%s%s%s%s%s\n\n",diezcpi,ancho_on,cadena,nomb_emp.arr,ancho_off);
 fprintf(fp,"%s%s%s%43s",diezcpi,condensado_on,ancho_on,"LISTADO DE NOTAS DEBITO");
 fprintf(fp,"%s%s%17s %d\n\n",ancho_off,diezcpi,"PAGINA ",con_pag);
 strorg(fechas,1,strlen(fechas));
 fprintf(fp,"%s%62s%s\n\n",enfatizado_on,fechas,enfatizado_off);
 fprintf(fp,"%s%s%11s%15s%-45s%19s\n",condensado_on,"NOTA DEBITO ","FECHA","CODIGO","     NOMBRE DEL CLIENTE","VALOR");
 fprintf(fp,"%11s%93s\n\n","NUMERO","DEBITO ");
 con_lin = 8;
}

void lista_notas()
{
 if (con_lin > 60)
    titulos();
 /* C2 */
 EXEC SQL select nombre
          into  :nomb_clie
	  from   nits, clientes
          where  nits.codigo_nit = clientes.codigo_nit and
                 codigo_cliente  = :codigo_cliente;

 if (sqlca.sqlcode) 
     fprintf(stderr,"Error C2 (%d) en cliente (%s) \n",sqlca.sqlcode,
                     codigo_nita.arr);
 nomb_clie.arr      [nomb_clie.len]     = '\0';

 fprintf(fp,"  %6.0f    ",numero);
 sprintf(cadena,"%8.0f",fecha);
 fprintf(fp,"%12s",fmtnum("9999-99-99",cadena,r_t));
 fprintf(fp,"%14s     ",codigo_cliente.arr);
 fprintf(fp,"%-45s",nomb_clie.arr);
 sprintf(cadena,"%9.2f",valor_cartera);
 fprintf(fp,"%18s\n",fmtnum("zz,zzz,zz9.99",cadena,r_t));
 tot_cartera+=valor_cartera;
 con_lin+=1;
}
