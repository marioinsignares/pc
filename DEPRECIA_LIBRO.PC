/*****************************************************************
* DEPRECIA.C Version 1.0 - Rev 1.2 - Nov. 30/97.
*
* deprecia.c. Apropiacion para Depreciaciones.
*
* Uso: deprecia codigo_emp aamm device copias userid/password\n");
*
* Martin A. Toloza L. Creado en Noviembre 27 de 1.997.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <setjmp.h>
#include <stdlib.h>
#include <math.h>

double redondo();
void hacer_asiento();
void ver_inf();


EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
                                 /* Empresa (C1) */
VARCHAR nomb_emp    [51];
double  nit;
int     digito;
VARCHAR codigo_emp  [3];
                                 /* Infacu (C2) */
VARCHAR vecinf      [20][14];
                                 /* Movto_C (C3) */
VARCHAR ano_mesf    [20];
VARCHAR comprobanteb[07];
VARCHAR libro[4];
VARCHAR consecutivob[07];
VARCHAR fechab      [20];
                                 /* Movto_D (C4) */
VARCHAR secuenciab  [7];
VARCHAR cuentab     [15];
VARCHAR infa        [14];
VARCHAR infb        [14];
VARCHAR infc        [14];
VARCHAR infd        [14];
VARCHAR codigo_nitb [6];
VARCHAR cuenta      [15];
VARCHAR valor_debb  [15];
VARCHAR valor_creb  [15];
char    inf         [5][14];
                                 /* Control_Mes (C5) */
double  consecutivo;
VARCHAR fuenteb     [3];
double  consecutivo13;
                                 /* Acumulados (C6) */
VARCHAR cuenta_db   [15];
VARCHAR cuenta_cr   [15];
VARCHAR cuenta_dba  [15];
VARCHAR cuenta_cra  [15];
double  valor;
double  valord;
VARCHAR fecha_astoa [20];
VARCHAR fecha_asto  [20];
float   ptaje;
float   ptajea;
VARCHAR codigo      [03];
VARCHAR codigoa     [03];
VARCHAR ano_mesi    [20];
VARCHAR ano_mes     [20];
VARCHAR codigox     [15];
                                 /* Plan (C8) */
VARCHAR veca        [14];
VARCHAR vecb        [14];
VARCHAR vecc        [14];
VARCHAR vecd        [14];
char    vecplan     [5][14];

/* sucursales y c.costo */

VARCHAR sucursal_aj[05];
VARCHAR cen_cos_aj [03];
VARCHAR sucursalb  [05];
VARCHAR cen_cosb   [03];
int     cuantos;

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
				     /* Parametros de comunicacion con ORACLE */
                                            /* Variables globales del usuario */
char    pagina[4];                                   /* Contador de Paginas */
int     con_pag=0;                                   /* Contador de Paginas */
int     con_lin=66;                                  /* Contador de Lineas  */
int     cl;
int     staora     =0;
int     traidos    =0;
int     num_ret    =0;
int     loop_2     =0;
double  secuencia  =0;
char    cuenta_ant[15];
        		                /* Variables de recepcion para datos */
char *fmtnum(), r_t[100];
double  nitn;
int     diai;
int     mesx, mesi, mesf;
int     anox, anoi, anof;
int     i, j, k;
double  valor_deb;
double  valor_cre;
char    cadena[100];
char    login[30];
char    copias[5];
int     codigo_nit;

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

    if (argc < 8)
       {
	printf ("Incorrecta invocacion:\n");
        printf ("Uso : codigo_emp aaaamm copias pagina device nro_cpbte libro(0=COLGAAP 1=IFRS) userid/password\n");
	printf ("      device : t salida por terminal\n");
	printf ("      device : s salida standar     \n");
	printf ("               Px salida por impresora (x nro printer)\n");
	printf ("               userid/password nombre usuario y password\n");
        exit (1);
       }
       strcpy (codigo_emp.arr, argv[1]);
       codigo_emp.len =        strlen(codigo_emp.arr);
       strcpy (copias,           argv[3]);
       strcpy (pagina,           argv[4]);
       strcpy (device,           argv[5]);
       strlow (device);
       strcpy (comprobanteb.arr, argv[6]);
       comprobanteb.len =        strlen(comprobanteb.arr);
       strcpy (libro.arr, argv[7]);
       libro.len =        strlen(libro.arr);

    if (!strpos ("/", argv[8]))
       {
        printf ("user id/password incorrecto.\n");
	exit (1);
       }

    strcpy (uid.arr,    argv[8]);
    uid.len =           strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/

    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/*********************************************
 * Procesar una sentencia SQL (oexec).       *
 *********************************************/
    strcpy (ano_mes.arr,   argv[2]);
    ano_mes.len = strlen(ano_mes.arr);
    strcpy (cadena,argv[2]);
    strorg (cadena,1,4);
    anoi         =        atoi(cadena);
    strcpy (cadena,argv[2]);
    strorg (cadena,5,2);
    mesi         =        atoi(cadena);
    sprintf (ano_mesi.arr,"%04d%02d",anoi-1,13);
    ano_mesi.len = strlen(ano_mesi.arr);

    anof=anoi;
    mesf=mesi+1;
    if (mesi==12) {
        sprintf (ano_mes.arr, "%d%02d",anoi,13);
        ano_mes.len  =        strlen(ano_mes.arr);
        sprintf (ano_mesi.arr,"%d%02d",anoi,13);
        ano_mesi.len =        strlen(ano_mesi.arr);
        anof=anoi+1;
        mesf=1;
    }
    sprintf (ano_mesf.arr,"%d%02d",anof,mesf);
    ano_mesf.len =       strlen(ano_mesf.arr);

    EXEC SQL select n.nombre, n.nit, n.digito
                    into :nomb_emp, :nit, :digito
             from   nits n, empresas e
             where  n.codigo_nit = e.codigo_nit and
                    e.codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Empresa (%d)\n", sqlca.sqlcode);

    EXEC SQL DECLARE C2 CURSOR FOR
             select inf
             from   infacu;

    EXEC SQL OPEN C2;

    staora  = 0;
    traidos = 0;
    num_ret = 0;
    while (staora == 0) {

          EXEC SQL FETCH C2 INTO :vecinf;

          if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
             fprintf (stderr, "Error leyendo C2 (%d)\n", sqlca.sqlcode);

          staora  = sqlca.sqlcode;
          traidos = sqlca.sqlerrd[2];

          for (loop_2 = 0; loop_2 < (traidos - num_ret); loop_2++) {
              vecinf[loop_2].arr  [vecinf[loop_2].len] = '\0';
          }
          num_ret = traidos;
    }
    k = traidos;
    EXEC SQL CLOSE C2;
//printf("ano_mes %s ano_mesi %s ano_mesf %s",ano_mes.arr,ano_mesi.arr,ano_mesf.arr); getchar();
    EXEC SQL DECLARE C6 CURSOR FOR
             select d.cuenta, cuenta_db||'01', cuenta_cr||'01',
                    sum(nvl(valor_deb,0)-nvl(valor_cre,0)),
                    last_day(to_date(:ano_mesf,'yyyymm')),
                    d.ptaje, d.codigo, a.sucursal, a.cen_cos
             from  acumulados a, deprecia d, plan p
             where a.codigo_emp = :codigo_emp                     and
                   a.ano_mes   >= :ano_mesi                       and
                   a.ano_mes   <= :ano_mes                        and
                   a.libro      = :libro                          and
                   a.codigo_emp = p.codigo_emp                    and
                   a.cuenta     = p.cuenta                        and
                   substr(p.cuenta,1,length(d.cuenta)) = d.cuenta and
                   p.nivel      = 4                               and
                   p.depreciar  = 1                               and
                   not exists (select 'x'
                               from  depreciano
                               where a.cuenta     = cuenta and
                                     a.codigo_emp = codigo_emp)
             group by d.cuenta, cuenta_db, cuenta_cr, d.ptaje, d.codigo, a.sucursal, a.cen_cos
             order by 1;

    EXEC SQL OPEN C6;

    hacer_asiento();

        secuencia++;

        sprintf(secuenciab.arr,"%6.0f",secuencia);
        secuenciab.len = strlen(secuenciab.arr);
        if (codigo_nit==0)
           strcpy(codigo_nitb.arr,"");
        else sprintf(codigo_nitb.arr,"%5d",codigo_nit);
        codigo_nitb.len = strlen(codigo_nitb.arr);
        if (valor<0) {
           valor=valor*-1;
        }
//        printf("\n2)valor=%f, ptaje=%f\n\n",valor,ptajea);
        valor=((valor*ptajea)/12)/100;
        valor=redondo(valor);
        if (valor> 0) {
           strcpy(cuentab.arr,cuenta_dba.arr);
           cuentab.len = strlen(cuentab.arr);
           strcpy(codigox.arr,cuentab.arr);
           codigox.len = strlen(codigox.arr);
           ver_inf();
           sprintf(valor_debb.arr,"%10.2f",valor);
           valor_debb.len = strlen(valor_debb.arr);
           valor_debb.len = strlen(valor_debb.arr);
           strcpy (valor_creb.arr,"");
           valor_creb.len = strlen(valor_creb.arr);
                                          /* Graba en movto_d el Debito (C4) */
           strcpy(sucursalb.arr,sucursal_aj.arr);
           sucursalb.len = strlen(sucursalb.arr);
           strcpy(cen_cosb.arr,cen_cos_aj.arr);
           cen_cosb.len = strlen(cen_cosb.arr);

//           printf ("2.1)Cuenta %s %s %s\n", cuentab.arr, valor_debb.arr, valor_creb.arr);
           EXEC SQL insert into movto_d
                    (codigo_emp, ano_mes, consecutivo, secuencia, cuenta, infa, infb, infc, infd, codigo_nit, valor_deb, valor_cre, sucursal, cen_cos, version, libro)
                    values(:codigo_emp, :ano_mesf, :consecutivob, :secuenciab,
                           :cuentab, :infa, :infb, :infc, :infd,
                           :codigo_nitb, :valor_debb, :valor_creb, :sucursalb, :cen_cosb, '0', :libro);

           if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
               fprintf (stderr, "Error Grabando Debito (%d)\n", sqlca.sqlcode);

           strcpy(cuentab.arr,cuenta_cra.arr);
           cuentab.len = strlen(cuentab.arr);
           strcpy(codigox.arr,cuentab.arr);
           codigox.len = strlen(codigox.arr);
           ver_inf();
           strcpy (valor_debb.arr,"");
           valor_debb.len = strlen(valor_debb.arr);
           sprintf(valor_creb.arr,"%10.2f",valor);
           valor_creb.len = strlen(valor_creb.arr);
           valor_creb.len = strlen(valor_creb.arr);
                                         /* Graba en movto_d el Credito (C4) */
           strcpy(sucursalb.arr,sucursal_aj.arr);
           sucursalb.len = strlen(sucursalb.arr);
           strcpy(cen_cosb.arr,cen_cos_aj.arr);
           cen_cosb.len = strlen(cen_cosb.arr);
           valor=0;

//           printf ("2.2)Cuenta %s %s %s\n", cuentab.arr, valor_debb.arr, valor_creb.arr);
           EXEC SQL insert into movto_d
                    (codigo_emp, ano_mes, consecutivo, secuencia, cuenta, infa, infb, infc, infd, codigo_nit, valor_deb, valor_cre, sucursal, cen_cos, version, libro)
                    values(:codigo_emp, :ano_mesf, :consecutivob, :secuenciab,
                           :cuentab, :infa, :infb, :infc, :infd,
                           :codigo_nitb, :valor_debb, :valor_creb, :sucursalb, :cen_cosb, '0', :libro);

        }

    cierre_impresora();

    EXEC SQL CLOSE C6;

  EXEC SQL COMMIT WORK RELEASE;
//    EXEC SQL ROLLBACK WORK RELEASE;

    exit   (0);
}

void hacer_asiento()
{
  strcpy(fuenteb.arr,"13");
  fuenteb.len = strlen(fuenteb.arr);

/* Lee consecutivo de control_mes Fte 13 Cns ultimo Asiento Aj x Depreciacion */
  EXEC SQL select consecutivo   into :consecutivo13
           from control_mes
           where fuente       = to_number(:fuenteb)       and
                 ano_mes      = to_number(:ano_mesf)      and
                 codigo_emp   = to_number(:codigo_emp);

  if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
      fprintf (stderr, "Error leyendo Control_Mes (%d)\n", sqlca.sqlcode);
  else {
        sprintf(consecutivob.arr,"%5.0f",consecutivo13);
        consecutivob.len = strlen(consecutivob.arr);

  EXEC SQL delete from movto_d
           where codigo_emp   = to_number(:codigo_emp)   and
                 ano_mes      = to_number(:ano_mesf)     and
                 consecutivo  = to_number(:consecutivob) and
                 libro        = to_number(:libro);

  if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
      fprintf (stderr, "Error leyendo Movto_D (%d)\n", sqlca.sqlcode);

  EXEC SQL select count(*) 
           into :cuantos
           from movto_d
           where codigo_emp   = to_number(:codigo_emp)   and
                 ano_mes      = to_number(:ano_mes)      and
                 consecutivo  = to_number(:consecutivob);

  if (sqlca.sqlcode == 1403 ) {
        EXEC SQL delete from movto_c
                 where codigo_emp   = to_number(:codigo_emp)   and
                       comprobante  = to_number(:comprobanteb) and
                       clase        = 'CD'                     and
                       tipo         = '5'                      and
                       ano_mes      = to_number(:ano_mesf);

        if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
            fprintf (stderr, "Error leyendo Movto_C (%d)\n", sqlca.sqlcode);

  }

  strcpy(fuenteb.arr,"08");
  fuenteb.len = strlen(fuenteb.arr);

  /* Lee consecutivo de Control_mes Fte 08 sgte consecutivo */

  EXEC SQL select consecutivo+1 into :consecutivo
           from control_mes
           where fuente       = to_number(:fuenteb)       and
                 ano_mes      = to_number(:ano_mesf)      and
                 codigo_emp   = to_number(:codigo_emp)
           for update of consecutivo;

  if (sqlca.sqlcode)
     {
      fprintf (stderr, "Error leyendo Control_Mes 08 (%d)\n", sqlca.sqlcode);
      consecutivo=1;
      sprintf(consecutivob.arr,"%5.0f",consecutivo);
      consecutivob.len = strlen(consecutivob.arr);
               /* Inserta en Control_Mes Fte 08 si no existe (C11) */
      EXEC SQL insert into control_mes
               (fuente, ano_mes, nombre, consecutivo, codigo_emp)
               values (:fuenteb, :ano_mesf, 'CONTROL DEPRECIACION',
                       :consecutivob, :codigo_emp);
     }
  else {
        sprintf(consecutivob.arr,"%5.0f",consecutivo);
        consecutivob.len = strlen(consecutivob.arr);
               /* Actualiza Cns de Fte 08 en control_mes (C12) */
        EXEC SQL update control_mes
                 set    consecutivo = :consecutivob
                 where codigo_emp   = to_number(:codigo_emp)    and
                       ano_mes      = to_number(:ano_mesf)      and
                       fuente       = :fuenteb;
  }

  strcpy(fuenteb.arr,"13");
  fuenteb.len = strlen(fuenteb.arr);

  EXEC SQL select consecutivo   into :consecutivo13
           from control_mes
           where fuente       = to_number(:fuenteb)       and
                 ano_mes      = to_number(:ano_mesf)      and
                 codigo_emp   = to_number(:codigo_emp)
           for update of consecutivo;

  if (sqlca.sqlcode)
     {
      fprintf (stderr, "Error leyendo Control_Mes 12 (%d)\n", sqlca.sqlcode);
               /* Inserta en Control_Mes Fte 13 si no existe (C11) */
      EXEC SQL insert into control_mes
               (fuente, ano_mes, nombre, consecutivo, codigo_emp)
               values (:fuenteb, :ano_mesf, 'CONTROL DEPRECIACION',
                       :consecutivob, :codigo_emp);
     }
  else {
               /* Actualiza Cns de Fte 13 en control_mes (C12) */
        EXEC SQL update control_mes
                 set    consecutivo = :consecutivob
                 where codigo_emp   = to_number(:codigo_emp)    and
                       ano_mes      = to_number(:ano_mesf)      and
                       fuente       = :fuenteb;
  }

  EXEC SQL FETCH C6 INTO :cuenta, :cuenta_db, :cuenta_cr, :valord, :fecha_asto,
                         :ptaje, :codigo, :sucursal_aj, :cen_cos_aj;
  fecha_asto.arr  [fecha_asto.len] = '\0';
  strcpy(fechab.arr,fecha_asto.arr);
  fechab.len = strlen(fechab.arr);

  cuenta.arr     [cuenta.len]     = '\0';
  cuenta_db.arr  [cuenta_db.len]  = '\0';
  cuenta_cr.arr  [cuenta_cr.len]  = '\0';
  fecha_asto.arr [fecha_asto.len] = '\0';
  codigo.arr     [codigo.len]     = '\0';
  sucursal_aj.arr[sucursal_aj.len]= '\0';
  cen_cos_aj.arr [cen_cos_aj.len] = '\0';

  strcpy(cuenta_ant,cuenta.arr);
  strcpy(cuenta_dba.arr,cuenta_db.arr);
  strcpy(cuenta_cra.arr,cuenta_cr.arr);
  strcpy(fecha_astoa.arr,fecha_asto.arr);
  strcpy(codigoa.arr,codigo.arr);
  strcpy(sucursalb.arr,sucursal_aj.arr);
  sucursalb.len = strlen(sucursalb.arr);
  strcpy(cen_cosb.arr,cen_cos_aj.arr);
  cen_cosb.len = strlen(cen_cosb.arr);
  ptajea=ptaje;

  EXEC SQL insert into movto_c
           (CODIGO_EMP,
	    ANO_MES,
	    COMPROBANTE,
	    CONSECUTIVO,
	    CLASE,
	    DESCRIPCION,
	    FECHA,
	    TIPO,
	    ESTADO,
	    NITB,
	    CODIGO_NITB,
	    VALORB,
	    RETENCION,
	    CONTADO)
           values(:codigo_emp, :ano_mesf, :comprobanteb, :consecutivob, 'CD',
                  'APROPIACION PARA DEPRECIACIONES',:fechab,'5', '0','','','','','');

  if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
      fprintf (stderr, "Error leyendo Movto_C (%d) codigo_emp(%s) ano_mesf(%s) comprobanteb(%s) consecutivob(%s) fechab(%s)\n", sqlca.sqlcode, codigo_emp.arr, ano_mesf.arr, comprobanteb.arr, consecutivob.arr, fechab.arr);

  staora  = 0;
  while (staora == 0) {

        cuenta.arr     [cuenta.len]     = '\0';
        cuenta_db.arr  [cuenta_db.len]  = '\0';
        cuenta_cr.arr  [cuenta_cr.len]  = '\0';
        fecha_asto.arr [fecha_asto.len] = '\0';
        codigo.arr     [codigo.len]     = '\0';
        codigo.len  =  strlen(codigo.arr);
        sucursal_aj.arr[sucursal_aj.len]= '\0';
        cen_cos_aj.arr [cen_cos_aj.len] = '\0';

        if (!strcmp(cuenta.arr,cuenta_ant)) {
            valor = valor + valord;
//            fprintf (stderr, "1)Cuenta %s %s %f\n", cuenta.arr, cuenta_ant, valor);
            goto sigue;
        }
        secuencia++;

        sprintf(secuenciab.arr,"%6.0f",secuencia);
        secuenciab.len = strlen(secuenciab.arr);
        if (codigo_nit==0)
           strcpy(codigo_nitb.arr,"");
        else sprintf(codigo_nitb.arr,"%5d",codigo_nit);
        codigo_nitb.len = strlen(codigo_nitb.arr);
        if (valor<0) {
           valor=valor*-1;
        }
//        printf("\n1)valor=%f, ptaje=%f\n\n",valor,ptajea);
        valor=((valor*ptajea)/12)/100;
        valor=redondo(valor);
        if (valor> 0) {
           strcpy(cuentab.arr,cuenta_dba.arr);
           cuentab.len = strlen(cuentab.arr);
           strcpy(codigox.arr,cuentab.arr);
           codigox.len = strlen(codigox.arr);
           ver_inf();
           sprintf(valor_debb.arr,"%10.2f",valor);
           valor_debb.len = strlen(valor_debb.arr);
           strcpy (valor_creb.arr,"");
           valor_creb.len = strlen(valor_creb.arr);
                                          /* Graba en movto_d el Debito (C4) */

//           printf ("2.1)Cuenta %s %s %s\n", cuentab.arr, valor_debb.arr, valor_creb.arr);
           EXEC SQL insert into movto_d
                    (codigo_emp, ano_mes, consecutivo, secuencia, cuenta, infa, infb, infc, infd, codigo_nit, valor_deb, valor_cre, sucursal, cen_cos, version, libro)
                    values(:codigo_emp, :ano_mesf, :consecutivob, :secuenciab,
                           :cuentab, :infa, :infb, :infc, :infd,
                           :codigo_nitb, :valor_debb, :valor_creb, :sucursalb, :cen_cosb, 0, :libro);

           if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
               fprintf (stderr, "Error Grabando Debito (%d)\n", sqlca.sqlcode);

           strcpy(cuentab.arr,cuenta_cra.arr);
           cuentab.len = strlen(cuentab.arr);
           strcpy(codigox.arr,cuentab.arr);
           codigox.len = strlen(codigox.arr);
           ver_inf();
           strcpy (valor_debb.arr,"");
           valor_debb.len = strlen(valor_debb.arr);
           sprintf(valor_creb.arr,"%10.2f",valor);
           valor_creb.len = strlen(valor_creb.arr);
          /* Graba en movto_d el Credito (C4) */
           valor=valord;

//           printf ("2.2)Cuenta %s %s %s\n", cuentab.arr, valor_debb.arr, valor_creb.arr);
           EXEC SQL insert into movto_d
                    (codigo_emp, ano_mes, consecutivo, secuencia, cuenta, infa, infb, infc, infd, codigo_nit, valor_deb, valor_cre, sucursal, cen_cos, version, libro)
                    values(:codigo_emp, :ano_mesf, :consecutivob, :secuenciab,
                           :cuentab, :infa, :infb, :infc, :infd,
                           :codigo_nitb, :valor_debb, :valor_creb, :sucursalb, :cen_cosb, 0, :libro);

           if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
               fprintf (stderr, "Error Grabando Credito (%d)\n", sqlca.sqlcode);
        }

        strcpy(cuenta_ant,cuenta.arr);
        strcpy(cuenta_dba.arr,cuenta_db.arr);
        strcpy(cuenta_cra.arr,cuenta_cr.arr);
        strcpy(fecha_astoa.arr,fecha_asto.arr);
        strcpy(codigoa.arr,codigo.arr);
        strcpy(sucursalb.arr,sucursal_aj.arr);
        sucursalb.len = strlen(sucursalb.arr);
        strcpy(cen_cosb.arr,cen_cos_aj.arr);
        cen_cosb.len = strlen(cen_cosb.arr);
        ptajea=ptaje;

        sigue:;
        EXEC SQL FETCH C6 INTO :cuenta, :cuenta_db, :cuenta_cr, :valord, :fecha_asto,
                               :ptaje, :codigo, :sucursal_aj, :cen_cos_aj;

        staora  = sqlca.sqlcode;

        if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
            fprintf (stderr, "Error leyendo C6 (%d) %s %f\n", sqlca.sqlcode, cuenta.arr, valord);
        if (sqlca.sqlcode == -1405) {
  	    staora = 0;
//            fprintf (stderr, "Error leyendo err ORA-1405 %s %f\n", cuenta.arr, valord);
        }
  }
}

void ver_inf()
{
  EXEC SQL select infa, infb, infc, infd
           into :veca, :vecb, :vecc, :vecd
           from   plan
           where  codigo_emp = :codigo_emp and
                  cuenta     = :cuentab;

  if (sqlca.sqlcode == 1403)
      printf ("Cuentab (%-s) no existe\n", cuentab.arr);

  veca.arr [veca.len] = '\0';
  vecb.arr [vecb.len] = '\0';
  vecc.arr [vecc.len] = '\0';
  vecd.arr [vecd.len] = '\0';

  strcpy (vecplan[1], veca.arr);
  strcpy (vecplan[2], vecb.arr);
  strcpy (vecplan[3], vecc.arr);
  strcpy (vecplan[4], vecd.arr);

  for (i=1;i<=4;i++) {
       strcpy(inf[i],"");
  }
  i=j=0;
  for (i=1;i<=4;i++) {
      if (!strcmp(vecplan[i],"NIT")) {
          sprintf(inf[i],"%12.0f",nitn);
      }
      for (j=1;j<=k;j++) {
          if (!strcmp(vecplan[i],vecinf[j].arr) && strcmp(vecplan[i],"") ) {
              strcpy(inf[i],codigox.arr);
          }
      }
  }
  strcpy (infa.arr, inf[1]);
  strcpy (infb.arr, inf[2]);
  strcpy (infc.arr, inf[3]);
  strcpy (infd.arr, inf[4]);
  infa.len = strlen(infa.arr);
  infb.len = strlen(infb.arr);
  infc.len = strlen(infc.arr);
  infd.len = strlen(infd.arr);
}
