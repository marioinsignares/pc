/*****************************************************************
* ROTULODE.C Version 1.0 - Rev 1.2 - May. 29/90.
*
* clientes.c Programa que lista las etiquetas segun paretto
*
* Uso : clientes device copias userid/password
*
* Mario E. Santiago I. Creado Julio 5-1991.
* Teodoro Tarud & Cia Ltda.
*
*/
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

double redondo();
void leer_clientes();
void telefonos();
                                      /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100]; 
VARCHAR codigo_ciu[6];
VARCHAR codigo_cliei[8];
VARCHAR codigo_clief[8];
VARCHAR codigo_cliente[8];
VARCHAR nomb_clie[45];
VARCHAR nomb_ciu[30];
VARCHAR nombre_ciu[30];
VARCHAR direccion[50];
double  telefono;
double  codigo_nit;
VARCHAR codigo_nit_c[8];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;      

char *fmtnum(), r_t[80];
int     con_pag;                                   /* Contador de Paginas */
int     con_lin;                                   /* Contador de Lineas  */
char    copias[3];
char    nomb_clie1[46];
char    nomb_clie2[46];
char    nomb_clie3[46];
char    nomb_clie4[46];
char    direccion1[50];
char    direccion2[50];
char    direccion3[50];
char    direccion4[50];
char    telefono1[40];
char    telefono2[40];
char    telefono3[40];
char    telefono4[40];
char    nomb_ciu1[30];
char    nomb_ciu2[30];
char    nomb_ciu3[30];
char    nomb_ciu4[30];
char    cadena[100];
char    cadena2[35];
char    codigo_ant[8];
int     staora = 0;

void main(argc, argv)
int     argc;
char    *argv[];
{
char	device[6];
int	status = 0;

if (argc < 6)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : flistetpa codigo_ini codigo_fin device copias");
    printf ("      userid/password\n");
    printf ("      device : t salida por terminal\n");
    printf ("               Px salida por impresora (x nro printer)\n");
    printf ("               userid/password nombre usuario y password\n");
    exit (1);
   }

strcpy (codigo_cliei.arr,argv[1]);
codigo_cliei.len = strlen(codigo_cliei.arr);
strcpy (codigo_clief.arr,argv[2]);
codigo_clief.len = strlen(codigo_clief.arr);
strcpy (device,      argv[3]);
strlow (device);
strcpy (copias,      argv[4]);

if (!strpos ("/", argv[5]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,    argv[5]);
uid.len   =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/

    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora("1");

/************************************************
 * Recuperar datos en el area de datos definida *
 * una fila al tiempo. (ofetch).                *
 * Aqui se hace la primera lectura del cursor 0.*
 ************************************************/

    EXEC SQL DECLARE C1 CURSOR FOR
        select n.nombre, nvl(n.nombre_muni,c.nombre), n.direccion, n.codigo_nit
	      from  paretto p, nits n, ciudades c, clientes cl
        where n.codigo_nit      = cl.codigo_nit                      and
              n.codigo_ciu      = c.codigo                           and
              cl.codigo_cliente = p.codigo_cliente                   and
              p.codigo_cliente >= :codigo_cliei                      and
              p.codigo_cliente <= :codigo_clief
        group by n.nombre, n.nombre_muni, c.nombre, n.direccion,
              n.codigo_nit, p.valor
        order by p.valor desc;

    EXEC SQL DECLARE C3 CURSOR FOR
        select nvl(numero,0)
        from   telefonos
        where  codigo_nit = :codigo_nit_c
        order  by orden;

    EXEC SQL OPEN C1;
    staora  = 0;
 while (staora == 0) {
        fprintf (fp,"%s%s",diezcpi,condensado_on);
        leer_clientes();
        strcpy(nomb_clie1,nomb_clie.arr);
        strorg(nomb_clie1,1,45);
        strcpy(direccion1,direccion.arr);
        strorg(direccion1,1,45);
        telefonos();
        sprintf(telefono1,"Telefono(s) : %s",cadena2);
        strcpy(nomb_ciu1,nomb_ciu.arr);

        leer_clientes();
        strcpy(nomb_clie2,nomb_clie.arr);
        strorg(nomb_clie2,1,45);
        strcpy(direccion2,direccion.arr);
        strorg(direccion2,1,45);
        telefonos();
        sprintf(telefono2,"Telefono(s) : %s",cadena2);
        strcpy(nomb_ciu2,nomb_ciu.arr);

        leer_clientes();
        strcpy(nomb_clie3,nomb_clie.arr);
        strorg(nomb_clie3,1,45);
        strcpy(direccion3,direccion.arr);
        strorg(direccion3,1,45);
        telefonos();
        sprintf(telefono3,"Telefono(s) : %s",cadena2);
        strcpy(nomb_ciu3,nomb_ciu.arr);

        leer_clientes();
        strcpy(nomb_clie4,nomb_clie.arr);
        strorg(nomb_clie4,1,45);
        strcpy(direccion4,direccion.arr);
        strorg(direccion4,1,45);
        telefonos();
        sprintf(telefono4,"Telefono(s) : %s",cadena2);
        strcpy(nomb_ciu4,nomb_ciu.arr);

        fprintf (fp,"%s%-62s  %-62s  %-62s  %-62s\n",elite,nomb_clie1,nomb_clie2,nomb_clie3,nomb_clie4);
        fprintf (fp,"%-62s  %-62s  %-62s  %-62s\n",direccion1,direccion2,direccion3,direccion4);
        fprintf (fp,"%-62s  %-62s  %-62s  %-62s\n",telefono1,telefono2,telefono3,telefono4);
        fprintf (fp,"%-62s  %-62s  %-62s  %-62s\n\n\n",nomb_ciu1,nomb_ciu2,nomb_ciu3,nomb_ciu4);
}

fprintf (fp,"%s%s\r",line_feed6,enfatizado_off);
cierre_impresora();
EXEC SQL CLOSE C1;
EXEC SQL COMMIT WORK RELEASE;
exit   (0);
}

void leer_clientes()
{
   EXEC SQL FETCH C1 INTO :nomb_clie, :nomb_ciu, :direccion, :codigo_nit;

   staora  = sqlca.sqlcode;
   if (staora !=  1403) {
      if (staora == -1405) {
          staora  = 0;
          if (!strlen(nomb_ciu.arr)) {
              strcpy (nomb_ciu.arr, "");
              nomb_ciu.len = 0;
          }
      }
      else if (staora)
               fprintf (stderr, "Error leyendo C1 (%d)\n", staora);
  
      codigo_cliente.arr  [codigo_cliente.len] = '\0';
      nomb_clie.arr       [nomb_clie.len]      = '\0';
      nomb_ciu.arr        [nomb_ciu.len]       = '\0';
      direccion.arr       [direccion.len]      = '\0';

      strcpy(codigo_ciu.arr,codigo_cliente.arr);
      strorg(codigo_ciu.arr,1,2);

      if (strcmp(codigo_ciu.arr,codigo_ant)) {
          codigo_ciu.len = strlen(codigo_ciu.arr);
          EXEC SQL select nombre into :nombre_ciu
                   from   ciudades
                   where  codigo = :codigo_ciu;
          if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) 
              fprintf (stderr, "Error leyendo C2 (%d)\n", sqlca.sqlcode);
          nombre_ciu.arr  [nombre_ciu.len]     = '\0';
          strcpy(codigo_ant,codigo_ciu.arr);
      }
      sprintf (codigo_nit_c.arr,"%5.0f",codigo_nit);
      codigo_nit_c.len = strlen(codigo_nit_c.arr);
   }
}

void telefonos()
{
 int oraest  = 0;
 int traidos = 0;
 strcpy(cadena2,"");
 EXEC SQL OPEN C3;
 while (oraest == 0) {

        EXEC SQL FETCH C3 INTO :telefono;

        oraest  = sqlca.sqlcode;
        if (oraest == 1403 || traidos == 2) break;
        if (oraest != 1403 && oraest != 0) 
            fprintf (stderr, "Error leyendo C3 (%d)\n", oraest);

        traidos++;
        if (traidos == 1) {
            sprintf (cadena,"%8.0f",telefono);
            strcpy  (cadena2,cadena);
        }
        else {
             if (telefono > 0) {
                 sprintf (cadena,"-%8.0f",telefono);
                 strcat  (cadena2,cadena);
             }
        }
 }
 EXEC SQL CLOSE C3;
}
