/*****************************************************************
* AUXILIAR.C Version 1.0 - Rev 1.2 - Dic. 20/93.
*                          Rev 1.6   Nov. 14/97.
*
* auxiliar.pc. Listado del movimiento de cuentas auxiliares
*
* Uso : codigo_emp cuentai cuentaf ano_mesi ano_mesf codigoi codigof
*       niti nitf device userid/password
*
* Mario E. Santiago I. Creado Diciembre 20-1993.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <setjmp.h>
#include <stdlib.h>
#include <math.h>

void listado();
void lista_movto();
void imprimir();
void titulos();
void imprime_acumulanit();
void leer_articulos();
void leer_bienes();
void leer_bancos();
void leer_varios();
void leer_import();
void totales();
				     /* Parametros de comunicacion con ORACLE */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];

/* EMPRESAS */

VARCHAR nomb_emp   [51];
double  nit;
int     digito;
VARCHAR codigo_emp [4];

/* ACUMULADOS */

VARCHAR cuentan    [15];
VARCHAR nombre_ctan[71];
double  nitn;
VARCHAR codigo     [15];
double  codigo_nit3;
VARCHAR sucursaln  [05];
VARCHAR cen_cosn   [3];

/* VALOR ACUMULADOS */

double  valor_debn;
double  valor_cren;

VARCHAR nita       [15];
VARCHAR codigo_nitb[10];
VARCHAR ano_mesa   [20];
VARCHAR ano_mes    [20];
VARCHAR ano_mes13  [20];

VARCHAR vecinf     [20][20];

/* PLAN */

VARCHAR nombre_cta [71];
VARCHAR veca       [20];
VARCHAR vecb       [20];
VARCHAR vecc       [20];
VARCHAR vecd       [20];
VARCHAR db_cr      [04];
VARCHAR cuentab    [15];
VARCHAR codigob    [15];

/* MOVTO */

VARCHAR infa       [20][20];
VARCHAR infb       [20][20];
VARCHAR infc       [20][20];
VARCHAR infd       [20][20];
double  comprobante[20];
double  consecutivo[20];
VARCHAR clase      [20][3];
VARCHAR descripcion[20][51];
VARCHAR fecha      [20][15];
int     tipo       [20];
VARCHAR cuenta     [20][15];
double  codigo_nit [20];
double  valor_deb  [20];
double  valor_cre  [20];

VARCHAR sucursal   [20][05];
VARCHAR cen_cos    [20][3];
VARCHAR sucursali  [10];
VARCHAR sucursalf  [10];
VARCHAR cen_cosi   [04];
VARCHAR cen_cosf   [04];
VARCHAR nomb_suci  [12];
VARCHAR nomb_sucf  [12];

VARCHAR ano_mesi   [20];
VARCHAR ano_mesf   [20];
VARCHAR cuentai    [20];
VARCHAR cuentaf    [20];
VARCHAR codigoi    [20];
VARCHAR codigof    [20];
VARCHAR niti       [20];
VARCHAR nitf       [20];
VARCHAR sucursalb  [10];
VARCHAR cen_cosb   [04];

/* VARIOS, BANCOS, ARTICULOS, BIENES */

VARCHAR nombre_var [56];
VARCHAR nombre_bco [56];
VARCHAR nombre_art [56];
VARCHAR nombre_bien[56];
VARCHAR nombre_imp [56];
int	tipo_an;
VARCHAR librob        [4];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;

int     loop_2  = 0;
int     loop_4  = 0;


                                            /* Variables globales del usuario */
char    pagina[6];                                   /* Contador de Paginas */
int     con_pag=0;                                   /* Contador de Paginas */
int     con_lin=66;                                   /* Contador de Lineas  */
int     cl;
int     anof;
int     mesf;
int     anof2;
int     mesf2;
        		                /* Variables de recepcion para datos */
char *fmtnum(), r_t[80];
int     mesi;
int     mest;
int     anoi;
int     anot;
char    vecmov [5][20];
char    vecplan[5][20];
double  x, num, doble;
char    codigox[11];
double  total_deb;
double  total_cre;
double  saldo_ant;
char    cadena[100];
char    cadena2[240];
char    copias[8];

int     entre;
int     i;
int     j;
int     k;

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;
int	num_ret;
int	traidos;
int	staora;

    if (argc < 18)
       {
	      printf ("Incorrecta invocacion:\n");
        printf ("Uso : codigo_emp cuentai cuentaf sucursali sucursalf c.costoi c.costof ano_mesi ano_mesf codigoi codigof\n");
	      printf ("      niti nitf copias pagina\n");
        printf ("      device : t salida por terminal\n");
      	printf ("               s salida standar     \n");
      	printf ("               Px salida por impresora (x nro printer)\n");
        printf ("      libro(0= COLGAAP 1=IFRS)\n");
      	printf ("               userid/password nombre usuario y password\n");
        exit (1);
       }
       strcpy (codigo_emp.arr, argv[1]);
       codigo_emp.len =        strlen(codigo_emp.arr);
       strcpy (cuentai.arr,    argv[2]);
       cuentai.len  =          strlen(cuentai.arr);
       strcpy (cuentaf.arr,    argv[3]);
       cuentaf.len  =          strlen(cuentaf.arr);

       strcpy (sucursali.arr,  argv[4]);
       sucursali.len  =        strlen(sucursali.arr);
       strcpy (sucursalf.arr,  argv[5]);
       sucursalf.len  =        strlen(sucursalf.arr);
       strcpy (cen_cosi.arr,   argv[6]);
       cen_cosi.len   =        strlen(cen_cosi.arr);
       strcpy (cen_cosf.arr,   argv[7]);
       cen_cosf.len   =        strlen(cen_cosf.arr);

       strcpy (codigoi.arr,    argv[10]);
       codigoi.len  =          strlen(codigoi.arr);
       strcpy (codigof.arr,    argv[11]);
       codigof.len  =          strlen(codigof.arr);
       strcpy (niti.arr,       argv[12]);
       niti.len     =          strlen(niti.arr);
       strcpy (nitf.arr,       argv[13]);
       nitf.len     =          strlen(nitf.arr);

       strcpy (copias,         argv[14]);
       strcpy (pagina,         argv[15]);
       strcpy (device,         argv[16]);
       strlow (device);
       strcpy (librob.arr,     argv[17]);
       librob.len  =           strlen(librob.arr);

    if (!strpos ("/", argv[18]))
       {
        printf ("user id/password incorrecto.\n");
	      exit (1);
       }

    strcpy (uid.arr,    argv[18]);
    uid.len           = strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/

    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora("1");

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/
    strcpy (ano_mesi.arr,   argv[8]);
    ano_mesi.len =          strlen(ano_mesi.arr);

    strcpy (ano_mesf.arr,   argv[9]);
    ano_mesf.len =          strlen(ano_mesf.arr);

    strcpy (cadena,ano_mesi.arr);
    strorg (cadena,1,4);
    anoi         =          atoi(cadena);
    strcpy (cadena,ano_mesi.arr);
    strorg (cadena,5,2);
    mesi         =          atoi(cadena);
    sprintf (ano_mes13.arr,"%04d%02d",anoi-1,13);
    ano_mes13.len= strlen(ano_mes13.arr);
    strcpy (cadena,ano_mesf.arr);
    strorg (cadena,1,4);
    anof         =          atoi(cadena);
    anof2        =          atoi(cadena);
    strcpy (cadena,ano_mesf.arr);
    strorg (cadena,5,2);
    mesf         =          atoi(cadena);
    mesf2        =          atoi(cadena);
    anot         =          anoi;
    mest         =          mesi;
    if (mesi==1) {
       anoi--;
       mesi=13;
    }
    else {
         mesi--;
    }
    sprintf (ano_mesa.arr,"%04d%02d",anoi,mesi);
    ano_mesa.len = strlen(ano_mesa.arr);

    EXEC SQL select n.nombre, n.nit, n.digito
                    into :nomb_emp, :nit, :digito
             from   nits n, empresas e
             where  n.codigo_nit = e.codigo_nit and
                    e.codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)  //
        fprintf (stderr, "Error leyendo Empresa (%d)\n", sqlca.sqlcode);

/* Cx */

    EXEC SQL select nombre
             into  :nomb_suci
             from   sucursal
             where  sucursal   = :sucursali   and
                    codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode == 0)
        nomb_emp.arr [nomb_emp.len] = '\0';

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) ///
        fprintf (stderr, "Error leyendo Sucursali=%s (%d)\n",sucursali.arr, sqlca.sqlcode);

/* Cx1 */

    EXEC SQL select nombre
             into  :nomb_sucf
             from   sucursal
             where  sucursal   = :sucursalf   and
                    codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode == 0)
        nomb_emp.arr [nomb_emp.len] = '\0';

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Sucursalf=%s (%d)\n",sucursalf.arr, sqlca.sqlcode);

    EXEC SQL DECLARE C2 CURSOR FOR
         select nvl(infa,'0'),
                decode(clase,'RC',decode(substr(:cuentab,1,8),'13050501','0',
                '13050590','0',nvl(infb,'0')),nvl(infb,'0')),
                nvl(infc,'0'), nvl(infd,'0'), comprobante, c.consecutivo,
                clase, descripcion, fecha, tipo, cuenta,
                nvl(codigo_nit,0), nvl(valor_deb,0), nvl(valor_cre,0),
                sucursal, cen_cos
         from   movto_d d, movto_c c
         where  d.codigo_emp(+)  = c.codigo_emp             and
                d.ano_mes(+)     = c.ano_mes                and
                d.consecutivo(+) = c.consecutivo            and
                c.codigo_emp     = to_number(:codigo_emp)   and
                c.ano_mes       >= to_number(:ano_mesi)     and
                c.ano_mes       <= to_number(:ano_mesf)     and
                cuenta           =  :cuentab                and
              	d.sucursal      >= (:sucursali)             and
              	d.sucursal      <= (:sucursalf)             and
              	d.cen_cos       >= to_number(:cen_cosi)     and
              	d.cen_cos       <= to_number(:cen_cosf)     and
                d.libro          = to_number(:librob)       and
                to_number(decode(substr(:cuentab, 1, 8),
                          '13050501',decode(:codigo_emp,1,'970',2,970,3,970,nvl(codigo_nit,970)),
                          '13050590',decode(:codigo_emp,1,'970',2,970,3,970,nvl(codigo_nit,970)),
                          nvl(codigo_nit,970))) = to_number(:codigo_nitb)
         order by fecha;

    EXEC SQL DECLARE C4 CURSOR FOR
             select inf
             from   infacu;

    EXEC SQL OPEN C4;

    staora  = 0;
    traidos = 0;
    num_ret = 0;
    while (staora == 0) {

          EXEC SQL FETCH C4 INTO :vecinf;

          if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) ////
             fprintf (stderr, "Error leyendo C4 (%d)\n", sqlca.sqlcode);
//          else fprintf (stderr, "Error leyendo en C4 (%d)\n", sqlca.sqlcode);

          staora  = sqlca.sqlcode;
          traidos = sqlca.sqlerrd[2];
          if (sqlca.sqlcode == -1405)
              staora = 0;

          for (loop_4 = 0; loop_4 < (traidos - num_ret); loop_4++) {
              vecinf[loop_4].arr  [vecinf[loop_4].len] = '\0';
          }
          num_ret = traidos;
    }
    k = traidos;
    EXEC SQL CLOSE C4;

                //, sucursal, cen_cos
//         , sucursal, cen_cos
    EXEC SQL DECLARE C3 CURSOR FOR
         select cuenta, nombre, nvl(nit,0), nvl(codigo,'0'),
                a.codigo_nit
         from acumulanit a, nits n
         where  n.codigo_nit(+)       = a.codigo_nit                and
                a.codigo_emp          = to_number(:codigo_emp)      and
//                ano_mes              >= to_number(:ano_mesi)        and
                ano_mes              >= to_number(:ano_mes13)       and
                ano_mes              <= to_number(:ano_mesf)        and
                cuenta               >= (:cuentai)                  and
                cuenta               <= (:cuentaf)                  and
                nvl(codigo,0)        >= (:codigoi)                  and
                nvl(codigo,0)        <= (:codigof)                  and
                nvl(nit,0)           >= to_number(:niti)            and
                nvl(nit,0)           <= to_number(:nitf)            and
              	a.sucursal           >= (:sucursali)                and
              	a.sucursal           <= (:sucursalf)                and
              	a.cen_cos            >= to_number(:cen_cosi)        and
              	a.cen_cos            <= to_number(:cen_cosf)        and
                a.libro               = to_number(:librob) 
         group by cuenta, nombre, nit, codigo, a.codigo_nit
         order by cuenta, codigo, nit;

    EXEC SQL OPEN C3;

//    printf("pase-0"); getchar();
    staora  = 0;
    while (staora == 0) {

          EXEC SQL FETCH C3 INTO :cuentan, :nombre_ctan, :nitn,
                                 :codigo,  :codigo_nit3;
                                 //, :sucursaln, :cen_cosn;

          if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) /////
             fprintf (stderr, "Error leyendo sucursali=%s sucursalf=%s cen_cosi=%s cen_cosf=%s en C3 (%d)\n", sucursali.arr, sucursalf.arr, cen_cosi.arr, cen_cosf.arr, sqlca.sqlcode);
          else {
                if (sqlca.sqlcode == 1403) {
 //                   printf ("Error leyendo ano_mesi=%s ano_mesf=%s sucursali=%s sucursalf=%s cen_cosi=%s cen_cosf=%s en C3 (%d)\n", ano_mesi.arr, ano_mesf.arr, sucursali.arr, sucursalf.arr, cen_cosi.arr, cen_cosf.arr, sqlca.sqlcode); getchar();
                    break;
                }    
                else {
                      if (sqlca.sqlcode != 0)
                          fprintf (stderr, "Error leyendo ano_mesi=%s ano_mesf=%s sucursali=%s sucursalf=%s cen_cosi=%s cen_cosf=%s en C3 (%d)\n", ano_mesi.arr, ano_mesf.arr, sucursali.arr, sucursalf.arr, cen_cosi.arr, cen_cosf.arr, sqlca.sqlcode);
                }
          }

          staora  = sqlca.sqlcode;
          if (sqlca.sqlcode == -1405)
              staora = 0;

              cuentan.arr      [cuentan.len]     = '\0';
              nombre_ctan.arr  [nombre_ctan.len] = '\0';
              codigo.arr       [codigo.len]      = '\0';
//              sucursaln.arr    [sucursaln.len]   = '\0';
//              cen_cosn.arr     [cen_cosn.len]    = '\0';

//    printf("pase-0.1"); getchar();
              listado();
    }
    EXEC SQL CLOSE C3;

/************************************************
 * Desconectarse de ORACLE. (ologof)            *
 ************************************************/
    EXEC SQL COMMIT WORK RELEASE;

    cierre_impresora();

    exit   (0);
}

void listado()
{
int	staora2;
int	traidos2;
int	num_ret2;

 strcpy(cuentab.arr,cuentan.arr);
 cuentab.len     = strlen(cuentab.arr);

 valor_debn=valor_cren=saldo_ant=0;

 strcpy(codigob.arr,codigo.arr);
 codigob.len     = strlen(codigob.arr);

 strcpy(sucursalb.arr,sucursaln.arr);
 sucursalb.len   = strlen(sucursalb.arr);

 strcpy(cen_cosb.arr,cen_cosn.arr);
 cen_cosb.len    = strlen(cen_cosb.arr);

 sprintf (nita.arr,"%12.0f",nitn);
 nita.len        = strlen(nita.arr);

 //, sucursal, cen_cos
          //, :sucursaln, :cen_cosn
 EXEC SQL select sum(nvl(valor_deb,0)), sum(nvl(valor_cre,0))
          into  :valor_debn, :valor_cren
          from   acumulanit a, nits
          where  nits.codigo_nit       = a.codigo_nit                and
                 a.codigo_emp          = to_number(:codigo_emp)      and
                 ano_mes              >= to_number(:ano_mes13)       and
                 ano_mes              <= to_number(:ano_mesa)        and
                 cuenta                = (:cuentab)                  and
                 codigo                = nvl(:codigob,'0')           and
              	 sucursal             >= (:sucursali)                and
              	 sucursal             <= (:sucursalf)                and
              	 cen_cos              >= to_number(:cen_cosi)        and
              	 cen_cos              <= to_number(:cen_cosf)        and
                 libro                 = to_number(:librob)          and
                 nits.nit              = to_number(:nita);
//          group by sucursal, cen_cos;

// fprintf (stderr, "ANO_MESA=%s \n", ano_mesa.arr, sqlca.sqlcode);
 if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) { ////**
     fprintf (stderr, "Error leyendo sucursalb=%s cen_cosb=%s C9 (%d)\n", sucursalb.arr, cen_cosb.arr, sqlca.sqlcode);
     valor_debn=valor_cre[loop_2]=0;
 }
// printf("pase-1"); getchar();
 titulos();
 imprime_acumulanit();

 strcpy(cuentab.arr,cuentan.arr);
 cuentab.len     = strlen(cuentab.arr);
 sprintf(codigo_nitb.arr,"%-5.0f",codigo_nit3);
 codigo_nitb.len = strlen(codigo_nitb.arr);

 strcpy(sucursalb.arr,sucursaln.arr);
 sucursalb.len     = strlen(sucursalb.arr);

 strcpy(cen_cosb.arr,cen_cosn.arr);
 cen_cosb.len     = strlen(cen_cosb.arr);

// printf ("%s %s %d\n", cuentab.arr, codigo_nitb.arr, staora2); getchar();

 EXEC SQL OPEN C2;

 staora2  = 0;
 traidos2 = 0;
 num_ret2 = 0;
 while (staora2 == 0) {

       EXEC SQL FETCH C2 INTO :infa, :infb, :infc, :infd, :comprobante,
                              :consecutivo, :clase, :descripcion,
                              :fecha, :tipo, :cuenta, :codigo_nit,
                              :valor_deb, :valor_cre, :sucursal, :cen_cos;

       if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) ///***
          fprintf (stderr, "Error leyendo C2 (%d)\n", sqlca.sqlcode);
//       else fprintf (stderr, "Error leyendo en C2 (%d)\n", sqlca.sqlcode);

       if (traidos2 == 0) tipo_an=tipo[0];

       staora2  = sqlca.sqlcode;
       traidos2 = sqlca.sqlerrd[2];
       if (sqlca.sqlcode == -1405)
           staora2 = 0;

       for (loop_2 = 0; loop_2 < (traidos2 - num_ret2); loop_2++) {
           infa       [loop_2].arr  [infa       [loop_2].len] = '\0';
           infb       [loop_2].arr  [infb       [loop_2].len] = '\0';
           infc       [loop_2].arr  [infc       [loop_2].len] = '\0';
           infd       [loop_2].arr  [infd       [loop_2].len] = '\0';
           clase      [loop_2].arr  [clase      [loop_2].len] = '\0';
           descripcion[loop_2].arr  [descripcion[loop_2].len] = '\0';
           fecha      [loop_2].arr  [fecha      [loop_2].len] = '\0';
           cuenta     [loop_2].arr  [cuenta     [loop_2].len] = '\0';
           sucursal   [loop_2].arr  [sucursal   [loop_2].len] = '\0';
           cen_cos    [loop_2].arr  [cen_cos    [loop_2].len] = '\0';

           strcpy (vecmov[0], infa[loop_2].arr);
           strcpy (vecmov[1], infb[loop_2].arr);
           strcpy (vecmov[2], infc[loop_2].arr);
           strcpy (vecmov[3], infd[loop_2].arr);

           lista_movto();

       }
       num_ret2 = traidos2;
 }
 EXEC SQL CLOSE C2;
 totales();
}

void lista_movto()
{
 strcpy(codigox,"0");
 i=j=0;
 for (i=0;i<4;i++) {
      for (j=0;j<k;j++) {
           if (!strcmp(vecplan[i],vecinf[j].arr)) {
               strcpy(codigox,vecmov[i]);
           }
      }
 }
 if (!memcmp(cuenta[loop_2].arr,"130505",6)&&strcmp(codigo_emp.arr,"4")<0) {
     imprimir();
 }
 else if (!strcmp(codigob.arr,codigox)) {
          codigob.len = strlen(codigob.arr);
          imprimir();
      }
}

void imprimir()
{
  char wcadena[80];
  if (con_lin > 60)
  titulos();
  strcpy  (cadena,fecha[loop_2].arr);
  strcpy  (wcadena, cadena);
  numero_fechaf(wcadena);
  strcpy  (cadena, wcadena);
  fprintf (fp,"%s ",cadena);
  fprintf (fp,"%-41s",descripcion[loop_2].arr);
  fprintf (fp,"%02d ",tipo[loop_2]);
  fprintf (fp,"%2s ",clase[loop_2].arr);
  sprintf (cadena,"%8.0f",comprobante[loop_2]);
  fprintf (fp,"%7s",fmtnum("zzzzzzzz",cadena,r_t));
  fprintf (fp,"%13s",vecmov[0]);
  fprintf (fp,"%13s",vecmov[1]);
  sprintf (cadena,"%9.2f",valor_deb[loop_2]);
  fprintf (fp,"%29s",fmtnum("zzz,zzz,zz9.99",cadena,r_t));
  sprintf (cadena,"%9.2f",valor_cre[loop_2]);
  fprintf (fp,"%15s\n",fmtnum("zzz,zzz,zz9.99",cadena,r_t));

  fprintf (fp,"%03s",sucursal[loop_2].arr);
  fprintf (fp,"%4s%2s"," ",cen_cos[loop_2].arr);

  fprintf (fp,"%71s",vecmov[2]);
  fprintf (fp,"%13s\n",vecmov[3]);
  total_deb += valor_deb[loop_2];
  total_cre += valor_cre[loop_2];
  con_lin +=2;
}
/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
 char fecha[30];
 double decimal;
 con_pag++;
 con_lin = 9;
 if (atoi(pagina)>con_pag)
    return;
// printf("pase-2"); getchar();
 doble=atof(codigo_emp.arr);
 num=doble/2;
 decimal=modf(num,&x);
 if (doble==1)
    decimal=0;
 if (decimal==0)
     fprintf(fp,"%s",salte_pagina);
 else fprintf(fp,"%s.",salte_pagina);
 strful(cadena,(int)(42-strlen(nomb_emp.arr))/2,' ');
 fprintf(fp,"%s%s%s%s%s\n",diezcpi,ancho_on,cadena,nomb_emp.arr,ancho_off);
 sprintf (cadena,"%12.0f",nit);
 fmtnum("zzz,zzz,zzz,zzz",cadena,r_t);
 fprintf (fp,"%s%s%25s %18s",condensado_on,ancho_on,"NIT :",r_t);
 if (digito > 0) {
    sprintf (cadena,"%d",digito);
    fmtnum("z",cadena,r_t);
    fprintf (fp,"-%s",r_t);
 }
 else if (digito == 0)
         fprintf (fp,"-%s","0");
 sprintf(cadena2,"SUCURSAL: %s %s A %s %s C.COSTO: %s A %s",sucursali.arr,nomb_suci.arr,sucursalf.arr,nomb_sucf.arr,cen_cosi.arr,cen_cosf.arr);
 strful(cadena,(int)(80-strlen(cadena2))/2,' ');
 fprintf(fp,"\n%s%s%s%s",condensado_on,ancho_on,cadena,cadena2);
 fecha_system(fecha);
 fprintf(fp,"\n%17s%s%s\n\n"," ","LIBROS AUXILIARES DE CONTABILIDAD",ancho_off);
 fprintf(fp,"%s%-35s%s%10s / %d A %10s / %d","FECHA PROCESO : ",fecha,"PERIODO DE : ",mes[mest-1],anot,mes[mesf2-1],anof2);
 fprintf(fp,"%35s %d\n\n","PAGINA ",con_pag);
 fprintf(fp,"%133s\n","FECHA    DESCRIPCION                            TC CL  DOCUM.    INFA/INFC    INFB/INFD                      ----MOVTOD DEL MES----");
 fprintf(fp,"%133s\n\n","                                                                                                             DEBITOS       CREDITOS");
}

void imprime_acumulanit()
{
  if (!strcmp(cuentan.arr,"9999999999"))
      return;
// printf("pase-3"); getchar();
  if (con_lin > 60)
      titulos();
  strcpy(cuentab.arr,cuentan.arr);
  cuentab.len = strlen(cuentab.arr);

  strcpy(sucursalb.arr,sucursaln.arr);
  sucursalb.len = strlen(sucursalb.arr);

  strcpy(cen_cosb.arr,cen_cosn.arr);
  cen_cosb.len = strlen(cen_cosb.arr);

  EXEC SQL select nombre, infa, infb, infc, infd, db_cr
                  into :nombre_cta, :veca, :vecb, :vecc, :vecd, :db_cr
           from   plan
           where  codigo_emp = (:codigo_emp) and
                  cuenta     = (:cuentab);

  veca.arr  [veca.len] = '\0';
  vecb.arr  [vecb.len] = '\0';
  vecc.arr  [vecc.len] = '\0';
  vecd.arr  [vecd.len] = '\0';

  if (sqlca.sqlcode == 1403)
      printf ("Cuentab (%-s) no existe\n", cuentab.arr);

  if (sqlca.sqlcode == -1405)
      sqlca.sqlcode = 0;

  strcpy (vecplan[0], veca.arr);
  strcpy (vecplan[1], vecb.arr);
  strcpy (vecplan[2], vecc.arr);
  strcpy (vecplan[3], vecd.arr);

  i=j=0;
  for (i=0;i<4;i++) {
      for (j=0;j<k;j++) {
          if (!strcmp(vecplan[i],vecinf[j].arr)) {
              if (!strcmp(vecplan[i],"CODART")) {
                 strcpy(codigob.arr,codigo.arr);
                 codigob.len = strlen(codigob.arr);
                 leer_articulos();
                 j=k+1;
                 i=4;
              }
              else {
                   if (!strcmp(vecplan[i],"CODBIENES")) {
                        strcpy(codigob.arr,codigo.arr);
                        codigob.len = strlen(codigob.arr);
                        leer_bienes();
                      j=k+1;
                      i=4;
                   }
                   else if (!strcmp(vecplan[i],"CTA-CTE") ||
                            !strcmp(vecplan[i],"PAGARE-#")) {
                            strcpy(codigob.arr,codigo.arr);
                            codigob.len = strlen(codigob.arr);
                            strcpy(sucursalb.arr,"001");
                            sucursalb.len = strlen(codigob.arr);
                            leer_bancos();
                            j=k+1;
                            i=4;
                          }
                        else if (!strcmp(vecplan[i],"COD-VAR")) {
                               /* || !strcmp(vecplan[i],"POLIZA")) */
                                 strcpy(codigob.arr,codigo.arr);
                                 codigob.len = strlen(codigob.arr);
                                 leer_varios();
                                 j=k+1;
                                 i=4;
                             }
                          else if (!strcmp(vecplan[i],"IMPORT-US")) {
                                   strcpy(codigob.arr,codigo.arr);
                                   codigob.len = strlen(codigob.arr);
                                   leer_import();
                                   j=k+1;
                                   i=4;
                               }
              }
          }
      }
}

  if (nitn==1) {
      nitn=0;
      if (!strcmp(codigo.arr,"")||
          !strcmp(cuentan.arr,"13050501")||
          !strcmp(cuentan.arr,"13050590")
         )
         strcpy(nombre_ctan.arr,nombre_cta.arr);
  }

  sprintf (cadena,"%10.0f",nitn);
  if (atoi(pagina)<=con_pag) {
     fmtnum("ZZZZZZZZZZ",cadena,r_t);
     fprintf (fp,"%s%-9s %-10s %-10s ",enfatizado_on,cuentan.arr,r_t,codigo.arr);
     nombre_ctan.arr[38]='\0';
     fprintf (fp,"%-39s%s",nombre_ctan.arr,enfatizado_off);
  }
  if (!strcmp(db_cr.arr,"DB")) {
     if (atoi(pagina)<=con_pag) {
         saldo_ant=valor_debn-valor_cren;
  /*       sprintf (cadena,"%9.2f",saldo_ant);
         fprintf (fp,"%33s",fmtnum("zzzz,zzz,zz9.99",cadena,r_t));
         sprintf(cadena,"%9.2f",0);
         fprintf (fp,"%15s\n\n",fmtnum("zzzz,zzz,zz9.99",cadena,r_t)); */
         fprintf (fp,"\n\n");
     }
  }
  else {
        if (atoi(pagina)<=con_pag) {
            saldo_ant=valor_debn-valor_cren;
           /* sprintf(cadena,"%9.2f",0);
            fprintf (fp,"%33s",fmtnum("zzzz,zzz,zz9.99",cadena,r_t));
            sprintf (cadena,"%9.2f",saldo_ant);
            fprintf (fp,"%15s\n\n",fmtnum("zzzz,zzz,zz9.99",cadena,r_t)); */
            fprintf (fp,"\n\n");
        }
  }
  con_lin+=2;
}

void leer_articulos()
{
   EXEC SQL select nombre
            into  :nombre_art
            from   articulos
            where  codart = (:codigob);

  nombre_art.arr  [nombre_art.len] = '\0';
  if (sqlca.sqlcode == 1403)
      printf ("codigob C6=(%-s) no existe\n", codigob.arr);
  else strcpy(nombre_ctan.arr,nombre_art.arr);

}

void leer_bienes()
{
  EXEC SQL select nombre
           into  :nombre_bien
           from   bienes
           where  codbienes = (:codigob);

  nombre_bien.arr  [nombre_bien.len] = '\0';
  if (sqlca.sqlcode == 1403)
      printf ("codigob C7=(%-s) no existe\n", codigob.arr);
  else strcpy(nombre_ctan.arr,nombre_bien.arr);

}

void leer_bancos()
{
  EXEC SQL select nombre
           into  :nombre_bco
           from   ctacte
           where  cuenta     = :cuentab     and
                  cta_cte    = :codigob     and
                  codigo_emp = (:codigo_emp);

//                  sucursal   = (:sucursalb) and

  nombre_bco.arr  [nombre_bco.len] = '\0';

  if (sqlca.sqlcode == 1403)
      printf ("cuentab C8 codigo_emp(%-s) cuentab (%-s) codigob (%-s) sucursalb(%-s) no existe\n", codigo_emp.arr, cuentab.arr, codigob.arr, sucursalb.arr);
  else strcpy(nombre_ctan.arr,nombre_bco.arr);

}

void leer_varios()
{
  EXEC SQL select nombre
           into  :nombre_var
           from   cta_varias
           where  cuenta     = (:cuentab)           and
                  cod_var    = (:codigob)           and
                  sucursal   = :sucursalb           and
                  cen_cos    = to_number(:cen_cosb) and
                  codigo_emp = (:codigo_emp);

  nombre_var.arr  [nombre_var.len] = '\0';
  if (sqlca.sqlcode == 1403)
      printf ("cuentab C8 (%-s), codigob (%-s) no existe\n", cuentab.arr, codigob.arr);
  else strcpy(nombre_ctan.arr,nombre_var.arr);

}

void leer_import()
{
/* C12 */
    EXEC SQL select nombre
             into  :nombre_imp
             from   cta_import
             where  cuenta     = (:cuentab)    and
                    import     = (:codigob)    and
                    codigo_emp = (:codigo_emp) and
                    sucursal   = (:sucursalb)  and
                    cen_cos    = to_number(:cen_cosb);
  nombre_imp.arr  [nombre_imp.len] = '\0';
  if (sqlca.sqlcode == 1403)
      printf ("cuentab C8 (%-s), codigob (%-s) no existe\n", cuentab.arr, codigob.arr);
  else strcpy(nombre_ctan.arr,nombre_imp.arr);

}

void totales()
{
//  if (atoi(pagina)<=con_pag) {
      fprintf (fp,"%133s\n","------------- --------------");
      sprintf (cadena,"%9.2f",saldo_ant);
      if (!strcmp(db_cr.arr,"DB")) {
          fmtnum("zzzz,zzz,zz9.99",cadena,r_t);
          fprintf (fp,"%46s %18s","Saldo Anterior DEBITO ==> ",r_t);
      }
      else {
           fmtnum("zzzz,zzz,zz9.99",cadena,r_t);
           fprintf (fp,"%46s %18s","Saldo Anterior CREDITO ==> ",r_t);
      }
      sprintf (cadena,"%9.2f",total_deb);
      fmtnum("zzzz,zzz,zz9.99",cadena,r_t);
      fprintf (fp,"%37s %15s","Totales movimiento ==>",r_t);
      sprintf (cadena,"%9.2f",total_cre);
      fmtnum("zzzz,zzz,zz9.99",cadena,r_t);
      fprintf (fp,"%15s\n",r_t);
      saldo_ant+=total_deb-total_cre;
      sprintf (cadena,"%9.2f",saldo_ant);
      fmtnum("zzzz,zzz,zz9.99",cadena,r_t);
      fprintf (fp,"%46s %18s\r","Saldo actual ==> ",r_t);
      saldo_ant=total_deb=total_cre=0;
//  }
  con_lin+=2;
}

