/*****************************************************************
* LCERTIFICA.C Version 1.0 - Rev 1.2 - Ene. 16/98.
*
* lcertifica.c Programa que lista los certificados de ingresos y retenciones
*
* Uso : lcertifica codigo_emp ano_mes device copias userid/password
*
* Mario E. Santiago I. Creado Marzo 30 de 1.994
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>
double redondo();

void titulos();

EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid          [100]; 
VARCHAR codigo_emp   [3];
VARCHAR ano_mesi     [20];
VARCHAR ano_mesf     [20];
VARCHAR nombre       [51];
VARCHAR nombre_emp   [51];
VARCHAR nombre_r     [56];
VARCHAR nombre_ciu   [26];
VARCHAR direccion    [56];
VARCHAR direccion_emp[56];
VARCHAR codigo_nita  [8];
double  nit;
double  nit_emp;
double  nita;
double  valor;
double  valor_ces;
double  valor_ret;
double  codigo_nit;
double  valor_sal;
int     a2k;

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
                                            /* Variables globales del usuario */
        		                /* Variables de recepcion para datos */

char *fmtnum(), r_t[100];
int     con_lin=66;                                /* Contador de Lineas  */
char    copias[3];
double  valor_tot;
int     j;
char    cadena[120];
char    cadena2[50];
int     oraest;
char    a;

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

if (argc < 7)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : lcertifica codigo_emp ano_mesi ano_mesf device copias userid/password\n");
    printf ("      device : t salida por terminal\n");
    printf ("               Px salida por impresora (x nro printer)\n");
    printf ("               userid/password nombre usuario y password\n");
    exit (1);
   }

   strcpy (codigo_emp.arr, argv[1]);
   codigo_emp.len =        strlen(codigo_emp.arr);
   strcpy (ano_mesi.arr,   argv[2]);
   ano_mesi.len =          strlen(ano_mesi.arr);
   strcpy (ano_mesf.arr,   argv[3]);
   ano_mesf.len =          strlen(ano_mesf.arr);
   strcpy (device,         argv[4]);
   strlow (device);
   strcpy (copias,         argv[5]);

   if (!strpos ("/", argv[6])) {
       printf ("user id/password incorrecto.\n");
       exit (1);
   }
   strcpy(uid.arr,argv[6]);
   uid.len=strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/

   EXEC SQL CONNECT :uid;

   if (sqlca.sqlcode==-1915) {
      fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
	 	sqlca.sqlcode);
      exit (1);
   }
   else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

   busco_impresora(device);
   abre_impresora(copias);

   /* C1 */
   EXEC SQL DECLARE C1 CURSOR FOR
      select n.nombre, n.nit, sum(valor_deb-valor_cre),
             n.codigo_nit
      from  acumulanit a, nits n, plan p
      where n.codigo_nit         = a.codigo_nit          and
            a.ano_mes           >= to_number(:ano_mesi)  and
            a.ano_mes           <= to_number(:ano_mesf)  and
            p.cuenta            in ('510503','510506','510512','510515',
                                    '510518','510521','510527','510536',
                                    '510539','510548','510560')
                                                         and
            p.cuenta             = substr(a.cuenta,1,6)  and
            p.nivel              = '3'                   and
            a.codigo_emp         = p.codigo_emp          and
            a.codigo_emp         = to_number(:codigo_emp)
      group by n.nombre, n.nit, n.codigo_nit
      order by n.nit;

   EXEC SQL OPEN C1;

   /* C2 */
   EXEC SQL select n.nombre, n.direccion, n.nit, c.nombre
            into  :nombre_emp, :direccion_emp, :nit_emp, :nombre_ciu
            from   nits n, empresas e, ciudades c
            where  n.codigo_ciu = c.codigo                and
                   n.codigo_nit = e.codigo_nit            and
                   e.codigo_emp = to_number(:codigo_emp);

   if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) 
       fprintf (stderr, "Error leyendo C2 (%d)\n", sqlca.sqlcode);

   nombre_emp.arr      [nombre_emp.len]       = '\0';
   direccion.arr       [direccion.len]        = '\0';
   nombre_ciu.arr      [nombre_ciu.len]       = '\0';

oraest  = 0;
while (oraest == 0) {

      EXEC SQL FETCH C1 INTO :nombre, :nit, :valor, :codigo_nit;

      oraest  = sqlca.sqlcode;
      if (sqlca.sqlcode == 1403) break;

      if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) 
          fprintf (stderr, "Error leyendo C1 (%d)\n", sqlca.sqlcode);

      nombre.arr[nombre.len] = '\0';

      valor_ces=0;
      /* C3 */
      EXEC SQL select sum(valor_deb-valor_cre)
               into :valor_ces
               from  acumulanit a, plan p
               where a.ano_mes           >= to_number(:ano_mesi)   and
                     a.ano_mes           <= to_number(:ano_mesf)   and
                     p.cuenta            in ('510530','510533')    and
                     p.cuenta             = substr(a.cuenta,1,6)   and
                     p.nivel              = '3'                    and
                     a.codigo_emp         = p.codigo_emp           and
                     a.codigo_emp         = to_number(:codigo_emp) and
                     a.codigo_nit         = :codigo_nit;

   if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) 
       fprintf (stderr, "Error leyendo C3 (%d)\n", sqlca.sqlcode);

      valor_ret=0;
      /* C4 */
      EXEC SQL select sum(valor_deb-valor_cre)
               into :valor_ret
               from  acumulanit a, plan p
               where a.ano_mes           >= to_number(:ano_mesi)   and
                     a.ano_mes           <= to_number(:ano_mesf)   and
                     p.cuenta             = '236505'               and
                     p.cuenta             = substr(a.cuenta,1,6)   and
                     p.nivel              = '3'                    and
                     a.codigo_emp         = p.codigo_emp           and
                     a.codigo_emp         = to_number(:codigo_emp) and
                     a.codigo_nit         = :codigo_nit;

   if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) 
       fprintf (stderr, "Error leyendo C4 (%d)\n", sqlca.sqlcode);

      if (con_lin > 62)
          titulos();
      if (valor != 0) {
         sprintf (cadena,"%9.2f",nit);
         fprintf (fp,"%13s ",fmtnum("zzz,zzz,zz9",cadena,r_t));
         fprintf (fp,"%-42s",nombre.arr);
         sprintf (cadena,"%9.2f",valor);
         fprintf (fp,"%17s",fmtnum("$zz,zzz,zz9.99",cadena,r_t));
         sprintf (cadena,"%9.2f",valor_ces);
         fprintf (fp,"%17s",fmtnum("$zz,zzz,zz9.99",cadena,r_t));
         sprintf (cadena,"%9.2f",valor_ret);
         fprintf (fp,"%17s\n",fmtnum("$zz,zzz,zz9.99",cadena,r_t));
         con_lin++;
     }
}
cierre_impresora();

EXEC SQL CLOSE C1;

EXEC SQL COMMIT WORK RELEASE;
exit   (0);
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
 char n[50], n1[50], n2[40], n3[50], n4[40];
 strcpy(n,nombre_emp.arr);
 strcat(n1,direccion_emp.arr);
 sprintf(n2,"%s%s",nombre_ciu.arr," -  COLOMBIA");
 sprintf(cadena,"%10.0f",nit_emp);
 sprintf(n3,"Nit : %14s",fmtnum("zzzz,zzz,zz9",cadena,r_t));
 strcpy(n4,"CERTIFICADO DE INGRESOS Y RETENCIONES");

 strful(cadena,(int)(46-strlen(n))/2,' ');
 fprintf(fp,"%s%s%s%s%s%s%s\n\n",salte_pagina,elite,ancho_on,cadena,n,diezcpi,ancho_off);
 strful(cadena,(int)(76-strlen(n2))/2,' ');
 fprintf(fp,"%s%s%s\n",enfatizado_on,cadena,n2);
 strful(cadena,(int)(76-strlen(n1))/2,' ');
 fprintf(fp,"%s%s\n",cadena,n1);
 strful(cadena,(int)(76-strlen(n3))/2,' ');
 fprintf(fp,"%s%s%s\n\n",cadena,n3,enfatizado_off);
 strful(cadena,(int)(76-strlen(n4))/2,' ');
 fprintf(fp,"%s%s%s%s%s%s\n",condensado_on,ancho_on,cadena,n4,condensado_off,ancho_off);
 fprintf(fp,"%s%-17s%-42s%-18s\n\n",elite,"       NIT  ","NOMBRE","SALARIOS Y OTROS  CESANTIAS E INT.   VALOR RETENCION");
 con_lin=6; 
}
