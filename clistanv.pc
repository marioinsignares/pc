/*****************************************************************
* CLISTPEN.PC Version 1.0 - Rev 1.2 - Sep. 26/91.
*
* clistana.c Programa de facturacion para listar las facturas pendientes a:
* 90, 120, 160, 180, 220 y más
*
* Uso : clistpen codigo_emp codigo_cliente fecha_corte fecha_movto
*                device     userid/password
*
* Martin A. Toloza L. Creado Diciembre 03-1997
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

void titulos();
void acumulo_cliente();
void acum_facturas();
void imprime_facturas();
void calcula_dias();
void imprime_vencmtos();
void borra_acumulados();
void titulo_ciudad();
void porcentajes(int i);
void imprime_totales(int i);
void numero_fechaf();
/* void grabar(); */

EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
                                 /* Clientes (C1) */
VARCHAR codigo_cliente[6];
VARCHAR nomb_clie     [41];
double  saldo_cliente;
VARCHAR codigo_emp    [3];
VARCHAR ano_mes       [20];
VARCHAR cod_clie      [6];
                                 /* Facturas (C2) */
VARCHAR fecha_vencmto [20];
VARCHAR fecha_documento [20];
double  saldo_factura;
double  numero_factura;
VARCHAR tipo_documento[3];
int     codigo_nit;
                                 /* Empresa (C3) */
VARCHAR nomb_emp      [50];
                                 /* Ciudades (C4) */
VARCHAR nomb_ciu      [30];
VARCHAR cod_ciu       [3];
int     oraest;
int     oraest2;

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
				     /* Parametros de comunicacion con ORACLE */
/*
  Arreglo que contienen los valores de total deuda del cliente,
          lo que esta por vencer, a 30 dias, 90 dias, 60 dias,
          120 o mas dias.
  El primer elemento de cada arreglo se|ala al cliente,
  el segundo se|ala los totales por ciudad y el tercero los generales.

*/

double total_deuda[4];  /* Total deuda del cliente      */
double a_90_dias[4];    /* Total a 90 dias */
double a_120_dias[4];   /* Total a 120 dias */
double a_160_dias[4];   /* Total a 160 dias */
double a_180_dias[4];   /* Total a 180 dias */
double a_220_dias[4];   /* Total a 220 dias */
double a_mas_dias[4];   /* Total a mas de 220 dias */

char    *fmtnum(), r_t[100];
int     con_pag=0;
int     con_lin=66;
char    pagina_ini[3];
int     pag_ini;
char    pagina_fin[3];
int     pag_fin=0;
char    copias[3];
int     i;
int     tit_ciu=0;
int     w_ano_corte;
int     w_mes_corte;
int     w_dia_corte;
int     ano_corte;
int     mes_corte;
int     dia_corte;
int     ano_movto;
int     mes_movto;
int     dia_movto;
int     w_ano_movto;
int     w_mes_movto;
int     w_dia_movto;
int     ano_vencmto;
int     mes_vencmto;
int     dia_vencmto;
int     total_tiempo_ano;
int     total_tiempo_mes;
int     total_tiempo_dia;
int     total_dias;
char    cadena[100];
char    cadena2[100];
int     tab;
FILE    *fd2;
char    recobrar[2];
char    fecha_corte[20];
char    fecha_movto[20];
char    fecha_listado[60];
char    linea_fecha_movto[50];
char    titulo_listado[40];
char    wcod_ciu[3];
char    mensajes[20];
char    mes_t[7][12];

int     a;
int     status = 0;

void main(argc, argv)
int     argc;
char    *argv[];
{
 char	device[6];

 if (argc < 8)
    {
     printf ("Incorrecta invocacion:\n");
     printf ("Uso : clistanc codigo_emp\n");
     printf ("fecha_corte(aaaammdd) fecha_movimiento(aaaammdd)\n");
     printf ("pagina_ini pagina_fin\n");
     printf ("device copias userid/password\n");
     printf ("      device : t salida por terminal\n");
     printf ("               Px salida por impresora (x nro printer)\n");
     printf ("               userid/password nombre usuario y password\n");
     exit (1);
    }

 strcpy (codigo_emp.arr, argv[1]);
 codigo_emp.len = strlen(codigo_emp.arr);
 strcpy (fecha_corte,argv[2]);
 strcpy (fecha_movto,argv[3]);
 if ( strlen(fecha_corte) != 8 || strlen(fecha_movto) != 8 ) {
    printf("Error, la fecha debe ser de 8 digitos y formato AAAAMMDD");
    exit (1);
 }
 strcpy (pagina_ini, argv[4]);
 pag_ini=atoi(pagina_ini);
 strcpy (pagina_fin, argv[5]);
 pag_fin=atoi(pagina_fin);
 strcpy (device,     argv[6]);
 strlow (device);
 strcpy (copias,     argv[7]);
 strcpy(recobrar,"N");
 for (i=1;i<=3;i++) {
      borra_acumulados(i);
 }

 a=0;
 if ((mes_corte==1) && dia_corte <16)
    a=26;
 else {
       if (mes_corte == 1)
          a=2;
       else a=mes_corte*2;
      }
 if (dia_corte < 16)
     a-=1;
 strcpy(mes_t[1],meq[a-1]);
 a--;
 if (a==0)
    a=23;
 strcpy(mes_t[2],meq[a-1]);
 a--;
 if (a==0)
    a=23;
 strcpy(mes_t[3],meq[a-1]);
 a--;
 if (a==0)
    a=23;
 strcpy(mes_t[4],meq[a-1]);
 a--;
 if (a==0)
    a=23;
 strcpy(mes_t[5],meq[a-1]);
 a--;
 if (a==0)
    a=23;
 strcpy(mes_t[6],meq[a-1]);
 a--;
 if (a==0)
    a=23;
 strcpy(mes_t[7],meq[a-1]);
 a--;
 if (a==0)
    a=23;
 if (mes_corte==4 || mes_corte==6 || mes_corte==9 || mes_corte==11) {
    if (dia_corte==30) {
        dia_corte=31;
        fecha_corte[4]='3';
        fecha_corte[5]='1';
    }
 }
 if (mes_corte==2) {
    if (dia_corte==28 || dia_corte==29) {
        dia_corte=31;
        fecha_corte[4]='3';
        fecha_corte[5]='1';
    }
 }

 sprintf(linea_fecha_movto,"%s %s %d %s%d","Movimiento hasta",mes[mes_movto-1],dia_movto,"de ",ano_movto);
 for (i=1;i<=3;i++) {
      borra_acumulados(i);
 }

if (!strpos ("/",   argv[8]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,    argv[8]);
uid.len    =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
   EXEC SQL CONNECT :uid;

   if (sqlca.sqlcode==-1915)
      {
       fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
       exit (1);
      }
   else
      if (sqlca.sqlcode==-1017)
	 {
	  fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	  exit (1);
	 }
      else
         if (sqlca.sqlcode)
	    exit (1);

    strcpy (ano_mes.arr,fecha_corte);
    strorg (ano_mes.arr,1,6);
    ano_mes.len = strlen(ano_mes.arr);

    strcpy(cadena,fecha_corte);
    strorg(cadena,7,2);
    dia_corte =  atoi(cadena);
    strcpy(cadena,fecha_corte);
    strorg(cadena,5,2);
    mes_corte =  atoi(cadena);
    strcpy(cadena,fecha_corte);
    strorg(cadena,1,4);
    ano_corte =  atoi(cadena);
    strcpy(cadena,fecha_movto);
    strorg(cadena,7,2);
    dia_movto =  atoi(cadena);
    strcpy(cadena,fecha_movto);
    strorg(cadena,5,2);
    mes_movto =  atoi(cadena);
    strcpy(cadena,fecha_movto);
    strorg(cadena,1,4);
    ano_movto =  atoi(cadena);
    strcpy(titulo_listado,"Analisis de Cartera - Contado");
    sprintf(cadena,"%d",ano_corte);
    fmtnum("zz,zzz",cadena,r_t);
    sprintf(fecha_listado,"%s %s %d %s%s","Fecha de corte a",mes[mes_corte-1],dia_corte,"de ",r_t);

  a=0;
  if ((mes_corte==1) && dia_corte <16)
     a=26;
  else {
        if (mes_corte == 1)
           a=2;
        else a=mes_corte*2;
       }
  if (dia_corte < 16)
      a-=1;
  strcpy(mes_t[1],meq[a-1]);
  a--;
  if (a==0)
     a=24;
  strcpy(mes_t[2],meq[a-1]);
  a--;
  if (a==0)
     a=24;
  strcpy(mes_t[3],meq[a-1]);
  a--;
  if (a==0)
     a=24;
  strcpy(mes_t[4],meq[a-1]);
  a--;
  if (a==0)
     a=24;
  strcpy(mes_t[5],meq[a-1]);
  a--;
  if (a==0)
     a=24;
  strcpy(mes_t[6],meq[a-1]);
  a--;
  if (a==0)
     a=24;
  strcpy(mes_t[7],meq[a-1]);
  a--;
  if (a==0)
     a=24;
  if (mes_corte==4 || mes_corte==6 || mes_corte==9 || mes_corte==11) {
     if (dia_corte==30) {
         dia_corte=31;
         fecha_corte[6]='3';
         fecha_corte[7]='1';
     }
  }
  if (mes_corte==2) {
     if (dia_corte==28 || dia_corte==29) {
         dia_corte=31;
         fecha_corte[6]='3';
         fecha_corte[7]='1';
     }
  }

  sprintf(cadena,"%d",ano_movto);
  fmtnum("zz,zzz",cadena,r_t);
  sprintf(linea_fecha_movto,"%s %s %d %s%s","Movimiento hasta",mes[mes_movto-1],dia_movto,"de",r_t);
       EXEC SQL DECLARE C1 CURSOR FOR
        select clientes.codigo_cliente, nombre, clientem.saldoc
        from   clientes, clientem, nits
        where  clientes.codigo_cliente = clientem.codigo_cliente  and
               clientem.ano_mes        =
               (select max(ano_mes)
                from clientem cm
                where cm.codigo_emp     = to_number(:codigo_emp)  and
                      cm.codigo_cliente = clientes.codigo_cliente and
                      cm.ano_mes       <= to_number(:ano_mes))    and
        clientem.codigo_emp             = to_number(:codigo_emp)  and
        clientes.estado                != 'R'                     and
        clientes.codigo_nit             = nits.codigo_nit         and
        clientem.saldoc                <> 0                       and
          not exists
              (select 'x'
               from   clienser
               where  clientes.codigo_cliente = codigo_cliente)
        order by clientes.codigo_cliente;

       busco_impresora(device);
       abre_impresora(copias);

       EXEC SQL select nombre into :nomb_emp
                from   empresas, nits
                where  empresas.codigo_nit = nits.codigo_nit and
                       empresas.codigo_emp = to_number(:codigo_emp);

      nomb_emp.arr[nomb_emp.len] = '\0';

   EXEC SQL OPEN C1;

    oraest = 0;
EXEC SQL FETCH C1 INTO :codigo_cliente, :nomb_clie, :saldo_cliente;
while (oraest ==0) {

      oraest = sqlca.sqlcode;

      if (oraest == 1403) {
         printf ("Error C1 (%d)\n", oraest);
         break;
      }
      else if (oraest == -1405) oraest = 0;
           else if (oraest!=0) printf ("Error C1 (%d)\n", oraest);

      codigo_cliente.arr[codigo_cliente.len] = '\0';
      nomb_clie.arr[nomb_clie.len] = '\0';

      if (status == 0) {
         strcpy(cadena,codigo_cliente.arr);
         strorg(cadena,1,2);
         strcpy(cod_ciu.arr,cadena);
         cod_ciu.len = strlen(cod_ciu.arr);
         status = 1;
      }


      acumulo_cliente();
      EXEC SQL FETCH C1 INTO :codigo_cliente, :nomb_clie, :saldo_cliente;
      oraest = sqlca.sqlcode;

      if (oraest == 1403) {
         printf ("Error C1 (%d)\n", oraest);
         break;
      }
      else if (oraest == -1405) oraest = 0;
           else if (oraest!=0) printf ("Error C1 (%d)\n", oraest);
      strcpy(cadena,codigo_cliente.arr);
      strorg(cadena,1,2);
      strcpy(wcod_ciu,cadena);
      if (strcmp(cod_ciu.arr,wcod_ciu)) {
          strcpy(mensajes,"TOTAL CIUDAD");
          imprime_totales(2);
          strcpy(cadena,codigo_cliente.arr);
          strorg(cadena,1,2);
          strcpy(cod_ciu.arr,cadena);
          cod_ciu.len = strlen(cod_ciu.arr);
          fprintf(fp,"\n");
          con_lin++;
          titulo_ciudad();
      }
}
fprintf(fp,"\n");
con_lin++;
strcpy(mensajes,"TOTAL CIUDAD");
imprime_totales(2);
strcpy(mensajes,"TOTAL GENERAL");
imprime_totales(3);
cierre_impresora();


/************************************************
 * Borrar el cursor. (oclose).                  *
 ***********************************************/
EXEC SQL CLOSE C1;

/************************************************
 * Desconectarse de ORACLE. (ologof)            *
 ************************************************/
EXEC SQL COMMIT WORK RELEASE;
exit   (0);
}

void titulos()
{

 int j=0;
 con_pag++;
 if (con_pag > pag_fin)
    {
     oraest = 1;
     return;
    }
 if (!strcmp(recobrar,"S") && con_pag  ==  pag_ini)
    {
     printf ("Impresion en proceso : ");
     strcpy(recobrar,"N");
    }
 if (!strcmp(recobrar,"N")) {
    if (!strcmp(codigo_emp.arr,"3"))
        strcpy(nomb_emp.arr,"");
    strful(cadena,(int)(68-strlen(nomb_emp.arr))/2,' ');
    fprintf(fp,"%s%s%s%s%s%s\n\n",salte_pagina,diezcpi,ancho_on,cadena,nomb_emp.arr,elite);
    strful(cadena,(int)(81-strlen(titulo_listado))/2,' ');
    fprintf(fp,"%s%s%s%s%40s%d\n\n",cadena,titulo_listado,ancho_off,diezcpi,"Pagina ",con_pag);
    strful(cadena,(int)(117-strlen(fecha_listado))/2,' ');
    fprintf(fp,"%s%s%s%s\n\n",condensado_on,ancho_on,cadena,fecha_listado);
    strful(cadena,(int)(117-strlen(linea_fecha_movto))/2,' ');
    fprintf(fp,"%s%s\n\n",cadena,linea_fecha_movto);
    fprintf(fp,"%s%s%s%s"," ",condensado_off,ancho_off,elite);
    con_lin = 7;
    titulo_ciudad();
    fprintf(fp,"%33s%s"," ","90 DIAS           120 DIAS                    160 DIAS   ");
    fprintf(fp,"%s\n","                 180 DIAS             220  DIAS");
    fprintf(fp,"%s","DOCUMENTOS                         V");
    fprintf(fp,"%s","           --------------------------- --------------------");
    fprintf(fp,"%s\n","------- --------------------------- -------------");
    fprintf(fp,"%14s%14s","FECHA","SALDO");
    for (j=1;j<=7;j++) {
        fprintf(fp,"%14s",mes_t[j]);
    }
    fprintf(fp,"\n%s","       DOCUMTO --------------- --------------- -----");
    fprintf(fp,"%s","-------- ------------- ------------- ------------- ------");
    fprintf(fp,"%s\n","------- ------------- -------------");
    con_lin = 13;
 }
}

void acumulo_cliente()
{
extern char linea[255];
int    oraest;
    EXEC SQL DECLARE C2 CURSOR FOR
             select to_char(fecha_vencmto,'yyyymmdd'), facturam.saldo,
                    facturas.numero_factura,
                    facturas.tipo_documento,
                    fecha_documento, nvl(codigo_nit,0)
             from   facturas, facturam
             where  facturas.tipo_factura   = to_number(:codigo_emp)   and
                    facturas.tipo_factura   = facturam.tipo_factura    and
                    facturas.tipo_documento = facturam.tipo_documento  and
                    facturas.numero_factura = facturam.numero_factura  and
                    nvl(facturas.contado,'0') <> 'C'                   and
                    facturas.codigo_cliente = :cod_clie                and
                    facturas.estado_factura = 0                        and
                    facturam.saldo          > 0                        and
                    facturam.ano_mes        =
                    (select max(ano_mes)
                     from facturam fm
                     where fm.tipo_factura   = facturas.tipo_factura   and
                           fm.tipo_documento = facturas.tipo_documento and
                           fm.numero_factura = facturas.numero_factura and
                           fm.ano_mes       <= to_number(:ano_mes)     and
                           fm.ano_mes       >= 200209);

 if (saldo_cliente > 0) {
     oraest=0;
     strcpy(cod_clie.arr,codigo_cliente.arr);
     cod_clie.len = strlen(cod_clie.arr);

     EXEC SQL OPEN C2;

     EXEC SQL FETCH C2 into :fecha_vencmto, :saldo_factura,
                            :numero_factura, :tipo_documento,
                            :fecha_documento, :codigo_nit;
     oraest  = sqlca.sqlcode;
     if (oraest == -1405)
         oraest = 0;
     else if (oraest != 1403)
             printf ("Error C1 (%d)\n", oraest);
     if (sqlca.sqlcode == 1403) {
         if (codigo_nit > 0) {
             EXEC SQL select nombre
                      into  :nomb_clie
                      from   nits
                      where  codigo_nit = :codigo_nit;

             nomb_clie.arr[nomb_clie.len] = '\0';
         }
         if (con_lin > 62) {
             titulos();
             if (codigo_nit == 0)
                fprintf(fp,"%s%-35s%s\n",enfatizado_on,nomb_clie.arr,enfatizado_off);
             status = 0;
             con_lin++;
         }
         else {
               fprintf(fp,"%s%-35s%s\n",enfatizado_on,nomb_clie.arr,enfatizado_off);
               con_lin++;
         }
     }
     while (oraest == 0) {

/*
            sprintf(cadena,"%9.2f",saldo_factura);
            printf("%2s%06.0f %4d%17s %s%14s\n",tipo_documento.arr,numero_factura,total_dias,fmtnum("zzz,zzz,zzz",cadena,r_t),linea,fmtnum("zzz,zzz,zzz",cadena,r_t)); getchar();
*/
            fecha_vencmto.arr   [fecha_vencmto.len]  = '\0';
            tipo_documento.arr  [tipo_documento.len] = '\0';
            fecha_documento.arr [fecha_documento.len]  = '\0';

            acum_facturas(); //Calcula d¡as vencimiento y la coloca en su columna

            EXEC SQL FETCH C2 into :fecha_vencmto, :saldo_factura,
                                   :numero_factura, :tipo_documento,
                                   :fecha_documento;
            oraest  = sqlca.sqlcode;
            if (sqlca.sqlcode == 1403) break;
            else if (oraest == -1405)
                     oraest = 0;
                 else if (oraest != 1403)
                          printf ("Error C1 (%d)\n", oraest);

            if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
                fprintf (stderr, "Error leyendo C2 (%d)\n", sqlca.sqlcode);

     }
 }
 else if (saldo_cliente < 0) {
          if (con_lin > 62) {
             titulos();
             if (codigo_nit == 0)
                fprintf(fp,"%s%-35s%s\n",enfatizado_on,nomb_clie.arr,enfatizado_off);
             status = 0;
             con_lin++;
          }
          else {
                fprintf(fp,"%s%-35s%s\n",enfatizado_on,nomb_clie.arr,enfatizado_off);
                con_lin++;
          }
          sprintf(cadena,"%9.2f",saldo_cliente);
          fprintf(fp,"%13s%17s\n"," ",fmtnum("zzz,zzz,zzz",cadena,r_t));
          con_lin++;
 }
 total_deuda[1]+= saldo_cliente;
 total_deuda[2]+= saldo_cliente;
 total_deuda[3]+= saldo_cliente;
 imprime_vencmtos();
 EXEC SQL CLOSE C2;
}

void acum_facturas()
{

 strcpy(cadena,fecha_vencmto.arr);
 strorg(cadena,7,2);
 dia_vencmto=atoi(cadena);
 if (dia_vencmto > 27 && dia_vencmto < 32) {
     fecha_vencmto.arr[6]='3';
     fecha_vencmto.arr[7]='0';
 }
 calcula_dias();
 if (total_dias > 220) {
    a_mas_dias[1]+=saldo_factura;
    a_mas_dias[2]+=saldo_factura;
    a_mas_dias[3]+=saldo_factura;
    tab=3;
 }
 else {
       if (total_dias >= 180) {
	  a_180_dias[1]+=saldo_factura;
	  a_180_dias[2]+=saldo_factura;
	  a_180_dias[3]+=saldo_factura;
          tab=17;
       }
      else {
      if (total_dias >= 160) {
	  a_160_dias[1]+=saldo_factura;
	  a_160_dias[2]+=saldo_factura;
	  a_160_dias[3]+=saldo_factura;
          tab=31;
      }
      else {
      if (total_dias >= 120) {
	  a_120_dias[1]+=saldo_factura;
	  a_120_dias[2]+=saldo_factura;
	  a_120_dias[3]+=saldo_factura;
          tab=45;
      }
      else {
      if (total_dias >= 90) {
	  a_90_dias[1]+=saldo_factura;
	  a_90_dias[2]+=saldo_factura;
	  a_90_dias[3]+=saldo_factura;
          tab=59;
      }
    }
   }
 }
}

imprime_facturas();
}

void calcula_dias()
{
 w_dia_corte=dia_corte;
 w_mes_corte=mes_corte;
 w_ano_corte=ano_corte;
 strcpy(cadena,fecha_vencmto.arr);
 strorg(cadena,7,2);
 dia_vencmto=atoi(cadena);
 if (dia_vencmto > 27 && dia_vencmto < 32)
     dia_vencmto=30;
 strcpy(cadena,fecha_vencmto.arr);
 strorg(cadena,5,2);
 mes_vencmto=atoi(cadena);
 strcpy(cadena,fecha_vencmto.arr);
 strorg(cadena,1,4);
 ano_vencmto=atoi(cadena);
 if (dia_vencmto > w_dia_corte) {
     w_mes_corte--;
     w_dia_corte+=30;
 }
 if (mes_vencmto > w_mes_corte) {
     w_ano_corte--;
     w_mes_corte+=12;
 }
 total_tiempo_dia=w_dia_corte-dia_vencmto;
 total_tiempo_mes=w_mes_corte-mes_vencmto;
 total_tiempo_ano=w_ano_corte-ano_vencmto;
 total_dias=total_tiempo_dia+(total_tiempo_mes*30)+(total_tiempo_ano*360);
}

void imprime_facturas()
{
 extern char linea[255];
 if (codigo_nit > 0) {
     EXEC SQL select nombre
              into  :nomb_clie
              from   nits
              where  codigo_nit = :codigo_nit;

     nomb_clie.arr[nomb_clie.len] = '\0';
 }
 if (con_lin > 62) {
     titulos();
     if (codigo_nit == 0)
        fprintf(fp,"%s%-35s%s\n",enfatizado_on,nomb_clie.arr,enfatizado_off);
     status = 0;
     con_lin++;
 }
 if (status == 1 || codigo_nit > 0) {
     fprintf(fp,"%s%-35s%s\n",enfatizado_on,nomb_clie.arr,enfatizado_off);
     status = 0;
     con_lin++;
 }
 espacios(tab-2);
 sprintf(cadena,"%9.2f",saldo_factura);
 strcpy(cadena2,fecha_documento.arr);
 numero_fechaf(cadena2),
 strorg(cadena2,3,8);
 fprintf(fp,"%2s%06.0f %8s%13s %s%14s\n",tipo_documento.arr,numero_factura,cadena2,fmtnum("zzz,zzz,zzz",cadena,r_t),linea,fmtnum("zzz,zzz,zzz",cadena,r_t));
 con_lin++;
}

void imprime_vencmtos()
{
 double suma_total = 0;
 if (con_lin > 62)
     titulos();
 if (!strcmp(recobrar,"N") && total_deuda[1] != 0) {
     fprintf(fp,"%s","               --------------- --------------- -----");
     fprintf(fp,"%s","-------- ------------- ------------- ------------- ------");
     fprintf(fp,"%s\n","------- ------------- -------------");
     fprintf(fp,"  %14s"," ");
     sprintf(cadena,"%12.2f",total_deuda[1]);
     fprintf(fp,"%14s",fmtnum("zz,zzz,zzz,zzz",cadena,r_t));
     sprintf(cadena,"%9.2f",a_90_dias[1]);
     fprintf(fp,"%16s",fmtnum("zzz,zzz,zzz",cadena,r_t));
     sprintf(cadena,"%9.2f",a_120_dias[1]);
     fprintf(fp,"%14s",fmtnum("zzz,zzz,zzz",cadena,r_t));
     sprintf(cadena,"%9.2f",a_160_dias[1]);
     fprintf(fp,"%14s",fmtnum("zzz,zzz,zzz",cadena,r_t));
     sprintf(cadena,"%9.2f",a_180_dias[1]);
     fprintf(fp,"%14s",fmtnum("zzz,zzz,zzz",cadena,r_t));
     sprintf(cadena,"%9.2f",a_220_dias[1]);
     fprintf(fp,"%14s",fmtnum("zzz,zzz,zzz",cadena,r_t));
     sprintf(cadena,"%9.2f",a_mas_dias[1]);
     fprintf(fp,"%14s",fmtnum("zzz,zzz,zzz",cadena,r_t));
     if (total_deuda[1] > 0) {
        suma_total = (a_90_dias[1]+a_120_dias[1]+a_160_dias[1]+a_160_dias[1]+a_180_dias[1]+a_220_dias[1]+a_mas_dias[1]);
     if (total_deuda[1] != suma_total)
        fprintf(fp,"%s %s $%9.2f\n",cod_clie.arr,"*************** SALDO DESCUADRADO ***************",total_deuda[1]-suma_total);
        con_lin++;
     }
 }
 con_lin+=3;
 borra_acumulados(1);
}

void imprime_totales(i)
int i;
{
 if (con_lin > 62)
     titulos();
 if (!strcmp(recobrar,"N")) {
      fprintf(fp,"\n%-16s",mensajes);
      sprintf(cadena,"%12.2f",total_deuda[i]);
      fprintf(fp,"%14s",fmtnum("zz,zzz,zzz,zzz",cadena,r_t));
      sprintf(cadena,"%9.2f",a_90_dias[i]);
      fprintf(fp,"%14s",fmtnum("zzz,zzz,zzz",cadena,r_t));
      sprintf(cadena,"%9.2f",a_120_dias[i]);
      fprintf(fp,"%14s",fmtnum("zzz,zzz,zzz",cadena,r_t));
      sprintf(cadena,"%9.2f",a_160_dias[i]);
      fprintf(fp,"%14s",fmtnum("zzz,zzz,zzz",cadena,r_t));
      sprintf(cadena,"%9.2f",a_180_dias[i]);
      fprintf(fp,"%14s",fmtnum("zzz,zzz,zzz",cadena,r_t));
      sprintf(cadena,"%9.2f",a_220_dias[i]);
      fprintf(fp,"%14s",fmtnum("zzz,zzz,zzz",cadena,r_t));
      sprintf(cadena,"%9.2f",a_mas_dias[i]);
      fprintf(fp,"%14s",fmtnum("zzz,zzz,zzz",cadena,r_t));
      fprintf(fp,"\n");
 }
 con_lin+=2;
 if(i==3) {
   strcpy(mensajes,"PORCENTAJES");
   porcentajes(3);
 }
 borra_acumulados(i);
}

void porcentajes(i)
int i;
{
 if (con_lin > 62)
     titulos();
 if (!strcmp(recobrar,"N") && total_deuda[i] != 0 ) {
      fprintf(fp,"\n%-18s",mensajes);
      sprintf(cadena,"%9.2f",total_deuda[i]/total_deuda[i]*100);
      fprintf(fp,"%13s",fmtnum("zzz.zz%",cadena,r_t));
      sprintf(cadena,"%9.2f",redondo(a_90_dias[i]/total_deuda[i]*100));
      fprintf(fp,"%14s",fmtnum("zzz.zz%",cadena,r_t));
      sprintf(cadena,"%9.2f",redondo(a_120_dias[i]/total_deuda[i]*100));
      fprintf(fp,"%14s",fmtnum("zzz.zz%",cadena,r_t));
      sprintf(cadena,"%9.2f",redondo(a_160_dias[i]/total_deuda[i]*100));
      fprintf(fp,"%14s",fmtnum("zzz.zz%",cadena,r_t));
      sprintf(cadena,"%9.2f",redondo(a_180_dias[i]/total_deuda[i]*100));
      fprintf(fp,"%14s",fmtnum("zzz.zz%",cadena,r_t));
      sprintf(cadena,"%9.2f",redondo(a_220_dias[i]/total_deuda[i]*100));
      fprintf(fp,"%14s",fmtnum("zzz.zz%",cadena,r_t));
      sprintf(cadena,"%9.2f",redondo(a_mas_dias[i]/total_deuda[i]*100));
      fprintf(fp,"%14s",fmtnum("zzz.zz%",cadena,r_t));
      fprintf(fp,"\n");
 }
 con_lin+=2;
}

void borra_acumulados(i)
int i;
{
 total_deuda[i]=0;
 a_90_dias[i]=0;
 a_120_dias[i]=0;
 a_160_dias[i]=0;
 a_180_dias[i]=0;
 a_220_dias[i]=0;
 a_mas_dias[i]=0;
}

void titulo_ciudad()
{
 if (!strcmp(recobrar,"N")) {
      EXEC SQL select nombre into :nomb_ciu
               from   ciudades
               where  codigo = :cod_ciu;

      if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
          fprintf (stderr, "Error leyendo Ciudades (%d)\n", sqlca.sqlcode);

      nomb_ciu.arr   [nomb_ciu.len]  = '\0';
      fprintf(fp,"%s%s%s%s\n\n",enfatizado_on,"     Ciudad : ",nomb_ciu.arr,enfatizado_off);
 }
 con_lin+=2;
}

