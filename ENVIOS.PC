/*****************************************************************
* ROTULODE.C Version 1.0 - Rev 1.2 - May. 29/90.
*
* envios.pc. Listado de Los despachos realizados.
*
* Uso : envios fecha_despacho fecha_ordenes definitivo device
*       userid/password
*
* Martin A. Toloza L. Creado Enero 02-1998.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

void titulos();
void datos_cliente();
				     /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
                                 /* Despachos (C1) */
VARCHAR codigo_cliente[6];
VARCHAR fecha_despacho[30];
double  numero_despacho;
int     a2k;
VARCHAR fechad        [20];
VARCHAR fechao        [20];
                                 /* Clientes (C5) */
VARCHAR nomb_clie     [51];
VARCHAR nomb_ciu      [30];
VARCHAR cliente_ini   [6];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
                                            /* Variables globales del usuario */
char   *fmtnum(), r_t[100];
int     con_pag;                                   /* Contador de Paginas */
int     con_lin=61;                                /* Contador de Lineas  */
int	  staora =0;
char    definitivo[2];

char    cadena[20];

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int   i=0;
int	status = 0;

    if (argc < 6)
       {
	printf ("Incorrecta invocacion:\n");
	printf ("Uso : envios fecha_despacho fecha_ordenes definitivo device userid/password\n");
	printf ("      device : t salida por terminal\n");
	printf ("      device : s salida standar     \n");
	printf ("               Px salida por impresora (x nro printer)\n");
	printf ("               userid/password nombre usuario y password\n");
        exit (1);
       }

       strcpy (fechad.arr, argv[1]);
       fechad.len   =      strlen(fechad.arr);
       strcpy (fechao.arr, argv[2]);
       fechao.len   =      strlen(fechao.arr);
       if ( strlen(fechad.arr) != 8 || strlen(fechao.arr) != 8 ) {
          printf("Error, la fecha debe ser de 8 digitos y formato AAAAMMDD");
          exit (1);
       }
       strcpy (definitivo, argv[3]);
       strlow (definitivo);
       strcpy (device,     argv[4]);
       strlow (device);

    if (!strpos ("/", argv[5]))
       {
        printf ("user id/password incorrecto.\n");
	exit (1);
       }

    strcpy (uid.arr,   argv[5]);
    uid.len   =        strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora("1");

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/
  EXEC SQL select y2k
           into   :a2k
           from   ano2000;
  if (sqlca.sqlcode != 0 ) {
     fprintf (stderr, "Error, No existe registro alguno en tabla Y2K (%d)\n", sqlca.sqlcode);
     exit (1);
  }

    EXEC SQL DECLARE C1 CURSOR FOR
             select dc.codigo_cliente,
                    decode(to_char(dc.fecha,'mm'),'01','Ene','02','Feb',
                    '03','Mar','04','Abr','05','May','06','Jun','07','Jul',
                    '08','Ago','09','Sep','10','Oct','11','Nov',
                    '12','Dic','xx')||to_char(dc.fecha,' dd/yyyy'),
                    dc.numero_despacho
             from  despachos d, ordenes_c o, despachoc dc
             where d.numero_despacho  = dc.numero_despacho                 and
                   o.fecha_documento >= to_date(substr(:fechao,1,6)||lpad(to_number(decode(substr(:fechao,7,2),15,1,16)),2,0),'yyyymmdd') and
                   o.fecha_documento <= to_date(:fechao,'yyyymmdd')        and
                   dc.codigo_cliente  = o.codigo_cliente                   and
                   dc.fecha          <= to_date(:fechad,'yyyymmdd')        and
                   nvl(dc.estado,0)   = 0
             group by dc.codigo_cliente, dc.fecha, dc.numero_despacho
             order by dc.codigo_cliente, dc.fecha, dc.numero_despacho;

    EXEC SQL OPEN C1;

    if (strcmp(definitivo,"s")) {

       staora  = 0;
       while (staora == 0) {
              EXEC SQL FETCH C1 INTO :codigo_cliente, :fecha_despacho,
                                     :numero_despacho;

              staora  = sqlca.sqlcode;
              if (staora ==  1403) break;
              if (staora == -1405)
                  staora  = 0;
              else if (staora)
                       fprintf (stderr, "Error leyendo C1 (%d)\n", staora);

              codigo_cliente.arr [codigo_cliente.len] = '\0';
              fecha_despacho.arr [fecha_despacho.len] = '\0';

              if (con_lin > 60)
                  titulos();
              if (strcmp(cliente_ini.arr, codigo_cliente.arr)) {
                  if (i < 4) {
                     fprintf(fp,"%s","\n");
                     con_lin++;
                     i=0;
                  }
                  datos_cliente();
              }
              fprintf (fp,"%9.0f%11s",numero_despacho,fecha_despacho.arr);
              i++;
              if (i == 4) {
                 fprintf(fp,"\n");
                 con_lin++;
                 i=0;
              }
       }
       fprintf(fp,"\n");
       con_lin++;

       EXEC SQL delete from envios
                where ano_mes = (select ano||lpad(mes_proceso,2,0)
                                 from control_fac
                                 where codigo_emp = 1)    and
                      numero_quincena = (select numero_quincena
                                         from control_fac
                                         where codigo_emp = 1);

       if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
           fprintf (stderr, "Error Borrando C3 (%d)\n", sqlca.sqlcode);

       EXEC SQL insert into envios
             (CODIGO_CLIENTE,CANTIDAD,VALOR,ANO_MES,NUMERO_QUINCENA)
             select dc.codigo_cliente, count(distinct dc.numero_despacho), NULL,
                    ano||lpad(mes_proceso,2,0), numero_quincena
             from  despachos d, ordenes_c o, despachoc dc, control_fac cf
             where o.codigo_cliente   = dc.codigo_cliente                 and
                   nvl(dc.estado,0)   = 0                                 and
                   dc.fecha          <= to_date(:fechad,'yyyymmdd')       and
                   cf.codigo_emp      = 1                                 and
                   d.numero_despacho  = dc.numero_despacho                and
                   o.fecha_documento >= to_date(substr(:fechao,1,6)||lpad(to_number(decode(substr(:fechao,7,2),15,1,16)),2,0),'yyyymmdd') and
                   o.fecha_documento <= to_date(:fechao,'yyyymmdd')
             group by dc.codigo_cliente, ano, mes_proceso, numero_quincena;

       if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
           fprintf (stderr, "Error Insertando C4 (%d)\n", sqlca.sqlcode);
    }
    cierre_impresora();

    if (!strcmp(definitivo,"s")) {
        EXEC SQL update despachoc
                 set estado = 1
                 where nvl(estado,0) = 0 and
                       numero_despacho in
                       (select dc.numero_despacho
                        from despachos d, ordenes_c o, despachoc dc
                        where dc.numero_despacho = d.numero_despacho           and
                              nvl(dc.estado,0)   = 0                           and
                              dc.fecha          <= to_date(:fechad,'yyyymmdd') and
                              o.fecha_documento <= to_date(:fechao,'yyyymmdd') and
                              d.numero_orden     = o.numero_orden);

        if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
            fprintf (stderr, "Error Actualizando C2 (%d)\n", sqlca.sqlcode);
    }

    EXEC SQL CLOSE C1;

    EXEC SQL COMMIT WORK RELEASE;

    exit   (0);
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
    con_pag++;
    fprintf(fp,"%s",salte_pagina);
    fprintf(fp,"%s%s%s%s\n\n",diezcpi,ancho_on,"Laboratorio oftalmico de la costa ltda.",ancho_off);
    fprintf(fp,"%s%s%40s%s%s",condensado_on,ancho_on,"Control de despachos ",condensado_off,ancho_off);
    fprintf(fp,"%20s%2d\n\n","Pagina # ", con_pag);
    strcpy (cadena,fechad.arr);
    valfec(cadena);
    fprintf(fp,"%40s%25s\n\n","Fecha de corte ",cadena);
    fprintf(fp," NUMERO             NUMERO             NUMERO             NUMERO \n");
    fprintf(fp," DESPACHO FECHA     DESPACHO FECHA     DESPACHO FECHA     DESPACHO FECHA     \n");
    fprintf(fp," -------- --------- -------- --------- -------- --------- -------- --------- \n");
    con_lin = 9;
    datos_cliente();
}

void datos_cliente()
{
    strcpy(cliente_ini.arr, codigo_cliente.arr);
    cliente_ini.len =   strlen(cliente_ini.arr);

    EXEC SQL select n.nombre, nvl(n.nombre_muni,c.nombre)
             into :nomb_clie, :nomb_ciu
             from   clientes cl, nits n, ciudades c
             where  cl.codigo_cliente =  :cliente_ini  and
                    cl.codigo_nit     = n.codigo_nit   and
                    n.codigo_ciu      = c.codigo;

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo C5 (%d)\n", sqlca.sqlcode);
    nomb_clie.arr   [nomb_clie.len] = '\0';
    nomb_ciu.arr    [nomb_ciu.len]  = '\0';
  /*strorg(nomb_clie.arr,1,37); */
    strorg(nomb_ciu.arr,1,19);
    fprintf (fp,"\n%s %s %s\n\n",codigo_cliente.arr,nomb_clie.arr,nomb_ciu.arr);
    con_lin+=3;
}
