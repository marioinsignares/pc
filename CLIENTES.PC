/*****************************************************************
* ROTULODE.C Version 1.0 - Rev 1.2 - May. 29/90.
*
* clientes.c Programa que lista los clientes
*
* Uso : clientes device copias userid/password
*
* Martin A. Toloza L. Creado Diciembre 17-1997.
* Teodoro Tarud & Cia Ltda.
*
*/


#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <setjmp.h>
#include <stdlib.h>
#include <sqlproto.h>
#include <math.h>

void telefonos();
void contacto();
void titulos();

double redondo();
				     /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100]; 
                                 /* Nits (C1) */
VARCHAR codigo_cliente[6];
VARCHAR nomb_clie     [45];
VARCHAR nomb_ciu      [21];
VARCHAR direccion     [46];
double  nit;
int     digito;
double  codigo_nit;
VARCHAR codigo_clii   [6];
VARCHAR codigo_clif   [6];
                                 /* Ciudades (C2) */
VARCHAR nombre_ciu    [21];
VARCHAR codigo_ciu    [3];
                                 /* Telefonos (C3) */
double  telefono;
VARCHAR codigo_nit_c  [6];
                                 /* Representa (C4) */
VARCHAR nomb_repre    [31];
VARCHAR cargo         [21];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;

#define A_F1 "###,###,###.##"

                                            /* Variables globales del usuario */
char *fmtnum(), r_t[80];
int     con_pag;                                   /* Contador de Paginas */
int     con_lin;                                   /* Contador de Lineas  */
int	staora = 0;
int	oraest = 0;
int     traidos= 0;
char    copias[3];
char    codigo_ant[3];
char    repre[4];

char    cadena[100];
char    cadena2[20];
char    cadena3[120];

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

if (argc < 7)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : clientes clie_ini clie_fin lista_representante (s/n) device copias userid/password\n");
    printf ("      device : t salida por terminal\n");
    printf ("               Px salida por impresora (x nro printer)\n");
    printf ("               userid/password nombre usuario y password\n");
    exit (1);
   }

strcpy (codigo_clii.arr, argv[1]);
codigo_clii.len  =       strlen(codigo_clii.arr);
strcpy (codigo_clif.arr, argv[2]);
codigo_clif.len  =       strlen(codigo_clif.arr);
strcpy (repre,       argv[3]);
strlow (repre);
strcpy (device,      argv[4]);
strlow (device);
strcpy (copias,      argv[5]);

if (!strpos ("/", argv[6]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,   argv[6]);
uid.len   =        strlen(uid.arr);
printf ("%s\n",uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

    EXEC SQL DECLARE C1 CURSOR FOR
             select cl.codigo_cliente, n.nombre, nvl(n.nombre_muni,c.nombre),
                    n.direccion, n.nit, nvl(digito,-1), n.codigo_nit
	     from nits n, ciudades c, clientes cl
             where n.codigo_nit       = cl.codigo_nit                     and
                   n.codigo_ciu       = c.codigo                          and
                   cl.codigo_cliente >= :codigo_clii                      and
                   cl.codigo_cliente <= :codigo_clif
             group by cl.codigo_cliente, n.nombre, n.nombre_muni, c.nombre,
                       n.direccion, n.nit, digito, n.codigo_nit
             order by cl.codigo_cliente;

    EXEC SQL DECLARE C3 CURSOR FOR
             select nvl(numero,0)
             from   telefonos
             where  codigo_nit = :codigo_nit_c
             order  by orden;

    EXEC SQL DECLARE C4 CURSOR FOR
             select nombre, cargo
             from   representa
             where  codigo_nit = :codigo_nit_c;

    EXEC SQL OPEN C1;
    strcpy(codigo_ant,"**");
    staora  = 0;
 while (staora == 0) {

        EXEC SQL FETCH C1 INTO :codigo_cliente, :nomb_clie, :nomb_ciu,
                               :direccion, :nit, :digito, :codigo_nit;

        staora  = sqlca.sqlcode;
        if (staora ==  1403) break;
        if (staora == -1405) {
            staora  = 0;
            if (!strlen(nomb_ciu.arr)) {
                strcpy (nomb_ciu.arr, "");
                nomb_ciu.len = 0;
            }
        }
        else if (staora)
                 fprintf (stderr, "Error leyendo C1 (%d)\n", staora);

        codigo_cliente.arr  [codigo_cliente.len] = '\0';
        nomb_clie.arr       [nomb_clie.len]      = '\0';
        nomb_ciu.arr        [nomb_ciu.len]       = '\0';
        direccion.arr       [direccion.len]      = '\0';

        strcpy(codigo_ciu.arr,codigo_cliente.arr);
        strorg(codigo_ciu.arr,1,2);

        if (strcmp(codigo_ciu.arr,codigo_ant)) {
            codigo_ciu.len = strlen(codigo_ciu.arr);
            EXEC SQL select nombre into :nombre_ciu
                     from   ciudades
                     where  codigo = :codigo_ciu;
            if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) 
                fprintf (stderr, "Error leyendo C2 (%d)\n", sqlca.sqlcode);
            nombre_ciu.arr  [nombre_ciu.len]     = '\0';
            strcpy(codigo_ant,codigo_ciu.arr);
            titulos();
        }
        if (con_lin > 60)
            titulos();
        sprintf (codigo_nit_c.arr,"%5.0f",codigo_nit);
        codigo_nit_c.len = strlen(codigo_nit_c.arr);

        telefonos();
        sprintf (cadena,"%12.0f",nit);
        fprintf (fp,"%5s %-45s %-45s %-20s %17s %18s",codigo_cliente.arr,nomb_clie.arr,direccion.arr,nomb_ciu.arr,cadena2,fmtnum("zzz,zzz,zzz,zzz",cadena,r_t));
        if (digito > 0) {
           sprintf (cadena,"%d",digito);
           fprintf (fp,"-%s",fmtnum("z",cadena,r_t));
        }
        else if (digito == 0)
                fprintf (fp,"-%s","0");
        if (!strcmp(repre,"s")) {
            contacto();
            fprintf (fp,"\r      %-45s",nomb_clie.arr);
            if (strcmp(cadena3,"")) {
                fprintf(fp,"\n%s",cadena3); 
                con_lin++;
            }
        }
        fprintf (fp,"\n");
        con_lin++;
        digito=0;
 }

 cierre_impresora();

 EXEC SQL CLOSE C1;
 EXEC SQL CLOSE C3;
 EXEC SQL CLOSE C4;

 EXEC SQL COMMIT WORK RELEASE;

 exit   (0);
}

void telefonos()
{
 strcpy(cadena2,"");
 traidos = 0;
 oraest  = 0;
 EXEC SQL OPEN C3;
 while (oraest == 0) {

        EXEC SQL FETCH C3 INTO :telefono;

        oraest  = sqlca.sqlcode;
        if (oraest == 1403 || traidos == 2) break;
        if (oraest != 1403 && oraest != 0) 
            fprintf (stderr, "Error leyendo C3 (%d)\n", oraest);

        traidos++;
        if (traidos == 1) {
            sprintf (cadena,"%8.0f",telefono);
            strcpy  (cadena2,cadena);
        }
        else {
             if (telefono > 0) {
                 sprintf (cadena,"-%8.0f",telefono);
                 strcat  (cadena2,cadena);
             }
        }
 }
 EXEC SQL CLOSE C3;
}

void contacto()
{
 strcpy(cadena3,"      ");
 traidos = 0;
 oraest  = 0;
 EXEC SQL OPEN C4;
 while (oraest == 0) {

        EXEC SQL FETCH C4 INTO :nomb_repre, :cargo;

        oraest  = sqlca.sqlcode;
        if (oraest == 1403 || traidos == 2) break;
        if (oraest != 1403 && oraest != 0) 
            fprintf (stderr, "Error leyendo C4 (%d)\n", oraest);

        nomb_repre.arr  [nomb_repre.len] = '\0';
        cargo.arr       [cargo.len] = '\0';
        traidos++;
        if (traidos == 1) {
            strcat  (cadena3,nomb_repre.arr);
            strcat  (cadena3,", ");
            strcat  (cadena3,cargo.arr);
        }
        else {
             if (strcmp(nomb_repre.arr,"")) {
                 strcat(cadena3," - ");
                 strcat(cadena3,nomb_repre.arr);
                 strcat(cadena3,", ");
                 strcat(cadena3,cargo.arr);
             }
        }
 }
 EXEC SQL CLOSE C4;
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
 char fecha[20];
 con_pag++;
 fprintf (fp,"%s",salte_pagina);
 fprintf (fp,"%s%s%s%s\n\n",diezcpi,ancho_on,"           TEODORO TARUD & CIA LTDA.",ancho_off);
 fecha_system(fecha);
 fprintf (fp,"%20s%35s%20s%d\n\n",fecha," LISTADO DE CLIENTES","Pagina # ",con_pag);
 fprintf (fp,"%s\n\n",nombre_ciu.arr);
 fprintf (fp,"%s\n","CODIG");
 fprintf (fp,"%s%s %-45s %-45s %-20s %15s %18s\n\n",condensado_on,"CLIEN","NOMBRE","DIRECCION","CIUDAD","TELEFONO(S)","NIT");
 con_lin=10;
}
