/*****************************************************************
* ROTULOS.C Version 1.0 - Rev 1.2 - May. 29/90.
*
* ordenes.c. Listado de Los Rotulos de despacho.
*
* Uso : ordenes numero_orden fecha_documento device userid/password
*
* Mario E. Santiago I. Creado Junio 9-1990.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

void titulos();
void lista_ordenes();
void telefonos();

				     /* Parametros de comunicacion con ORACLE */

                                            /* Variables globales del usuario */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
VARCHAR codigo_cliente[8];
VARCHAR nomb_clie[41];
VARCHAR nomb_ciu[22];
VARCHAR direccion[46];
double  telefono;
VARCHAR codigo_nit_c[6];
double  numero_despacho;
double  numero_orden;
VARCHAR mensaje[102];
VARCHAR despacho[10];
VARCHAR cliente[6];
VARCHAR fecha[20];
int     tot_pag;


EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;

int     con_pag;                                   /* Contador de Paginas */
int     con_lin;                                   /* Contador de Lineas  */
int     aa;
int     mm;
int     dd;
int     oraest  = 0;
int     traidos = 0;
        		                /* Variables de recepcion para datos */
char    direcc[45];
char    mensaje1[100];
char    mensaje2[100];

char    cadena [100];
char    wcadena[100];
char    cadena2[100];

void main(argc, argv)
int     argc;
char    *argv[];
{
char	device[6];
int	status = 0;

    if (argc < 6)
       {
	printf ("Incorrecta invocacion:\n");
	printf ("Uso : rotulode fecha('DD-MON-YYYY') codigo_cliente numero_despacho device userid/password\n");
	printf ("      device : t salida por terminal\n");
	printf ("      device : s salida standar     \n");
	printf ("               Px salida por impresora (x nro printer)\n");
	printf ("               userid/password nombre usuario y password\n");
        exit (1);
       }

       strcpy (fecha.arr,argv[1]);
       fecha.len = strlen(fecha.arr);
       strupp(fecha.arr);
       fecha.len = strlen(fecha.arr);
       if ( strlen(fecha.arr) != 11 ) {
          printf("Error, la fecha debe ser de 11 digitos y formato DD-MON-YYYY %s",fecha.arr);
          getchar();
          exit (1);
       }

       strcpy (codigo_cliente.arr,(argv[2]));
       codigo_cliente.len = strlen(codigo_cliente.arr);

       strcpy (despacho.arr, argv[3]);
       despacho.len = strlen(despacho.arr);

       strcpy (device,  argv[4]);
       strlow (device);

       if (!strpos ("/", argv[5]))
       {
          printf ("user id/password incorrecto.\n");
	        exit (1);
       }

       strcpy (uid.arr,    argv[5]);
       uid.len   =  strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/

    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
      	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	  sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora("1");

/************************************************
 * Recuperar datos en el area de datos definida *
 * una fila al tiempo. (ofetch).                *
 * Aqui se hace la primera lectura del cursor 0.*
 ************************************************/

/* C4 */

    EXEC SQL select mensaje
             into  :mensaje
             from   mensajes;

    mensaje.arr   [mensaje.len] = '\0';

/* C3 */
    EXEC SQL select ceil(count(*)/25)
             into  :tot_pag
             from   despachoc
             where  codigo_cliente_e  = :codigo_cliente and
                    fecha             = to_date(:fecha,'DD-MON-YYYY') and
                    numero_despacho_e = :despacho;

/* C1 */
    EXEC SQL select cl.codigo_cliente, n.nombre,
                    nvl(n.ciudad_env,nvl(n.nombre_muni,c.nombre)),
                    nvl(n.direccion2,n.direccion), n.codigo_nit
             into  :cliente, :nomb_clie, :nomb_ciu, :direccion, :codigo_nit_c
             from   nits n, ciudades c, clientes cl
             where  n.codigo_nit      = cl.codigo_nit            and
                    n.codigo_ciu      = c.codigo                 and
                    cl.codigo_cliente = :codigo_cliente
             group by cl.codigo_cliente, n.nombre, n.nombre_muni, c.nombre,
                      n.direccion, n.ciudad_env, n.direccion2, n.codigo_nit;

    cliente.arr     [cliente.len]   = '\0';
    nomb_clie.arr   [nomb_clie.len] = '\0';
    nomb_ciu.arr    [nomb_ciu.len]  = '\0';
    direccion.arr   [direccion.len] = '\0';

/* C2 */
    EXEC SQL DECLARE C2 CURSOR FOR
             select nvl(numero_despacho,0)
             from   despachoc
             where  codigo_cliente_e = :codigo_cliente and
                    fecha            = to_date(:fecha,'DD-MON-YYYY') and
                    numero_despacho_e = :despacho;

    EXEC SQL OPEN C2;

    fprintf (fp, "%s%c\r",set_vertical,18);

    EXEC SQL DECLARE C3 CURSOR FOR
             select nvl(numero,0)
             from   telefonos
             where  codigo_nit = :codigo_nit_c
             order  by orden;

    titulos();

    cierre_impresora();
/************************************************
 * Desconectarse de ORACLE. (ologof)            *
 ************************************************/
    EXEC SQL CLOSE C2;

    EXEC SQL COMMIT WORK RELEASE;
    exit   (0);
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
  char *fmtnum();
  int i, j, k, nl;
  while (!oraest) {
    con_pag++;
//    fprintf (fp,"%s                                 %5.0f%s%s\n",ancho_on,numero_despacho,ancho_off,alto_off);
//  fprintf (fp,"%-65s%s%5.0f%s%s\n","                                 ",ancho_on,numero_despacho,ancho_off,alto_off);
    fprintf (fp,"%-65s%s%5s%s\n","                                 ",ancho_on,despacho.arr,ancho_off);
    strorg(nomb_clie.arr,1,38);
    nomb_clie.len = strlen(nomb_clie.arr);
    strorg(nomb_clie.arr,1,38);
    fprintf (fp,"%s%-8s%66s%d%s%d\n\n%-40s  %-38s\n",diezcpi,cliente.arr,"Pagina # ",con_pag," de ",tot_pag,nomb_clie.arr,nomb_clie.arr);
    if (strlen(direccion.arr) > 37) {
        nl=strlen(direccion.arr);
        i=25;
        while (direccion.arr[i]!=' ')
               i--;
        for (j=0;j<i;j++) {
            direcc[j]=direccion.arr[j];
        }
        direcc[j+1]='\0';
        fprintf (fp,"       %s\n",direcc);
        k=0;
        for (j=i+1;j<=nl;j++) {
            direcc[k]=direccion.arr[j];
            k++;
        }
        direcc[j+1]='\0';
        fprintf (fp,"       %s\n",direcc);
    }
    else fprintf (fp,"\n%s\n",direccion.arr);

    fprintf (fp,"%41s"," ");
    i=0;
    for (i=1;i<6;i++) {
        lista_ordenes();
    }
    
    fprintf (fp,"\n");
    strorg(nomb_ciu.arr,1,18);
    nomb_ciu.len = strlen(nomb_ciu.arr);

    telefonos();
    fprintf (fp,"%-18s%-17s",nomb_ciu.arr,cadena2);

    fprintf (fp,"%6s"," ");
    i=0;
    for (i=1;i<6;i++) {
        lista_ordenes();
    }
    fprintf (fp,"\n");
    fprintf (fp,"%41s"," ");
    i=0;
    for (i=1;i<6;i++) {
        lista_ordenes();
    }
    fprintf (fp,"\n");
    strcpy(cadena,fecha.arr);
    strcpy(wcadena,cadena);
    fecha_oracle(wcadena);
    strcpy(cadena,wcadena);
    fprintf (fp,"%-20s  %s%s%6s%s%s",cadena,alto_on,ancho_on,despacho.arr,ancho_off,alto_off);
    fprintf (fp,"%7s"," ");
    i=0;
    for (i=1;i<6;i++) {
        lista_ordenes();
    }
    fprintf (fp,"\n");
    fprintf (fp,"%41s","                                         ");
    for (i=1;i<6;i++) {
        lista_ordenes();
    }
    fprintf (fp,"\n");
/*      fprintf (fp,"%41s"," ");
    for (i=1;i<6;i++) {
     lista_ordenes();
    }  */
    con_lin = 11;
    strcpy(mensaje1,mensaje.arr);
    strorg(mensaje1,1,65);
    strcpy(mensaje2,mensaje.arr);
    strorg(mensaje2,66,34);
    fprintf (fp,"%42s%s%s%s"," ",condensado_on,mensaje1,condensado_off);
    fprintf (fp,"%s\n",line_feed8vo);
//  fprintf (fp,"%42s%s%s%s\n\n\n%s%s"," ",condensado_on,mensaje2,condensado_off,line_feed6,salte_pagina);
    fprintf (fp,"%42s%s%s%s\n\n\n%s"," ",condensado_on,mensaje2,condensado_off,line_feed6);
    for(i=1;i<=3;++i)
        fprintf (fp,"\n");
    con_lin = 18;
  }
}

void lista_ordenes()
{
  if (!oraest) {

      EXEC SQL FETCH C2 INTO :numero_orden;

      oraest  = sqlca.sqlcode;
      if (oraest == -1405)
          oraest  = 0;
      else if (oraest)
               fprintf (stderr, "Error leyendo C2 (%d)\n", oraest);

      fprintf (fp,"%s ",elite);
      if (!oraest) {
             if (numero_orden > 0)
                fprintf (fp,"%8.0f",numero_orden);
             else
                fprintf (fp,"%8s"," ");
      }
      fprintf (fp,"%s",diezcpi);
  }
}

void telefonos()
{
 int     oraest3 = 0;
 strcpy(cadena2,"");
 traidos = 0;
 EXEC SQL OPEN C3;
 while (oraest3 == 0) {

        EXEC SQL FETCH C3 INTO :telefono;

        oraest3  = sqlca.sqlcode;
        if (oraest3 == 1403 || traidos == 2) break;
        if (oraest3 != 1403 && oraest3 != 0)
            fprintf (stderr, "Error leyendo C3 (%d)\n", oraest3);

        traidos++;
        if (traidos == 1) {
            sprintf (cadena,"%8.0f",telefono);
            strcpy  (cadena2,cadena);
        }
        else {
             if (telefono > 0) {
                 sprintf (cadena,"-%7.0f",telefono);
                 strcat  (cadena2,cadena);
             }
        }
 }
 EXEC SQL CLOSE C3;
}
