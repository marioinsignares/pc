/*****************************************************************
* ROTULODE.C Version 1.0 - Rev 1.2 - May. 29/90.
*
* clientes.c Programa que lista los clientes
*
* Uso : clientes device copias userid/password
*
* Martin A. Toloza L. Creado Diciembre 17-1997.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <setjmp.h>
#include <stdlib.h>
#include <math.h>

void telefonos();
void contacto();
void titulos();

double redondo();
				     /* Parametros de comunicacion con ORACLE */
        		             /* Variables de recepcion para datos */
EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
VARCHAR nomb_emp   [61];
double  nit;
int     digito;
VARCHAR codigo_emp [03];
                                 /* Nits (C1) */
VARCHAR codigo_cliente[6];
VARCHAR nomb_clie     [45];
VARCHAR nomb_ciu      [21];
VARCHAR direccion     [46];
double  nit;
int     digito;
double  codigo_nit;
float   dcto_financ;
float   dcto_cial;
float   ptaje;
int     lista;
VARCHAR contado       [10];
VARCHAR codigo        [40];
VARCHAR ar            [30];
VARCHAR codigo_clii   [6];
VARCHAR codigo_clif   [6];
                                 /* Ciudades (C2) */
VARCHAR nombre_ciu    [21];
VARCHAR codigo_ciu    [3];
                                 /* Telefonos (C3) */
double  telefono;
VARCHAR codigo_nit_c  [6];
                                 /* Representa (C4) */
VARCHAR nomb_repre    [31];
VARCHAR cargo         [21];

VARCHAR tipo_trabajo  [20];
double  valor_unidad;
double  valor_unidad2;

VARCHAR codigo_articulo [20];
double  valor_venta;
double  valor_venta2;
double  ref_descto;

VARCHAR fecha_ini     [20];
VARCHAR fecha_fin     [20];
VARCHAR codigo_ini    [20];
VARCHAR codigo_fin    [20];
double  valor;
double  valor_total;
VARCHAR fec_dcto_cial[20]; 
VARCHAR fec_dcto_financ[20];
VARCHAR fecha_ot[20];
VARCHAR marca[2];
VARCHAR fecha_pre[20];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;

#define A_F1 "###,###,###.##"

                                            /* Variables globales del usuario */
char *fmtnum(), r_t[80];
int     con_pag;                                   /* Contador de Paginas */
int     con_pagr;
int     con_lin= 63;                                   /* Contador de Lineas  */
int	staora = 0;
int	oraest = 0;
int     traidos= 0;
int     c;
char    copias[3];
char    codigo_ant[3];
char    repre[4];
char    orden[4];
char    paretto[4];

char    fechas[90];
char    fecha [70];
char    cadena[100];
char    cadena2[120];
char    cadena3[120];
char    cadena4[20];
double  porcentaje;
double  valor_parcial;
char    lprecio[22][150];

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

if (argc < 8)
   {
    printf ("Incorrecta invocacion:\n");
    printf ("Uso : clienteslp lista_representante (s/n) orden de codigo(s/n) con paretto(s/n) codigo_ini codigo_fin fecha_ini fecha_fin device pag_recupera userid/password\n");
    printf ("      device : t salida por terminal\n");
    printf ("               Px salida por impresora (x nro printer)\n");
    printf ("               userid/password nombre usuario y password\n");
    exit (1);
   }

strcpy (repre,    argv[1]);
strlow (repre);
strcpy (orden,    argv[2]);
strlow (orden);
strcpy (paretto,  argv[3]);
strlow (paretto);
strcpy (codigo_ini.arr,argv[4]);
codigo_ini.len   =     strlen(codigo_ini.arr);
strcpy (codigo_fin.arr,argv[5]);
codigo_fin.len   =     strlen(codigo_fin.arr);
strcpy (fecha_ini.arr, argv[6]);
fecha_ini.len   =      strlen(fecha_ini.arr);
strcpy (fecha_fin.arr, argv[7]);
fecha_fin.len   =      strlen(fecha_fin.arr);
if ( strlen(fecha_ini.arr) != 8 || strlen(fecha_fin.arr) != 8 ) {
   printf("Error, la fecha debe ser de 8 digitos y formato AAAAMMDD");
   exit (1);
}
strcpy (device,   argv[8]);
strlow (device);
strcpy (copias,   "1");
strcpy (cadena, argv[9]);
strorg (cadena,1,4);
con_pagr = atoi(cadena);

strcpy(fecha,fecha_ini.arr);
fecha_oracle3(fecha);
strcpy(cadena,fecha);
strcpy(fecha,fecha_fin.arr);
strcat(cadena," hasta ");
fecha_oracle3(fecha);
strcat(cadena,fecha);
strcpy(fechas,cadena);

if (!strpos ("/", argv[10]))
   {
    printf ("user id/password incorrecto.\n");
    exit (1);
   }

strcpy (uid.arr,   argv[10]);
uid.len   =        strlen(uid.arr);
printf ("%s\n",uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/
    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);

/**********************************************
 * Procesar una sentencia SQL (oexec).        *
 **********************************************/

   EXEC SQL delete from paretto;

   if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
       fprintf (stderr, "Error Borrando Paretto (%d)\n", sqlca.sqlcode);
/*                   sum(nvl(valor_oftalmica,0)+nvl(valor_contacto,0)-nvl(rete_fte,0))*/

   EXEC SQL insert into paretto
            select codigo_cliente,
                   sum(valor_neto)
            from  facturas f
            where tipo_documento  in ('F','C')                       and
                  fecha_documento >= to_date(:fecha_ini,'yyyymmdd')  and
                  fecha_documento <= to_date(:fecha_fin,'yyyymmdd')  and
                  estado_factura   = 0                               and
              not exists
              (select 'x'
               from   basura
               where  f.tipo_factura   = tipo_factura   and
                      f.tipo_documento = tipo_documento and
                      f.numero_factura = numero_factura)
            group by codigo_cliente;

   EXEC SQL select sum(valor)
            into  :valor_total
            from   paretto
            where  valor > 0;

   if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
       fprintf (stderr, "Error Insertando Paretto C1(%d)\n", sqlca.sqlcode);

   oraest  = sqlca.sqlcode;
   if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
       fprintf (stderr, "Error Leyendo Paretto C4(%d)\n", sqlca.sqlcode);

    EXEC SQL DECLARE C1 CURSOR FOR
             select cl.codigo_cliente, n.nombre, n.codigo_nit, nvl(cl.dcto_financ,0), nvl(cl.dcto_cial,0), 
                    cl.lista, decode(nvl(cl.contado,'0'),'0',' ','CONTADO'), nvl(p.codigo,'N'), nvl(os.ptaje,op.ptaje), 
                    nvl(to_char(cl.fec_dcto_cial,'DD-MON-YYYY'),' '), 
                    nvl(to_char(cl.fec_dcto_financ,'DD-MON-YYYY'),' '),
                    decode(ot.marca,0,nvl(to_char(ot.fecha,'DD-MON-YYYY'), ' '),' ') as fecha_ot,
                    decode(ot.marca,1,'*',' ') as marca
	           from nits n, ciudades c, clientes cl, preferencia p, opticasp op, opticass os, opticast ot
             where n.codigo_nit       = cl.codigo_nit                     and
                   n.codigo_ciu       = c.codigo                          and
                   cl.codigo_cliente  = p.codigo_cliente(+)               and
                   cl.codigo_cliente  = op.codigo_cliente(+)              and
                   cl.codigo_cliente  = os.codigo_cliente(+)              and
                   cl.codigo_cliente  = ot.codigo_cliente(+)              and
                   cl.estado         <> 'R'                               and
                   cl.codigo_cliente >= :codigo_ini                       and
                   cl.codigo_cliente <= :codigo_fin
             group by cl.codigo_cliente, n.nombre, n.codigo_nit, cl.dcto_financ, cl.dcto_cial, cl.lista, cl.contado, p.codigo, op.ptaje,
                      os.ptaje, cl.fec_dcto_cial, cl.fec_dcto_financ, ot.fecha, ot.marca 
             order by cl.codigo_cliente, n.nombre;

    EXEC SQL DECLARE C1A CURSOR FOR
             select cl.codigo_cliente, n.nombre, n.codigo_nit, nvl(cl.dcto_financ,0), nvl(cl.dcto_cial,0), 
                    cl.lista, decode(nvl(cl.contado,'0'),'0',' ','CONTADO'), nvl(p.codigo,'N'), nvl(os.ptaje,op.ptaje),
                    nvl(to_char(cl.fec_dcto_cial,'DD-MON-YYYY'),' '), 
                    nvl(to_char(cl.fec_dcto_financ,'DD-MON-YYYY'),' '),
                    nvl(to_char(ot.fecha,'DD-MON-YYYY'), ' ') as fecha_ot,
                    decode(ot.marca,1,'*',' ') as marca
      	     from nits n, ciudades c, clientes cl, preferencia p, opticasp op, opticass os, opticast ot
             where n.codigo_nit       = cl.codigo_nit                     and
                   n.codigo_ciu       = c.codigo                          and
                   cl.codigo_cliente  = p.codigo_cliente(+)               and
                   cl.codigo_cliente  = op.codigo_cliente(+)              and
                   cl.codigo_cliente  = os.codigo_cliente(+)              and
                   cl.codigo_cliente  = ot.codigo_cliente(+)              and
                   cl.estado         <> 'R'                               and
                   cl.codigo_cliente >= :codigo_ini                       and
                   cl.codigo_cliente <= :codigo_fin
             group by cl.codigo_cliente, n.nombre, n.codigo_nit, cl.dcto_financ, cl.dcto_cial, cl.lista, cl.contado, p.codigo, op.ptaje,
                      os.ptaje, cl.fec_dcto_cial, cl.fec_dcto_financ, ot.fecha, ot.marca 
             order by cl.lista desc, cl.contado, cl.dcto_financ, p.codigo, cl.codigo_cliente;

    EXEC SQL DECLARE C1B CURSOR FOR
             select cl.codigo_cliente, n.nombre, n.codigo_nit, nvl(cl.dcto_financ,0), nvl(cl.dcto_cial,0), 
                    cl.lista, decode(nvl(cl.contado,'0'),'0',' ','CONTADO'), nvl(p.codigo,'N'), nvl(os.ptaje,op.ptaje), pr.valor, 
                    nvl(to_char(cl.fec_dcto_cial,'DD-MON-YYYY'), ' '), 
                    nvl(to_char(cl.fec_dcto_financ,'DD-MON-YYYY'), ' '),
                    nvl(to_char(ot.fecha,'DD-MON-YYYY'), ' ') as fecha_ot,
                    decode(ot.marca,1,'*',' ') as marca
	           from nits n, ciudades c, clientes cl, preferencia p, opticasp op, opticass os, paretto pr, opticast ot
             where n.codigo_nit       = cl.codigo_nit                     and
                   n.codigo_ciu       = c.codigo                          and
                   cl.codigo_cliente  = p.codigo_cliente(+)               and
                   cl.codigo_cliente  = op.codigo_cliente(+)              and
                   cl.codigo_cliente  = os.codigo_cliente(+)              and
                   cl.codigo_cliente  = ot.codigo_cliente(+)              and
                   cl.estado         <> 'R'                               and
                   cl.codigo_cliente >= :codigo_ini                       and
                   cl.codigo_cliente <= :codigo_fin                       and
                   cl.codigo_cliente  = pr.codigo_cliente
             group by pr.valor, cl.codigo_cliente, n.nombre, n.codigo_nit, cl.dcto_financ, cl.dcto_cial, cl.lista, cl.contado, p.codigo, op.ptaje,
                      os.ptaje, cl.fec_dcto_cial, cl.fec_dcto_financ, ot.fecha, ot.marca
             order by pr.valor desc, cl.codigo_cliente, n.nombre;


    EXEC SQL DECLARE C1C CURSOR FOR
             select cl.codigo_cliente, n.nombre, n.codigo_nit, nvl(cl.dcto_financ,0), nvl(cl.dcto_cial,0), 
                    cl.lista, decode(nvl(cl.contado,'0'),'0',' ','CONTADO'), nvl(p.codigo,'N'), nvl(os.ptaje,op.ptaje), pr.valor, 
                    nvl(to_char(cl.fec_dcto_cial,'DD-MON-YYYY'), ' '), 
                    nvl(to_char(cl.fec_dcto_financ,'DD-MON-YYYY'), ' '),
                    nvl(to_char(ot.fecha,'DD-MON-YYYY'), ' ') as fecha_ot,
                    decode(ot.marca,1,'*',' ') as marca  
	           from nits n, ciudades c, clientes cl, preferencia p, opticasp op, opticass os, paretto pr, opticast ot
             where n.codigo_nit       = cl.codigo_nit                     and
                   n.codigo_ciu       = c.codigo                          and
                   cl.codigo_cliente  = p.codigo_cliente(+)               and
                   cl.codigo_cliente  = op.codigo_cliente(+)              and
                   cl.codigo_cliente  = ot.codigo_cliente(+)              and
                   cl.estado         <> 'R'                               and
                   cl.codigo_cliente >= :codigo_ini                       and
                   cl.codigo_cliente <= :codigo_fin                       and
                   cl.codigo_cliente  = pr.codigo_cliente
             group by pr.valor, cl.codigo_cliente, n.nombre, n.codigo_nit, cl.dcto_financ, cl.dcto_cial, cl.lista, cl.contado, p.codigo, op.ptaje,
                      os.ptaje, cl.fec_dcto_cial, cl.fec_dcto_financ, ot.fecha, ot.marca
             order by pr.valor desc, cl.lista desc, cl.contado, cl.dcto_financ, p.codigo, cl.codigo_cliente;

    EXEC SQL DECLARE C3 CURSOR FOR
             select nvl(numero,0)
             from   telefonos
             where  codigo_nit = :codigo_nit_c
             order  by orden;

    EXEC SQL DECLARE C4 CURSOR FOR
             select nombre, cargo
             from   representa
             where  codigo_nit = :codigo_nit_c;

    EXEC SQL select n.nombre, n.nit, n.digito
             into  :nomb_emp, :nit, :digito
             from   nits n, empresas e
             where  n.codigo_nit = e.codigo_nit and
                    e.codigo_emp = 1;

    if (sqlca.sqlcode == 0)
        nomb_emp.arr [nomb_emp.len] = '\0';

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Empresa (%d)\n", sqlca.sqlcode);

    if (!strcmp(orden,"s") && !strcmp(paretto,"n")) {
    	EXEC SQL OPEN C1;
    }
    else {
           if (!strcmp(orden,"n") && !strcmp(paretto,"n")) {
    	      EXEC SQL OPEN C1A;
           }
           else {
                  if (!strcmp(orden,"s") && !strcmp(paretto,"s")) {
    	              EXEC SQL OPEN C1B;
                  }
                  else {
                         if (!strcmp(orden,"n") && !strcmp(paretto,"s")) {
    	                     EXEC SQL OPEN C1C;
                         }
                 }
           }
    }
    strcpy(codigo_ant,"**");
    staora  = 0;
/*    printf("staora <%d>",staora); getchar(); */
 while (staora == 0) {

        if (!strcmp(orden,"s") && !strcmp(paretto,"n")) {
           EXEC SQL FETCH C1 INTO :codigo_cliente, :nomb_clie, :codigo_nit, :dcto_financ, :dcto_cial, :lista, :contado, :codigo, :ptaje, :fec_dcto_cial, :fec_dcto_financ, :fecha_ot, :marca;
        }
        else {
               if (!strcmp(orden,"n") && !strcmp(paretto,"n")) {
                   EXEC SQL FETCH C1A INTO :codigo_cliente, :nomb_clie, :codigo_nit, :dcto_financ, :dcto_cial, :lista, :contado, :codigo, :ptaje, :fec_dcto_cial, :fec_dcto_financ, :fecha_ot, :marca;
               }
               else {
                      if (!strcmp(orden,"s") && !strcmp(paretto,"s")) {
                          EXEC SQL FETCH C1B INTO :codigo_cliente, :nomb_clie, :codigo_nit, :dcto_financ, :dcto_cial, :lista, :contado, :codigo, :ptaje, :valor, :fec_dcto_cial, :fec_dcto_financ, :fecha_ot, :marca;
                      }
                      else {
                           if (!strcmp(orden,"n") && !strcmp(paretto,"s")) {
                               EXEC SQL FETCH C1C INTO :codigo_cliente, :nomb_clie, :codigo_nit, :dcto_financ, :dcto_cial, :lista, :contado, :codigo, :ptaje, :valor, :fec_dcto_cial, :fec_dcto_financ, :fecha_ot, :marca;
                           }
                     }
              }
        }
        staora  = sqlca.sqlcode;
        if (staora ==  1403) break;
        if (staora == -1405) {
            staora  = 0;
            if (!strlen(nomb_ciu.arr)) {
                strcpy (nomb_ciu.arr, "");
                nomb_ciu.len = 0;
            }
        }
        else if (staora)
                 fprintf (stderr, "Error leyendo C1 (%d)\n", staora);

        codigo_cliente.arr  [codigo_cliente.len]  = '\0';
        nomb_clie.arr       [nomb_clie.len]       = '\0';
        ar.arr              [ar.len]              = '\0';
        contado.arr         [contado.len]         = '\0';
        codigo.arr          [codigo.len]          = '\0';
        fec_dcto_cial.arr   [fec_dcto_cial.len]   = '\0';
        fec_dcto_financ.arr [fec_dcto_financ.len] = '\0';
        fecha_ot.arr        [fecha_ot.len]        = '\0';
        marca.arr           [marca.len]           = '\0';

        strcpy(codigo_ciu.arr,codigo_cliente.arr);
        strorg(codigo_ciu.arr,1,2);

        if (con_lin > 62) {
              titulos();
        }
//      if (!strcmp(contado.arr,"CONTADO") || strcmp(codigo.arr,"N") || ptaje > 0 || dcto_financ > 0 || lista > 0) {
            if (!strcmp(codigo.arr,"N"))
                 strcpy(codigo.arr,"");
            sprintf (codigo_nit_c.arr,"%5.0f",codigo_nit);
            codigo_nit_c.len = strlen(codigo_nit_c.arr);

            telefonos();
            sprintf (cadena,"%12.0f",nit);
            if (!strcmp(paretto,"s")) {
/*               printf("pase por paretto"); getchar();*/
               valor_parcial+=valor;
               porcentaje=valor_parcial/valor_total;
               sprintf (cadena,"%9.0f",valor);
               if (con_pag >= con_pagr) 
                  fprintf (fp,"%01.4f %12s %5s %-55s ",porcentaje,fmtnum("zzz,zzz,zzz",cadena,r_t),codigo_cliente.arr,nomb_clie.arr);
            }
            else {
/*               printf("no es con paretto"); getchar();*/
                 if (con_pag >= con_pagr) 
                    fprintf (fp,"%5s %-55s",codigo_cliente.arr,nomb_clie.arr);
            }
            if (!strcmp(repre,"s")) {
                contacto();
                if (strcmp(cadena3,"")) {
                    strorg(cadena3,1,43);
                    if (con_pag >= con_pagr) 
                       fprintf(fp,"%-43s",cadena3);
                }
            }
            if (con_pag >= con_pagr) {
                sprintf (cadena,"%5.2f",dcto_cial);
                fprintf (fp,"%d    %-13s %5s",lista,contado.arr,fmtnum("zzz.zz",cadena,r_t));
                sprintf (cadena,"%5.2f",dcto_financ);
                fprintf (fp," %-7s   %-8s",fmtnum("zzz.zz",cadena,r_t),codigo.arr);
                sprintf (cadena,"%5.2f",ptaje);
                fprintf (fp,"%10s",fmtnum("zzz.zzzz",cadena,r_t));
                fprintf (fp,"%14s %11s %11s %2s\n",fec_dcto_cial.arr,fec_dcto_financ.arr, fecha_ot.arr, marca.arr);
            } 

            con_lin++;
            digito=0;
            ptaje=0;
//      }
 }
 if (!strcmp(paretto,"s")) {
     if (con_pag >= con_pagr) {
        sprintf(cadena,"%8.2f",valor_total);
        fprintf(fp,"\n%44s %15s\n","Total Valor ",fmtnum("$zz,zzz,zzz,zz9.99",cadena,r_t));
     }
 }

// if (con_lin > 36) {
        titulos();
// }
 if (con_pag >= con_pagr) {
    fprintf (fp,"%s%s%s",enfatizado_on,"DEFINICIONES",enfatizado_off);
    fprintf (fp,"\n\n%s%s%s",enfatizado_on,"TABLA DE PRECIOS                              FACTURACIO\b'N",enfatizado_off);
    fprintf (fp,"%s\n%s%62s\n\n","  CRE\b'DITO: Factura con corte quincenal","              LISTA 0      LISTA1","         CONTADO: Factura por Orden de Pedido");
 } 
 EXEC SQL DECLARE C5 CURSOR FOR
 SELECT TIPO_TRABAJO, SUM(decode(lista,0,VALOR_UNIDAD,0)) LISTA0,
                 	    SUM(decode(lista,1,VALOR_UNIDAD-VALOR_UNIDAD*VALOR_DESCTO/100,0)) LISTA1
 FROM SERVICIOS_LEN
 WHERE TIPO_SERVICIO = 'TR'  AND
       SUBSTR(TIPO_TRABAJO,1,2) IN ('AR','MR','SA') AND
       LISTA IN (0,1)
 group by TIPO_TRABAJO
 order by TIPO_TRABAJO;

 EXEC SQL OPEN C5;
 staora  = 0;
 c = 0;

 while (staora == 0) {

        EXEC SQL FETCH C5 INTO :tipo_trabajo, :valor_unidad, :valor_unidad2;
        staora  = sqlca.sqlcode;
        if (staora ==  1403) break;
        if (staora == -1405) {
            staora  = 0;
        }
        else if (staora)
                 fprintf (stderr, "Error leyendo C5 (%d)\n", staora);

        tipo_trabajo.arr  [tipo_trabajo.len] = '\0';
        if (con_pag >= con_pagr) {
            fprintf (fp,"%-10s ",tipo_trabajo.arr);
            sprintf (cadena,"%5.2f",valor_unidad);
            fprintf (fp,"%10s  ",fmtnum("zzz,zzz",cadena,r_t));
            sprintf (cadena,"%5.2f",valor_unidad2);
            if (c == 0 || c == 3 || c == 5 || c == 8) {
                if (c == 0) {
                   fprintf (fp,"%10s %s%s%s%s\n",fmtnum("zzz,zzz",cadena,r_t),enfatizado_on,"            DESCUENTOS",enfatizado_off,"   COMERCIAL : Por evento - en acuerdo    ");
                }
                else {
                      if(c == 3) {
                         fprintf (fp,"%10s %s%-100s%s\n",fmtnum("zzz,zzz",cadena,r_t),enfatizado_on,cadena2,enfatizado_off);
                      }
                      else {
                            if(c == 8) {
                               fprintf (fp,"%10s %s%-100s%s\n",fmtnum("zzz,zzz",cadena,r_t),enfatizado_on,cadena2,enfatizado_off);
                            }
                            else {
                                 fprintf (fp,"%10s %s%-100s%s\n",fmtnum("zzz,zzz",cadena,r_t),enfatizado_on,cadena2,enfatizado_off);
                            }
                      }
                }
            }
            else {
                fprintf (fp,"%10s %-100s\n",fmtnum("zzz,zzz",cadena,r_t),cadena2);
            }
        }
        con_lin++;
        if ( c == 0 ) {                        
           strcpy(cadena2,"                         FINANCIERO: Condicionado a cumplimiento");
           c = 1;
        }
        else {
           if ( c == 1 ) {
              strcpy(cadena2," ");
              c = 2;
           }
           else {
              if ( c == 2 ) {
                 strcpy(cadena2,         "            PROMOCIONES: Promo Martes Labocosta 20% -Martes-                     (* Aplica a todos los clientes)");
                 c = 3;
              }
              else {
                 if ( c == 3 ) {
                    strcpy(cadena2,      "                         Aplican Labocosta Digital Progresivos excepto Liberte\b'");
                    c = 4;
                 }
                 else {
                    if ( c == 4) {
                       strcpy(cadena2,   "                         Promo Labocosta Digital 20% -Martes-Jueves-Sa\b'bado-      (* Aplica a MO064 - MO020 - MO075)");
                       c = 5;
                    }
                    else {
                       if ( c == 5) {
                          strcpy(cadena2,"                         Aplican Labocosta Digital Progresivos excepto Liberte\b'");
                          c = 6;
                       }
                       else {
                          if ( c == 6) {
                             strcpy(cadena2," ");
                             c = 7;
                          }
                          else {
                             if ( c == 7) {
                                strcpy(cadena2,"                         DIGITALES MARCA PROPIA            (20% Dcto incluido en el precio)");
                                c = 8;
                             }
                             else {
                                if ( c == 8) {
                                   strcpy(cadena2,"                         LISTA DE PRECIOS MARCA PROPIA     (No aplica sobre otras promociones vigentes) ");
                                   c = 9;
                                }
                                else {
                                   if ( c == 9) {
                                      strcpy(cadena2,"                                                Descto condicionado 5% o 10%, segu\b'n negociacio\b'n ");
                                      c = 10;
                                   }
                                }
                             }
                          }
                       }
                    }
                 }
              }
           }
        }
 }
 fprintf (fp,"%10s %-100s\n"," ",cadena2);
 strcpy(cadena2,"                                                Descto comercial: No aplica sobre precio MP, pero si se puede aplicar sobre lista general segu\b'n negociacio\b'n.");
 fprintf (fp,"%10s %-100s\n"," ",cadena2);
 strcpy(cadena2,"                                               *El cliente suministra arte alfanume\b'rico para grabado la\b'ser. ");
 fprintf (fp,"%10s %-100s\n"," ",cadena2);
 strcpy(cadena2,"                                                Grabado institucional y Grabado que Identifica disen\b~o. Archivo clientes: Relacio\b'n entre Co\b'digo y Grabado");
 fprintf (fp,"%10s %-100s\n"," ",cadena2);
 con_pag++;
 if (con_pag >= con_pagr) 
    fprintf (fp,"\n\n");

 c = 0;
 
 if (con_pag >= con_pagr) {
    fprintf (fp,"%30s\n",      "                           REF. ");
    fprintf (fp,"%30s%24s\n\n","              LISTA 0      DESC. FECHA","LISTAS DE PRECIO");
 }
 con_lin++;
 strcpy(lprecio[0],"LP0 - LISTA 0 = Normal");    
 strcpy(lprecio[1],"LP1 - LISTA 1 = Dcto 10% x LP0 (Clientes general - O\b'pticas del grupo)");    
 strcpy(lprecio[2],"LP2 - LISTA 2 = Dcto 10% x LP1 (Ej = FOSCAL)");    
 strcpy(lprecio[3],"LP3 - LISTA 3 = Dcto 15% x LP1");    
 strcpy(lprecio[4],"LP4 - LISTA 4 = Dcto 20% x LP1");    
 strcpy(lprecio[5],"LP5 - LISTA 5 = Dcto 10% x LP0 (Exclusivo Grupo OPTICALIA)");    
 strcpy(lprecio[6]," ");    
 strcpy(lprecio[7], "BQ103- O\b'PTICA PANORAMA LTDA (Principal) -  Lista de Precios 1 ( Contado  ) - Factura Cre\b'dito - Dcto Comercial 10%");    
 strcpy(lprecio[8], "BQ332- O\b'PTICA PANORAMA LTDA (Sala Azul) -  Lista de Precios 1 ( Contado  ) - Factura Cre\b'dito - Dcto Comercial 10%");    
 strcpy(lprecio[9], "BQ269- O\b'PTICA PANORAMA LTDA (FOCA)      -  Lista de Precios 1 ( Contado  ) - Factura Cre\b'dito - Dcto Comercial 10%");    
 strcpy(lprecio[10],"BQ370- O\b'PTICA PANORAMA LTDA (FOCA-SUB.) -  Lista de Precios 1 ( Contado* ) - Factura Cre\b'dito - Dcto Comercial 10%");    
 strcpy(lprecio[11],"BQ373- O\b'PTICA PANORAMA LTDA (C.C.VIVA ) -  Lista de Precios 1 ( Contado* ) - Factura Cre\b'dito - Dcto Comercial 10%");    
 strcpy(lprecio[12],"BQ374- O\b'PTICA PANORAMA LTDA (FOCA-SUB2) -  Lista de Precios 1 ( Contado* ) - Factura Cre\b'dito - Dcto Comercial 10%");    
 strcpy(lprecio[13],"* - Se modifican los precios de Monofocal y Bifocal Flat Top 28 CR39 en Terminados y Regular Procesado,");    
 strcpy(lprecio[14],"aplicando una tarifa especial para estas referencias:");    
 strcpy(lprecio[15],"                                             Terminados   Procesados");    
 strcpy(lprecio[16],"                                               $/Unidad     $/Unidad");    
 strcpy(lprecio[17],"*Monofocal           CR39 1.498 ...............  2.700=       9.000=");    
 strcpy(lprecio[18],"*Bifocal Flat Top 28 CR39 1.498 ...............  5.500=       9.000=");    
 strcpy(lprecio[19],"VIGENCIA AGOSTO 22 DE 2017                                          ");    
 strcpy(lprecio[20],"OPTICAS DEL GRUPO");    
 strcpy(lprecio[21],"Servicios: Color-Tratamientos(No incluye AR/PR)-Bisel y Montaje-Ranuracio\b'n-Perforacio\b'n-Bordes pulidos y Disen\b~o especial");    
 strcpy(lprecio[22],"11,11% Desc sobre LP1.");    

 EXEC SQL DECLARE C6 CURSOR FOR
	select codigo_articulo, SUM(decode(lista,0,valor_venta,0)) LISTA0,
                      	        SUM(decode(lista,1,valor_venta-valor_venta*10/100,0)) LISTA1,
                                ref_descto, nvl(to_char(fecha,'DD-MON-YYYY'),' ')
	from precios_otr
	where substr(codigo_articulo,1,2) in ('AR','MR','SA') AND
      	      LISTA = 0
	group by codigo_articulo, ref_descto, fecha
	order by codigo_articulo;
	
 EXEC SQL OPEN C6;
 staora  = 0;

 while (staora == 0) {

        EXEC SQL FETCH C6 INTO :codigo_articulo, :valor_venta, :valor_venta2, :ref_descto, :fecha_pre;
        staora  = sqlca.sqlcode;
        if (staora ==  1403) break;
        if (staora == -1405) {
            staora  = 0;
        }
        else if (staora) {
                 fprintf (stderr, "Error leyendo C6 (%d)\n", staora);
                 getchar();
        }
        fecha_pre.arr       [fecha_pre.len] = '\0';

        codigo_articulo.arr  [codigo_articulo.len] = '\0';
        if (con_pag >= con_pagr) {
            fprintf (fp,"%-10s ",codigo_articulo.arr);
            sprintf (cadena,"%5.2f",valor_venta);
            fprintf (fp,"%10s  ",fmtnum("zzz,zzz",cadena,r_t));
            sprintf (cadena,"%3.0f",ref_descto);
            fprintf (fp,"%7s%s %11s   ",fmtnum("zzz",cadena,r_t),"%", fecha_pre.arr);
            fprintf(fp, "%-120s\n",lprecio[c]);
        }
        con_lin++;
        c++;
 }
 for (c=c; c < 23; c++) {
      fprintf(fp, "%46s%-120s\n"," ",lprecio[c]);
 }

 cierre_impresora();

 if (!strcmp(orden,"s")) {
    EXEC SQL CLOSE C1;
 }
 else {
    EXEC SQL CLOSE C1A;
 }
 EXEC SQL CLOSE C3;
 EXEC SQL CLOSE C4;
 EXEC SQL CLOSE C5;
 EXEC SQL CLOSE C6;

 EXEC SQL COMMIT WORK RELEASE;

 exit   (0);
}

void telefonos()
{
 strcpy(cadena2,"");
 traidos = 0;
 oraest  = 0;
 EXEC SQL OPEN C3;
 while (oraest == 0) {

        EXEC SQL FETCH C3 INTO :telefono;

        oraest  = sqlca.sqlcode;
        if (oraest == 1403 || traidos == 2) break;
        if (oraest != 1403 && oraest != 0)
            fprintf (stderr, "Error leyendo C3 (%d)\n", oraest);

        traidos++;
        if (traidos == 1) {
            sprintf (cadena,"%8.0f",telefono);
            strcpy  (cadena2,cadena);
        }
        else {
             if (telefono > 0) {
                 sprintf (cadena,"-%8.0f",telefono);
                 strcat  (cadena2,cadena);
             }
        }
 }
 EXEC SQL CLOSE C3;
}

void contacto()
{
 strcpy(cadena3,"      ");
 traidos = 0;
 oraest  = 0;
 EXEC SQL OPEN C4;
 while (oraest == 0) {

        EXEC SQL FETCH C4 INTO :nomb_repre, :cargo;

        oraest  = sqlca.sqlcode;
        if (oraest == 1403 || traidos == 2) break;
        if (oraest != 1403 && oraest != 0)
            fprintf (stderr, "Error leyendo C4 (%d)\n", oraest);

        nomb_repre.arr  [nomb_repre.len] = '\0';
        cargo.arr       [cargo.len] = '\0';
        traidos++;
        if (traidos == 1) {
            strcat  (cadena3,nomb_repre.arr);
//            strcat  (cadena3,", ");
//            strcat  (cadena3,cargo.arr);
        }
        else {
/*
             if (strcmp(nomb_repre.arr,"")) {
                 strcat(cadena3," - ");
                 strcat(cadena3,nomb_repre.arr);
                 strcat(cadena3,", ");
                 strcat(cadena3,cargo.arr);
             }
*/
        }
 }
 EXEC SQL CLOSE C4;
}

/************************
* TITULOS()
*    Imprime titulos en el archivo de spool.
*/

void titulos()
{
 char fecha[100];
 con_pag++;

 if (con_pag >= con_pagr) { 
    fprintf (fp,"%s",salte_pagina);
    strful(cadena,(int)(42-strlen(nomb_emp.arr))/2,' ');
    fprintf(fp,"%s%s%s%s%s\n",diezcpi,ancho_on,cadena,nomb_emp.arr,ancho_off);
    sprintf (cadena,"%12.0f",nit);
    fmtnum("zzz,zzz,zzz,zzz",cadena,r_t);
    fprintf (fp,"%s%s%25s %18s",condensado_on,ancho_on,"NIT :",r_t);
    if (digito > 0) {
        sprintf (cadena,"%d",digito);
        fmtnum("z",cadena,r_t);
        fprintf (fp,"-%s",r_t);
    }
    else if (digito == 0)
             fprintf (fp,"-%s","0");
    fprintf(fp,"%s%s",ancho_off,diezcpi);
/* fprintf (fp,"%s%s%s%s\n\n",diezcpi,ancho_on,"LABORATORIO OFTALMICO DE LA COSTA S.A.S.",ancho_off);*/
    fecha_system(fecha);
    fprintf (fp,"\n%20s%35s%20s%d\n",fecha," LISTADO DE CLIENTES PREMIUN","Pagina # ",con_pag);
    fprintf (fp,"%20s%35s\n"," "," 3.5% RETE.FTE. APLICADO");

    strful(cadena,(int)(90-strlen(fechas))/2,' ');
    fprintf(fp,"%s%s\n\n",cadena,fechas);
    fprintf (fp,"%s\n",nombre_ciu.arr);
    fprintf (fp,"%s%s%s",condensado_on,"Vigencia: A partir de Ago. 01-2017\n",condensado_off);

    if (!strcmp(repre,"s")) {
         if (!strcmp(paretto,"s")) {
            fprintf (fp,"%s%s %12s %s %-50s %-29s %-39s %-20s %-23s %-12s\n",      condensado_on,"      ","VALOR  ","      ","      ","             ","--ACUERDO COMERCIAL-    -DESCUENTOS-","---PREFERENCIAS---","FECHA ACTUALIZACION", "MARCA PR/"); 
            fprintf (fp,"%s%s %12s %s %-50s %-29s %-39s %-20s %-23s %-12s %2s\n\n",condensado_on,"     %","PARETTO","CODIGO","NOMBRE","REPRESENTANTE","L.PRECIO FACTURACION    COM.    FIN.","AR       SERVICIOS","COMERCIAL FINANCIERA","OPTICALIA","MP");
        }
        else {
            fprintf (fp,"%s%s %-49s %-29s %-39s %-20s %-23s %-12s\n",      condensado_on,"      ","      ","             ","--ACUERDO COMERCIAL-    -DESCUENTOS-","---PREFERENCIAS---","FECHA ACTUALIZACION", "MARCA PR/");
            fprintf (fp,"%s%s %-49s %-29s %-39s %-20s %-23s %-12s %2s\n\n",condensado_on,"CODIGO","NOMBRE","REPRESENTANTE","L.PRECIO FACTURACION    COM.    FIN.","AR       SERVICIOS","COMERCIAL FINANCIERA","OPTICALIA","MP");
        }
    }
    else {
        if (!strcmp(paretto,"s")) {
            fprintf (fp,"%s%s %12s %s %-50s %-39s %-20s %-23s %-12s\n",      condensado_on,"      ","VALOR  ","      ","      ","--ACUERDO COMERCIAL-    -DESCUENTOS-","---PREFERENCIAS---","FECHA ACTUALIZACION", "MARCA PR/");
            fprintf (fp,"%s%s %12s %s %-50s %-39s %-20s %-23s %-12s %2s\n\n",condensado_on,"     %","PARETTO","CODIGO","NOMBRE","L.PRECIO FACTURACION    COM.    FIN.","AR       SERVICIOS","COMERCIAL FINANCIERA","OPTICALIA","MP");
        }
        else {
            fprintf (fp,"%s%s %-49s %-39s %-20s %-23s %-12s\n",      condensado_on,"      ","      ","--ACUERDO COMERCIAL-    -DESCUENTOS-","---PREFERENCIAS---","FECHA ACTUALIZACION", "MARCA PR/");
            fprintf (fp,"%s%s %-49s %-39s %-20s %-23s %-12s %2s\n\n",condensado_on,"CODIGO","NOMBRE","L.PRECIO FACTURACION    COM.    FIN.","AR       SERVICIOS","COMERCIAL FINANCIERA","OPTICALIA","MP");
        }
    }
 }
 con_lin=12;
}
