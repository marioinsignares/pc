/*****************************************************************
* DEPRECIA.C Version 1.0 - Rev 1.2 - Nov. 30/97.
*
* nomasino.c. Asiento contable de nomina quincenal (Pagos y descuentos)
*
* Uso: nomasino codigo_emp aaaammdd device copias userid/password\n");
*
* Martin A. Toloza L. Creado en Noviembre 27 de 1.997.
* Teodoro Tarud & Cia Ltda.
*
*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <setjmp.h>
#include <stdlib.h>
#include <math.h>

double redondo();
void hacer_asiento();
void ver_inf();
void grabar_movtod();
double redondo();


EXEC SQL BEGIN DECLARE SECTION;

VARCHAR uid[100];
                                 /* Empresa (C1) */
VARCHAR nomb_emp    [51];
double  nit;
int     digito;
VARCHAR codigo_emp  [3];
                                 /* Infacu (C2) */
VARCHAR vecinf      [20][14];
                                 /* Movto_C (C3) */
VARCHAR comprobanteb[07];
VARCHAR consecutivob[07];
VARCHAR fechab      [20];
VARCHAR conceptob   [45];
                                 /* Movto_D (C4) */
VARCHAR secuenciab  [7];
VARCHAR secb        [7];
VARCHAR infa        [14];
VARCHAR infb        [14];
VARCHAR infc        [14];
VARCHAR infd        [14];
VARCHAR valor_debb  [15];
VARCHAR valor_creb  [15];
char    inf         [5][14];
                                 /* Control_Mes (C5) */
double  consecutivo;
VARCHAR fuenteb     [03];
double  consecutivo16;
                                 /* Acumulados (C6) */
double  nitn;
VARCHAR codigo_nitb [06];
VARCHAR cuentab     [15];
VARCHAR sucursalb   [05];
VARCHAR cen_cosb    [03];
int     ultimo;
int     db_cr;
double  valor;
VARCHAR identifica  [30];
VARCHAR procedimiento [256];
float   ptaje;
float   ptajesuc;
int     codigo;
VARCHAR ano_mes     [20];
VARCHAR codigox     [15];
VARCHAR fecha_has   [20];
VARCHAR fecha_asto  [20];
VARCHAR pro_pen     [35];
VARCHAR eps         [35];
VARCHAR tabla       [20];
VARCHAR gasto_comun [2];
                                 /* Plan (C8) */
VARCHAR veca        [14];
VARCHAR vecb        [14];
VARCHAR vecc        [14];
VARCHAR vecd        [14];
VARCHAR gasto_cc    [2];
int     codigo_nit;
char    vecplan     [5][14];

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE SQLCA;
				     /* Parametros de comunicacion con ORACLE */
                                            /* Variables globales del usuario */
char    pagina[4];                                   /* Contador de Paginas */
int     con_pag=0;                                   /* Contador de Paginas */
int     con_lin=66;                                  /* Contador de Lineas  */
int     cl;
int     staora     =0;
int     traidos    =0;
int     num_ret    =0;
int     loop_2     =0;
double  secuencia  =0;
        		                /* Variables de recepcion para datos */
char *fmtnum(), r_t[100];
int     diai;
int     mesx, mesi, mesf;
int     anox, anoi, anof;
int     i, j, k, l;
double  valor_deb;
double  valor_cre;
char    cadena[100];
char    login[30];
char    copias[5];
int     staorag;
double  valor_r;
double  valor_d;

void main(argc, argv)
int     argc;
char    *argv[];
{

char	device[6];
int	status = 0;

    if (argc < 9)
       {
	printf ("Incorrecta invocacion:\n");
        printf ("Uso : codigo_emp aaaammdd comprobante concepto(Hasta 40 caracteres) copias pagina device userid/password\n");
	printf ("      device : t salida por terminal\n");
	printf ("      device : s salida standar     \n");
	printf ("               Px salida por impresora (x nro printer)\n");
	printf ("               userid/password nombre usuario y password\n");
        exit (1);
       }
       strcpy (codigo_emp.arr, argv[1]);
       codigo_emp.len   =      strlen(codigo_emp.arr);
       strcpy (fecha_has.arr,  argv[2]);
       fecha_has.len    =      strlen(fecha_has.arr);
       strcpy (comprobanteb.arr,argv[3]);
       comprobanteb.len =      strlen(comprobanteb.arr);
       strcpy (conceptob.arr,argv[4]);
       conceptob.len =         strlen(conceptob.arr);
       strcpy (copias,         argv[5]);
       strcpy (pagina,         argv[6]);
       strcpy (device,         argv[7]);
       strlow (device);

    if ( strlen(fecha_has.arr) != 8 ) {
         printf("Error, la fecha debe ser de 8 digitos y formato AAAAMMDD");
         exit (1);
    }

    if (!strpos ("/", argv[8]))
       {
        printf ("user id/password incorrecto.\n");
	exit (1);
       }

    strcpy (uid.arr,    argv[8]);
    uid.len =           strlen(uid.arr);

/******************************************************
 * Establecer conexion concurrente con ORACLE (orlon) *
 ******************************************************/

    EXEC SQL CONNECT :uid;

    if (sqlca.sqlcode==-1915)
       {
	fprintf (stderr,"Oracle Base de Datos no esta activa. SGA (%d)\n",
		 	sqlca.sqlcode);
        exit (1);
       }
    else
       if (sqlca.sqlcode==-1017)
	  {
	   fprintf (stderr,"User Name/Password es Invalido. Re-intente.\n");
	   exit (1);
	  }
       else
          if (sqlca.sqlcode)
	     exit (1);

    busco_impresora(device);
    abre_impresora(copias);


/*********************************************
 * Procesar una sentencia SQL (oexec).       *
 *********************************************/
    strcpy (ano_mes.arr,fecha_has.arr);
    strorg (ano_mes.arr,1,6);
    ano_mes.len  = strlen(ano_mes.arr);

    strcpy (cadena,fecha_has.arr);
    strorg (cadena,1,4);
    anoi         =        atoi(cadena);
    strcpy (cadena,fecha_has.arr);
    strorg (cadena,5,2);
    mesi         =        atoi(cadena);

    EXEC SQL select n.nombre, n.nit, n.digito
             into  :nomb_emp, :nit, :digito
             from   nits n, empresas e
             where  n.codigo_nit = e.codigo_nit and
                    e.codigo_emp = to_number(:codigo_emp);

    if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
        fprintf (stderr, "Error leyendo Empresa (%d)\n", sqlca.sqlcode);

    EXEC SQL DECLARE C2 CURSOR FOR
             select inf
             from   infacu;

    EXEC SQL OPEN C2;

    staora  = 0;
    traidos = 0;
    num_ret = 0;
    while (staora == 0) {

          EXEC SQL FETCH C2 INTO :vecinf;

          if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
             fprintf (stderr, "Error leyendo C2 (%d)\n", sqlca.sqlcode);

          staora  = sqlca.sqlcode;
          traidos = sqlca.sqlerrd[2];

          for (loop_2 = 0; loop_2 < (traidos - num_ret); loop_2++) {
              vecinf[loop_2].arr  [vecinf[loop_2].len] = '\0';
          }
          num_ret = traidos;
    }
    k = traidos;
    EXEC SQL CLOSE C2;

    sprintf(secb.arr,"%5d",1);
    secb.len = strlen(secb.arr);

//    printf("codigo_emp.arr=%s secb.arr=%s fecha_has.arr=%s ", codigo_emp.arr, secb.arr, fecha_has.arr ); getchar();

    EXEC SQL DECLARE C6 CURSOR FOR
         SELECT N.NIT, N.CODIGO_NIT, NVL(S.CUENTA,C.CUENTA), C.DB_CR,
                ABS(SUM(DECODE(D.CLASE_PD,1,VALOR_NOVED,0))-SUM(DECODE(D.CLASE_PD,2,VALOR_NOVED,0))),
                C.IDENTIFICA, nvl(C.PROCEDIMIENTO,'X'), C.PTAJE,
                to_date(:fecha_has,'yyyymmdd'), E.PRO_PEN, E.EPS, C.TABLA,
                DECODE(NVL(P.SUCURSAL,0),1,V.SUCURSAL,'001'), decode(substr(C.CUENTA,1,1),'1',1,'2',1,'3',1,V.CEN_COS),
                nvl(E.GASTO_COMUN,'N'), E.CODIGO
         FROM   NOMNOVED D, NOMNOVEC V, NOMCAUCION S, NOMCAUSA C, NOMEMPLE E, NITS N, PLAN P
         WHERE  E.CODIGO_EMP = :codigo_emp                    AND
                E.CODIGO_NIT = N.CODIGO_NIT                   AND
                C.SECUENCIA  = :secb                          AND
                C.CODIGO_EMP = E.CODIGO_EMP                   AND
                C.CODIGO_EMP = S.CODIGO_EMP                   AND
                C.SUCURSAL   = S.SUCURSAL                     AND
                C.CEN_COS    = S.CEN_COS                      AND
                C.SECUENCIA  = S.SECUENCIA                    AND
                D.CONCEPTO   = S.CONCEPTO                     AND
                D.CODIGO_EMP = V.CODIGO_EMP                   AND
                D.FECHA_HAS  = V.FECHA_HAS                    AND
                D.CODIGO     = V.CODIGO                       AND
                V.CODIGO_EMP = E.CODIGO_EMP                   AND
                V.FECHA_HAS  = to_date(:fecha_has,'yyyymmdd') AND
                V.CODIGO     = E.CODIGO                       AND
                V.SUCURSAL   = C.SUCURSAL                     AND
                V.CEN_COS    = C.CEN_COS                      AND
                V.CODIGO_EMP = P.CODIGO_EMP                   AND
                NVL(S.CUENTA,C.CUENTA) = P.CUENTA
         GROUP BY N.NIT, N.CODIGO_NIT, C.CUENTA, S.CUENTA, C.DB_CR,
                  C.IDENTIFICA, C.PROCEDIMIENTO, C.PTAJE, E.CODIGO,
                  E.PRO_PEN, E.EPS, C.TABLA, V.SUCURSAL, V.CEN_COS, 
                  E.GASTO_COMUN, P.SUCURSAL
         ORDER BY E.CODIGO;

    EXEC SQL DECLARE C7 CURSOR FOR
             select sucursal, ptaje, ultimo
             from   SUCURSAL
             where  codigo_emp = :codigo_emp and
                    ptaje > 0
             order by ultimo, ptaje, sucursal;

    EXEC SQL DECLARE C9 CURSOR FOR
             select sucursal, ptaje, ultimo
             from   NOMGASTOS
             where  codigo_emp = :codigo_emp and
                    codigo     = :codigo     and
                    ptaje > 0
             order by ultimo, ptaje, sucursal;

    hacer_asiento();

    cierre_impresora();

    EXEC SQL COMMIT WORK RELEASE;

    exit   (0);
}

void hacer_asiento()
{

/*
  strcpy(fuenteb.arr,"16");
  fuenteb.len = strlen(fuenteb.arr);
*/

/* Lee consecutivo de control_mes Fte 16 Cns ultimo Asiento Nomina (Pagos-Dtos)*/

/*
  EXEC SQL select consecutivo   into :consecutivo16
           from control_mes
           where fuente       = to_number(:fuenteb)       and
                 ano_mes      = to_number(:ano_mes)       and
                 codigo_emp   = to_number(:codigo_emp);
*/

  if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
      fprintf (stderr, "Error leyendo Control_Mes (%d)\n", sqlca.sqlcode);
  else {
        sprintf(consecutivob.arr,"%5.0f",consecutivo16);
        consecutivob.len = strlen(consecutivob.arr);

        EXEC SQL delete from movto_d
                 where codigo_emp   = to_number(:codigo_emp)   and
                       ano_mes      = to_number(:ano_mes)      and
                       consecutivo  = (select consecutivo
                                       from movto_c
                                       where codigo_emp   = to_number(:codigo_emp)   and
                                             clase        = 'NO'                     and
                                             tipo         = '10'                     and
                                             ano_mes      = to_number(:ano_mes)      and
                                             comprobante  = to_number(:comprobanteb));

        if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
            fprintf (stderr, "Error leyendo Movto_D (%d)\n", sqlca.sqlcode);

        EXEC SQL delete from movto_c
                 where codigo_emp   = to_number(:codigo_emp)   and
                       clase        = 'NO'                     and
                       tipo         = '10'                     and
                       ano_mes      = to_number(:ano_mes)      and
                       comprobante  = to_number(:comprobanteb);

        if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
            fprintf (stderr, "Error leyendo Movto_C (%d)\n", sqlca.sqlcode);

  }

  strcpy(fuenteb.arr,"08");
  fuenteb.len = strlen(fuenteb.arr);

  /* Lee consecutivo de Control_mes Fte 08 sgte consecutivo */

  EXEC SQL select consecutivo+1 into :consecutivo
           from control_mes
           where fuente       = to_number(:fuenteb)       and
                 ano_mes      = to_number(:ano_mes)       and
                 codigo_emp   = to_number(:codigo_emp) for update;

  if (sqlca.sqlcode)
     {
      fprintf (stderr, "Error leyendo Control_Mes 08 (%d)\n", sqlca.sqlcode);
      consecutivo=1;
      sprintf(consecutivob.arr,"%5.0f",consecutivo);
      consecutivob.len = strlen(consecutivob.arr);
               /* Inserta en Control_Mes Fte 08 si no existe (C11) */
      EXEC SQL insert into control_mes (fuente, ano_mes, nombre, consecutivo, codigo_emp)
               values (:fuenteb, :ano_mes, 'CONTROL NOMINA P-D',
                       :consecutivob, :codigo_emp);
     }
  else {
        sprintf(consecutivob.arr,"%5.0f",consecutivo);
        consecutivob.len = strlen(consecutivob.arr);
               /* Actualiza Cns de Fte 08 en control_mes (C12) */
        EXEC SQL update control_mes
                 set    consecutivo = :consecutivob
                 where codigo_emp   = to_number(:codigo_emp)    and
                       ano_mes      = to_number(:ano_mes)       and
                       fuente       = :fuenteb;
  }

/*
  strcpy(fuenteb.arr,"16");
  fuenteb.len = strlen(fuenteb.arr);

  EXEC SQL select consecutivo   into :consecutivo16
           from control_mes
           where fuente       = to_number(:fuenteb)       and
                 ano_mes      = to_number(:ano_mes)       and
                 codigo_emp   = to_number(:codigo_emp);

  if (sqlca.sqlcode)
     {
      fprintf (stderr, "Error leyendo Control_Mes 16 (%d)\n", sqlca.sqlcode);
*/
               /* Inserta en Control_Mes Fte 16 si no existe (C11) */
/*
      EXEC SQL insert into control_mes
               values (:fuenteb, :ano_mes, 'CONTROL NOMINA P-D',
                       :consecutivob, :codigo_emp);
     }
  else {
*/
               /* Actualiza Cns de Fte 16 en control_mes (C12) */
/*
        EXEC SQL update control_mes
                 set    consecutivo = :consecutivob
                 where codigo_emp   = to_number(:codigo_emp)    and
                       ano_mes      = to_number(:ano_mes)       and
                       fuente       = :fuenteb;
  }
*/

  EXEC SQL OPEN C6;

  EXEC SQL FETCH C6 INTO :nitn,       :codigo_nit,    :cuentab,   :db_cr, :valor,
                         :identifica, :procedimiento, :ptaje,     :fecha_asto,
                         :pro_pen,    :eps,           :tabla,     :sucursalb,
                         :cen_cosb,   :gasto_comun,   :codigo;

   staora  = sqlca.sqlcode;

   if (sqlca.sqlcode == -1405 )
       staora = 0;
   if (staora != 1403 && staora != 0)
       fprintf (stderr, "Error leyendo C6 (%d)\n", staora);

  if (staora==1403)
     {
      fprintf (stderr, "Error leyendo C6. (%d)\n", sqlca.sqlcode);
      EXEC SQL CLOSE C6;
      for ( l=2; l<=25; l++ ) {

          sprintf(secb.arr,"%5d",l);
          secb.len = strlen(secb.arr);
          EXEC SQL OPEN C6;
          EXEC SQL FETCH C6 INTO :nitn,       :codigo_nit,    :cuentab,   :db_cr, :valor,
                                 :identifica, :procedimiento, :ptaje,     :fecha_asto,
                                 :pro_pen,    :eps,           :tabla,     :sucursalb,
                                 :cen_cosb,   :gasto_comun,   :codigo;

          staora  = sqlca.sqlcode;

          if (sqlca.sqlcode == -1405 )
             staora = 0;
          if (staora != 1403 && staora != 0)
              fprintf (stderr, "Error leyendo C6.. (%d) l=(%d)\n", staora, l);
          else {
               if (staora == 1403 )
                   fprintf (stderr, "Error leyendo C6..1 (%d) l=(%d)\n", staora, l);
               else {
                    fprintf (stderr, "Lo encontre (%d) l=(%d)\n", staora, l);
                    break;
               }
          }
          EXEC SQL CLOSE C6;
      }
  }
  else {
     if (staora!=0) {
         fprintf (stderr, "Error leyendo C6... (%d)\n", staora);
         exit(0);
     }
  }

  if (l==25) {
      fprintf (stderr, "Error no hay novedades (%d)\n", l);
      exit(0);
  }

  fecha_asto.arr  [fecha_asto.len] = '\0';
//  printf("ano_mes.arr=%s fecha_asto.arr=%s nitn=%12.0f ", ano_mes.arr, fecha_asto.arr, nitn ); getchar();
  strcpy(fechab.arr,fecha_asto.arr);
  fechab.len = strlen(fechab.arr);

  EXEC SQL insert into movto_c
           (CODIGO_EMP,
	    ANO_MES,
	    COMPROBANTE,
	    CONSECUTIVO,
	    CLASE,
	    DESCRIPCION,
	    FECHA,
	    TIPO,
	    ESTADO,
	    NITB,
	    CODIGO_NITB,
	    VALORB,
	    RETENCION,
	    CONTADO)
           values(:codigo_emp, :ano_mes, :comprobanteb, :consecutivob, 'NO',
                  :conceptob,:fechab,'10', '0','','','','','');

  if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0)
      fprintf (stderr, "Error insertando Movto_C (%d)\n", sqlca.sqlcode);


  EXEC SQL CLOSE C6;

  for ( l=1; l<=25; l++ ) {

       sprintf(secb.arr,"%5d",l);
       secb.len = strlen(secb.arr);

       EXEC SQL OPEN C6;

       EXEC SQL FETCH C6 INTO :nitn,       :codigo_nit,    :cuentab,   :db_cr, :valor,
                              :identifica, :procedimiento, :ptaje,     :fecha_asto,
                              :pro_pen,    :eps,           :tabla,     :sucursalb,
                              :cen_cosb,   :gasto_comun,   :codigo;

        staora  = sqlca.sqlcode;

        if (sqlca.sqlcode == -1405 )
           staora = 0;
        if (staora != 1403 && staora != 0)
            fprintf (stderr, "Error leyendo C6 (%d)\n", staora);

        while (staora == 0 ) {

//       printf("secb.arr=<%s> procedimiento <%s>",secb.arr, procedimiento.arr); getchar();
       
              cuentab.arr      [cuentab.len]        = '\0';
              procedimiento.arr[procedimiento.len]  = '\0';
              identifica.arr   [identifica.len]     = '\0';
              pro_pen.arr      [pro_pen.len]        = '\0';
              eps.arr          [eps.len]            = '\0';
              tabla.arr        [tabla.len]          = '\0';
              sucursalb.arr    [sucursalb.len]      = '\0';
              cen_cosb.arr     [cen_cosb.len]       = '\0';
              gasto_comun.arr  [gasto_comun.len]    = '\0';

              if (!strcmp(procedimiento.arr,"EPS") && strlen(eps.arr) > 0) {
                  EXEC SQL select nit, codigo_nit
                           into  :nitn, :codigo_nit
                           from   nits
                           where  codigo_nit = (select codigo_nit
                                                from   nomepss
                                                where  nombre = :eps);
              }
              else {
                   if (!strcmp(procedimiento.arr,"AFP") && strlen(pro_pen.arr) > 0) {
                       EXEC SQL select nit, codigo_nit
                                into  :nitn, :codigo_nit
                                from   nits
                                where  codigo_nit = (select codigo_nit
                                                     from   nompensi
                                                     where  nombre = :pro_pen);
                   }
                   else {
                        if (!strcmp(procedimiento.arr,"FSP") && strlen(pro_pen.arr) > 0) {
                            EXEC SQL select nit, codigo_nit
                                     into  :nitn, :codigo_nit
                                     from   nits
                                     where  codigo_nit = (select codigo_nit
                                                          from   nompensi
                                                          where  nombre = :pro_pen);
                        }
                        else {
                             if (!strcmp(procedimiento.arr,"NIT")) {
                                 EXEC SQL select nit, codigo_nit
                                          into  :nitn, :codigo_nit
                                          from   nits
                                          where  nit = to_number(:tabla);
//                                          printf("tabla=<%s> :nitn=<%15.0f> :codigo_nit=<%5d>",tabla.arr,nitn,codigo_nit); getchar();
                             }
                        }
                   }
              }

              if (codigo_nit==0)
                 strcpy(codigo_nitb.arr,"");
              else sprintf(codigo_nitb.arr,"%5d",codigo_nit);
              codigo_nitb.len = strlen(codigo_nitb.arr);

              secuencia++;
              sprintf(secuenciab.arr,"%6.0f",secuencia);
              secuenciab.len = strlen(secuenciab.arr);

//  printf("1) codigo_emp=%s ano_mes=%s comprobanteb.arr=%s consecutivob.arr=%s secuenciab.arr=%s cuentab.arr=%s fechab.arr=%s ",codigo_emp.arr,   ano_mes.arr,   comprobanteb.arr,   consecutivob.arr, secuenciab.arr, cuentab.arr, fechab.arr ); getchar();
/*
              if (valor > 0) {
                 strcpy(codigox.arr,cuentab.arr);
                 codigox.len = strlen(codigox.arr);
                 ver_inf();
                 if (!strcmp(gasto_comun.arr,"C")  &&  !strcmp(gasto_cc.arr,"C")) {
                    EXEC SQL OPEN C7;
                    EXEC SQL FETCH C7 INTO :sucursalb, :ptajesuc, :ultimo;
                    sucursalb.arr    [sucursalb.len]      = '\0';
                    staorag = sqlca.sqlcode;
                    valor_r = valor;
                    valor_d = valor;
                    while (staorag == 0 ) {
                           if (ultimo==0) {
                               valor = redondo(valor_r * ptajesuc/100,2);
                               valor_d -= valor;
                           }
                           else valor = valor_d;
                           grabar_movtod();
                           EXEC SQL FETCH C7 INTO :sucursalb, :ptajesuc, :ultimo;
                           staorag = sqlca.sqlcode;
                    }
                    EXEC SQL CLOSE C7;
                 }
                 else grabar_movtod();
              }
*/
              if (valor > 0) {
                 strcpy(codigox.arr,cuentab.arr);
                 codigox.len = strlen(codigox.arr);
                 ver_inf();
                 if ((!strcmp(gasto_comun.arr,"C") || !strcmp(gasto_comun.arr,"S")) && !strcmp(gasto_cc.arr,"C")) {
                    valor_d = valor;
                    valor_r = valor;
                    if (!strcmp(gasto_comun.arr,"C")) {
                        EXEC SQL OPEN C7;
                        EXEC SQL FETCH C7 INTO :sucursalb, :ptajesuc, :ultimo;
                        sucursalb.arr    [sucursalb.len]      = '\0';
                        staorag = sqlca.sqlcode;
                        while (staorag == 0 ) {
                               if (ultimo==0) {
                                   valor = redondo(valor_r * ptajesuc/100,2);
                                   valor_d -= valor;
                               }
                               else valor = valor_d;
//                             printf("gasto_comun<%s> codigo<%d> sucursalb.arr<%s> nitn<%14.0f> valor_r<%12.2f> valor_d<%12.2f> valor<%12.2f> ",gasto_comun.arr, codigo, sucursalb.arr, nitn, valor_r, valor_d, valor); getchar();
                               grabar_movtod();
                               EXEC SQL FETCH C7 INTO :sucursalb, :ptajesuc, :ultimo;
                               staorag = sqlca.sqlcode;
                        }
                        EXEC SQL CLOSE C7;
                    }
                    else {
                        EXEC SQL OPEN C9;
                        EXEC SQL FETCH C9 INTO :sucursalb, :ptajesuc, :ultimo;
                        sucursalb.arr    [sucursalb.len]      = '\0';
                        staorag = sqlca.sqlcode;
                        while (staorag == 0 ) {
                               if (ultimo==0) {
                                   valor = redondo(valor_r * ptajesuc/100,2);
                                   valor_d -= valor;
                               }
                               else valor = valor_d;
//                             printf("gasto_comun<%s> codigo<%d> sucursalb.arr<%s> nitn<%14.0f> valor_r<%12.2f> valor_d<%12.2f> valor<%12.2f> ",gasto_comun.arr, codigo, sucursalb.arr, nitn, valor_r, valor_d, valor); getchar();
                               grabar_movtod();
                               EXEC SQL FETCH C9 INTO :sucursalb, :ptajesuc, :ultimo;
                               staorag = sqlca.sqlcode;
                        }
                        EXEC SQL CLOSE C9;
                    }
                 }
                 else grabar_movtod();
              }

              EXEC SQL FETCH C6 INTO :nitn,       :codigo_nit,    :cuentab,   :db_cr, :valor,
                                     :identifica, :procedimiento, :ptaje,     :fecha_asto,
                                     :pro_pen,    :eps,           :tabla,     :sucursalb,
                                     :cen_cosb,   :gasto_comun,   :codigo;

              staora  = sqlca.sqlcode;

              if (sqlca.sqlcode == -1405 )
                 staora = 0;
              if (staora != 1403 && staora != 0)
                  fprintf (stderr, "Error leyendo C6 (%d)\n", staora);
//  printf("4) codigo_nitb=%s infa=%s infb.arr=%s infc.arr=%s infd.arr=%s valor_debb.arr=%s valor_creb.arr=%s",codigo_nitb.arr, infa.arr, infb.arr, infc.arr, infd.arr, valor_debb.arr, valor_creb.arr  ); getchar();
        }

        EXEC SQL CLOSE C6;
  }
}

void grabar_movtod()
{
              if (valor > 0 && db_cr == 0) {

                 sprintf(valor_debb.arr,"%10.2f",valor);
                 valor_debb.len = strlen(valor_debb.arr);
                 strcpy (valor_creb.arr,"");
                 valor_creb.len = strlen(valor_creb.arr);

                                          /* Graba en movto_d el Debito (C4) */

                 EXEC SQL insert into movto_d
                              	(CODIGO_EMP,
                	       	       ANO_MES,
                               	 CONSECUTIVO,
                	       	       SECUENCIA,
                      	       	 CUENTA,
                      	       	 INFA,
                      	       	 INFB,
                      	       	 INFC,
                      	       	 INFD,
                      	       	 CODIGO_NIT,
                      	       	 VALOR_DEB,
                      	       	 VALOR_CRE,
                      	       	 SUCURSAL,
                      	       	 CEN_COS)
                          values(to_number(:codigo_emp), 
                                 to_number(:ano_mes), 
                                 to_number(:consecutivob), 
                                 to_number(:secuenciab),
                                 :cuentab, :infa, :infb, :infc, :infd,
                                 to_number(:codigo_nitb), 
                                 to_number(:valor_debb, '999999999.99'), 
                                 to_number(:valor_creb, '999999999.99'), 
                                 :sucursalb, :cen_cosb);

	           if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) {
        	       printf("Error Grabando Debito (%d)\n", sqlca.sqlcode);
	               printf("codigo_emp <%s>",codigo_emp.arr);
        	       printf("ano_mesf <%s>",ano_mes.arr);
	               printf("consecutivob <%s>",consecutivob.arr);
        	       printf("secuenciab <%s>",secuenciab.arr);
	               printf("cuentab <%s>",cuentab.arr);
        	       printf("infa <%s>",infa.arr);
	               printf("infb <%s>",infb.arr);
        	       printf("infc <%s>",infc.arr);
	               printf("infd <%s>",infd.arr);
        	       printf("codigo_nitb <%s>\n",codigo_nitb.arr);
	               printf("valor_debb <%s>\n",valor_debb.arr);
        	       printf("valor_creb <%s>\n",valor_creb.arr);
	               printf("sucursalb <%s>\n",sucursalb.arr);
        	       printf("cen_cosb <%s>\n",cen_cosb.arr); getchar();
	           }

              }
              else if (valor > 0 ) {

                      strcpy (valor_debb.arr,"");
                      valor_debb.len = strlen(valor_debb.arr);
                      sprintf(valor_creb.arr,"%10.2f",valor);
                      valor_creb.len = strlen(valor_creb.arr);

//  printf("2) codigo_emp=%s ano_mes=%s comprobanteb.arr=%s consecutivob.arr=%s secuenciab.arr=%s cuentab.arr=%s fechab.arr=%s ",codigo_emp.arr,   ano_mes.arr,   comprobanteb.arr,   consecutivob.arr, secuenciab.arr, cuentab.arr, fechab.arr); getchar();
//  printf("3) codigo_nitb=%s infa=%s infb.arr=%s infc.arr=%s infd.arr=%s valor_debb.arr=%s valor_creb.arr=%s",codigo_nitb.arr, infa.arr, infb.arr, infc.arr, infd.arr, valor_debb.arr, valor_creb.arr  ); getchar();
                                         /* Graba en movto_d el Credito (C4) */

                      EXEC SQL insert into movto_d
                                  		(CODIGO_EMP,
                          	       		 ANO_MES,
                                       CONSECUTIVO,
                          	       	 	 SECUENCIA,
                          	       		 CUENTA,
                          	       		 INFA,
                          	       		 INFB,
                          	       		 INFC,
                          	       		 INFD,
                          	       		 CODIGO_NIT,
                          	       		 VALOR_DEB,
                          	       		 VALOR_CRE,
                          	       		 SUCURSAL,
                          	       		 CEN_COS)
                                values(to_number(:codigo_emp), 
                                       to_number(:ano_mes), 
                                       to_number(:consecutivob), 
                                       to_number(:secuenciab),
                                       :cuentab, :infa, :infb, :infc, :infd,
                                       to_number(:codigo_nitb), 
                                       to_number(:valor_debb, '999999999.99'), 
                                       to_number(:valor_creb, '999999999.99'), 
                                       :sucursalb, :cen_cosb);

		           if (sqlca.sqlcode != 1403 && sqlca.sqlcode != 0) {
		               printf("Error Grabando Credito (%d)\n", sqlca.sqlcode);
		               printf("codigo_emp <%s>",codigo_emp.arr);
		               printf("ano_mesf <%s>",ano_mes.arr);
		               printf("consecutivob <%s>",consecutivob.arr);
		               printf("secuenciab <%s>",secuenciab.arr);
			             printf("cuentab <%s>",cuentab.arr);
		               printf("infa <%s>",infa.arr);
		               printf("infb <%s>",infb.arr);
		               printf("infc <%s>",infc.arr);
		               printf("infd <%s>",infd.arr);
		               printf("codigo_nitb <%s>\n",codigo_nitb.arr);
		               printf("valor_debb <%s>\n",valor_debb.arr);
		               printf("valor_creb <%s>\n",valor_creb.arr);
		               printf("sucursalb <%s>\n",sucursalb.arr);
		               printf("cen_cosb <%s>\n",cen_cosb.arr); getchar();
		           }

              }
}

void ver_inf()
{
  EXEC SQL select infa, infb, infc, infd, nvl(gasto_comun,'D')
           into :veca, :vecb, :vecc, :vecd, :gasto_cc
           from   plan
           where  codigo_emp = :codigo_emp and
                  cuenta     = :cuentab;

  if (sqlca.sqlcode == 1403)
      printf ("Cuentab (%-s) no existe\n", cuentab.arr);

  veca.arr [veca.len] = '\0';
  vecb.arr [vecb.len] = '\0';
  vecc.arr [vecc.len] = '\0';
  vecd.arr [vecd.len] = '\0';

  strcpy (vecplan[1], veca.arr);
  strcpy (vecplan[2], vecb.arr);
  strcpy (vecplan[3], vecc.arr);
  strcpy (vecplan[4], vecd.arr);

  for (i=1;i<=4;i++) {
       strcpy(inf[i],"");
  }
  i=j=0;
  for (i=1;i<=4;i++) {
      if (!strcmp(vecplan[i],"NIT")) {
          sprintf(inf[i],"%12.0f",nitn);
      }
      for (j=1;j<=k;j++) {
          if (!strcmp(vecplan[i],vecinf[j].arr) && strcmp(vecplan[i],"") ) {
              strcpy(inf[i],codigox.arr);
          }
      }
  }
  strcpy (infa.arr, inf[1]);
  strcpy (infb.arr, inf[2]);
  strcpy (infc.arr, inf[3]);
  strcpy (infd.arr, inf[4]);
  infa.len = strlen(infa.arr);
  infb.len = strlen(infb.arr);
  infc.len = strlen(infc.arr);
  infd.len = strlen(infd.arr);
}
